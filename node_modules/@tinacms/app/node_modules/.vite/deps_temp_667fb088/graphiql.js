import {
  getFragmentDependenciesForAST,
  getOperationFacts
} from "./chunk-UEYV2QE6.js";
import {
  $1746a345f3d73bb7$export$f680877a34711e37,
  $3db38b7d1fb3fe6a$export$b7ece24a22aeda8c,
  $5cb92bef7577960e$export$177fb62ff3ec1f22,
  $5e63c961fc1ce211$export$8c6ed5c666ac1360,
  $5e63c961fc1ce211$export$d9f1ccf0bdb05d45,
  $6ed0406888f73fc4$export$c7b2cbe3552a0d05,
  $71cd76cc60e0454e$export$6f32135080cb4c3,
  $8927f6f2acc4f386$export$250ffa63cdc0d034,
  $921a889cee6df7e8$export$99c2b779aa4e8b8b,
  $c512c27ab02ef895$export$50c7b4e9d9f19c1,
  $c512c27ab02ef895$export$fd42f52fd3ae1109,
  $cf1ac5d9fe0e8206$export$21b07c8f274aebd5,
  $cf1ac5d9fe0e8206$export$722aac194ae923,
  $cf1ac5d9fe0e8206$export$7c6e2c02157bb7d2,
  $cf1ac5d9fe0e8206$export$b688253958b8dfe7,
  $cf1ac5d9fe0e8206$export$be92b6f5f03c0fe9,
  $d08ef79370b62062$export$41fb9f06171c75f4,
  $d08ef79370b62062$export$602eac185826482c,
  $d08ef79370b62062$export$6d08773d2e66f8f2,
  $d08ef79370b62062$export$7c6e2c02157bb7d2,
  $d08ef79370b62062$export$be92b6f5f03c0fe9,
  $d3863c46a17e8a28$export$20e40289641fbbb6,
  $e42e1063c40fb3ef$export$b9ecd428b558ff10,
  $f1701beae083dbae$export$602eac185826482c,
  Combination_default,
  __assign,
  __extends,
  __read,
  __rest,
  __spreadArray,
  clsx,
  hideOthers
} from "./chunk-A65SBKQX.js";
import {
  _extends
} from "./chunk-SJ46GW5Y.js";
import {
  require_jsx_runtime
} from "./chunk-W7ITBZIX.js";
import {
  HistoryStore,
  StorageAPI,
  fetcherReturnToPromise,
  fillLeafs,
  formatError,
  formatResult,
  getSelectedOperationName,
  isAsyncIterable,
  isObservable,
  isPromise,
  mergeAst
} from "./chunk-BRI56Q3P.js";
import {
  astFromValue,
  buildClientSchema,
  getIntrospectionQuery,
  isAbstractType,
  isEnumType,
  isInputObjectType,
  isInterfaceType,
  isListType,
  isNamedType,
  isNonNullType,
  isObjectType,
  isScalarType,
  isSchema,
  isType,
  isUnionType,
  parse,
  print,
  validateSchema,
  visit
} from "./chunk-HD22INE4.js";
import {
  require_react_dom
} from "./chunk-ZTTAKKQO.js";
import {
  require_react
} from "./chunk-RS2Q24XY.js";
import {
  __commonJS,
  __esm,
  __export,
  __toCommonJS,
  __toESM
} from "./chunk-AUZ3RYOM.js";

// node_modules/is-primitive/index.js
var require_is_primitive = __commonJS({
  "node_modules/is-primitive/index.js"(exports, module) {
    "use strict";
    module.exports = function isPrimitive(val) {
      if (typeof val === "object") {
        return val === null;
      }
      return typeof val !== "function";
    };
  }
});

// node_modules/isobject/index.js
var require_isobject = __commonJS({
  "node_modules/isobject/index.js"(exports, module) {
    "use strict";
    module.exports = function isObject(val) {
      return val != null && typeof val === "object" && Array.isArray(val) === false;
    };
  }
});

// node_modules/is-plain-object/index.js
var require_is_plain_object = __commonJS({
  "node_modules/is-plain-object/index.js"(exports, module) {
    "use strict";
    var isObject = require_isobject();
    function isObjectObject(o14) {
      return isObject(o14) === true && Object.prototype.toString.call(o14) === "[object Object]";
    }
    module.exports = function isPlainObject(o14) {
      var ctor, prot;
      if (isObjectObject(o14) === false)
        return false;
      ctor = o14.constructor;
      if (typeof ctor !== "function")
        return false;
      prot = ctor.prototype;
      if (isObjectObject(prot) === false)
        return false;
      if (prot.hasOwnProperty("isPrototypeOf") === false) {
        return false;
      }
      return true;
    };
  }
});

// node_modules/set-value/index.js
var require_set_value = __commonJS({
  "node_modules/set-value/index.js"(exports, module) {
    "use strict";
    var { deleteProperty } = Reflect;
    var isPrimitive = require_is_primitive();
    var isPlainObject = require_is_plain_object();
    var isObject = (value) => {
      return typeof value === "object" && value !== null || typeof value === "function";
    };
    var isUnsafeKey = (key) => {
      return key === "__proto__" || key === "constructor" || key === "prototype";
    };
    var validateKey = (key) => {
      if (!isPrimitive(key)) {
        throw new TypeError("Object keys must be strings or symbols");
      }
      if (isUnsafeKey(key)) {
        throw new Error(`Cannot set unsafe key: "${key}"`);
      }
    };
    var toStringKey = (input) => {
      return Array.isArray(input) ? input.flat().map(String).join(",") : input;
    };
    var createMemoKey = (input, options) => {
      if (typeof input !== "string" || !options)
        return input;
      let key = input + ";";
      if (options.arrays !== void 0)
        key += `arrays=${options.arrays};`;
      if (options.separator !== void 0)
        key += `separator=${options.separator};`;
      if (options.split !== void 0)
        key += `split=${options.split};`;
      if (options.merge !== void 0)
        key += `merge=${options.merge};`;
      if (options.preservePaths !== void 0)
        key += `preservePaths=${options.preservePaths};`;
      return key;
    };
    var memoize2 = (input, options, fn) => {
      const key = toStringKey(options ? createMemoKey(input, options) : input);
      validateKey(key);
      const value = setValue.cache.get(key) || fn();
      setValue.cache.set(key, value);
      return value;
    };
    var splitString = (input, options = {}) => {
      const sep = options.separator || ".";
      const preserve = sep === "/" ? false : options.preservePaths;
      if (typeof input === "string" && preserve !== false && /\//.test(input)) {
        return [input];
      }
      const parts = [];
      let part = "";
      const push = (part2) => {
        let number2;
        if (part2.trim() !== "" && Number.isInteger(number2 = Number(part2))) {
          parts.push(number2);
        } else {
          parts.push(part2);
        }
      };
      for (let i9 = 0; i9 < input.length; i9++) {
        const value = input[i9];
        if (value === "\\") {
          part += input[++i9];
          continue;
        }
        if (value === sep) {
          push(part);
          part = "";
          continue;
        }
        part += value;
      }
      if (part) {
        push(part);
      }
      return parts;
    };
    var split = (input, options) => {
      if (options && typeof options.split === "function")
        return options.split(input);
      if (typeof input === "symbol")
        return [input];
      if (Array.isArray(input))
        return input;
      return memoize2(input, options, () => splitString(input, options));
    };
    var assignProp = (obj, prop, value, options) => {
      validateKey(prop);
      if (value === void 0) {
        deleteProperty(obj, prop);
      } else if (options && options.merge) {
        const merge = options.merge === "function" ? options.merge : Object.assign;
        if (merge && isPlainObject(obj[prop]) && isPlainObject(value)) {
          obj[prop] = merge(obj[prop], value);
        } else {
          obj[prop] = value;
        }
      } else {
        obj[prop] = value;
      }
      return obj;
    };
    var setValue = (target, path, value, options) => {
      if (!path || !isObject(target))
        return target;
      const keys = split(path, options);
      let obj = target;
      for (let i9 = 0; i9 < keys.length; i9++) {
        const key = keys[i9];
        const next = keys[i9 + 1];
        validateKey(key);
        if (next === void 0) {
          assignProp(obj, key, value, options);
          break;
        }
        if (typeof next === "number" && !Array.isArray(obj[key])) {
          obj = obj[key] = [];
          continue;
        }
        if (!isObject(obj[key])) {
          obj[key] = {};
        }
        obj = obj[key];
      }
      return target;
    };
    setValue.split = split;
    setValue.cache = /* @__PURE__ */ new Map();
    setValue.clear = () => {
      setValue.cache = /* @__PURE__ */ new Map();
    };
    module.exports = setValue;
  }
});

// node_modules/toggle-selection/index.js
var require_toggle_selection = __commonJS({
  "node_modules/toggle-selection/index.js"(exports, module) {
    module.exports = function() {
      var selection = document.getSelection();
      if (!selection.rangeCount) {
        return function() {
        };
      }
      var active = document.activeElement;
      var ranges = [];
      for (var i9 = 0; i9 < selection.rangeCount; i9++) {
        ranges.push(selection.getRangeAt(i9));
      }
      switch (active.tagName.toUpperCase()) {
        case "INPUT":
        case "TEXTAREA":
          active.blur();
          break;
        default:
          active = null;
          break;
      }
      selection.removeAllRanges();
      return function() {
        selection.type === "Caret" && selection.removeAllRanges();
        if (!selection.rangeCount) {
          ranges.forEach(function(range) {
            selection.addRange(range);
          });
        }
        active && active.focus();
      };
    };
  }
});

// node_modules/copy-to-clipboard/index.js
var require_copy_to_clipboard = __commonJS({
  "node_modules/copy-to-clipboard/index.js"(exports, module) {
    "use strict";
    var deselectCurrent = require_toggle_selection();
    var clipboardToIE11Formatting = {
      "text/plain": "Text",
      "text/html": "Url",
      "default": "Text"
    };
    var defaultMessage = "Copy to clipboard: #{key}, Enter";
    function format(message) {
      var copyKey = (/mac os x/i.test(navigator.userAgent) ? "⌘" : "Ctrl") + "+C";
      return message.replace(/#{\s*key\s*}/g, copyKey);
    }
    function copy(text, options) {
      var debug, message, reselectPrevious, range, selection, mark, success = false;
      if (!options) {
        options = {};
      }
      debug = options.debug || false;
      try {
        reselectPrevious = deselectCurrent();
        range = document.createRange();
        selection = document.getSelection();
        mark = document.createElement("span");
        mark.textContent = text;
        mark.ariaHidden = "true";
        mark.style.all = "unset";
        mark.style.position = "fixed";
        mark.style.top = 0;
        mark.style.clip = "rect(0, 0, 0, 0)";
        mark.style.whiteSpace = "pre";
        mark.style.webkitUserSelect = "text";
        mark.style.MozUserSelect = "text";
        mark.style.msUserSelect = "text";
        mark.style.userSelect = "text";
        mark.addEventListener("copy", function(e4) {
          e4.stopPropagation();
          if (options.format) {
            e4.preventDefault();
            if (typeof e4.clipboardData === "undefined") {
              debug && console.warn("unable to use e.clipboardData");
              debug && console.warn("trying IE specific stuff");
              window.clipboardData.clearData();
              var format2 = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting["default"];
              window.clipboardData.setData(format2, text);
            } else {
              e4.clipboardData.clearData();
              e4.clipboardData.setData(options.format, text);
            }
          }
          if (options.onCopy) {
            e4.preventDefault();
            options.onCopy(e4.clipboardData);
          }
        });
        document.body.appendChild(mark);
        range.selectNodeContents(mark);
        selection.addRange(range);
        var successful = document.execCommand("copy");
        if (!successful) {
          throw new Error("copy command was unsuccessful");
        }
        success = true;
      } catch (err) {
        debug && console.error("unable to copy using execCommand: ", err);
        debug && console.warn("trying IE specific stuff");
        try {
          window.clipboardData.setData(options.format || "text", text);
          options.onCopy && options.onCopy(window.clipboardData);
          success = true;
        } catch (err2) {
          debug && console.error("unable to copy using clipboardData: ", err2);
          debug && console.error("falling back to prompt");
          message = format("message" in options ? options.message : defaultMessage);
          window.prompt(message, text);
        }
      } finally {
        if (selection) {
          if (typeof selection.removeRange == "function") {
            selection.removeRange(range);
          } else {
            selection.removeAllRanges();
          }
        }
        if (mark) {
          document.body.removeChild(mark);
        }
        reselectPrevious();
      }
      return success;
    }
    module.exports = copy;
  }
});

// node_modules/markdown-it/node_modules/entities/lib/maps/entities.json
var require_entities = __commonJS({
  "node_modules/markdown-it/node_modules/entities/lib/maps/entities.json"(exports, module) {
    module.exports = { Aacute: "Á", aacute: "á", Abreve: "Ă", abreve: "ă", ac: "∾", acd: "∿", acE: "∾̳", Acirc: "Â", acirc: "â", acute: "´", Acy: "А", acy: "а", AElig: "Æ", aelig: "æ", af: "⁡", Afr: "𝔄", afr: "𝔞", Agrave: "À", agrave: "à", alefsym: "ℵ", aleph: "ℵ", Alpha: "Α", alpha: "α", Amacr: "Ā", amacr: "ā", amalg: "⨿", amp: "&", AMP: "&", andand: "⩕", And: "⩓", and: "∧", andd: "⩜", andslope: "⩘", andv: "⩚", ang: "∠", ange: "⦤", angle: "∠", angmsdaa: "⦨", angmsdab: "⦩", angmsdac: "⦪", angmsdad: "⦫", angmsdae: "⦬", angmsdaf: "⦭", angmsdag: "⦮", angmsdah: "⦯", angmsd: "∡", angrt: "∟", angrtvb: "⊾", angrtvbd: "⦝", angsph: "∢", angst: "Å", angzarr: "⍼", Aogon: "Ą", aogon: "ą", Aopf: "𝔸", aopf: "𝕒", apacir: "⩯", ap: "≈", apE: "⩰", ape: "≊", apid: "≋", apos: "'", ApplyFunction: "⁡", approx: "≈", approxeq: "≊", Aring: "Å", aring: "å", Ascr: "𝒜", ascr: "𝒶", Assign: "≔", ast: "*", asymp: "≈", asympeq: "≍", Atilde: "Ã", atilde: "ã", Auml: "Ä", auml: "ä", awconint: "∳", awint: "⨑", backcong: "≌", backepsilon: "϶", backprime: "‵", backsim: "∽", backsimeq: "⋍", Backslash: "∖", Barv: "⫧", barvee: "⊽", barwed: "⌅", Barwed: "⌆", barwedge: "⌅", bbrk: "⎵", bbrktbrk: "⎶", bcong: "≌", Bcy: "Б", bcy: "б", bdquo: "„", becaus: "∵", because: "∵", Because: "∵", bemptyv: "⦰", bepsi: "϶", bernou: "ℬ", Bernoullis: "ℬ", Beta: "Β", beta: "β", beth: "ℶ", between: "≬", Bfr: "𝔅", bfr: "𝔟", bigcap: "⋂", bigcirc: "◯", bigcup: "⋃", bigodot: "⨀", bigoplus: "⨁", bigotimes: "⨂", bigsqcup: "⨆", bigstar: "★", bigtriangledown: "▽", bigtriangleup: "△", biguplus: "⨄", bigvee: "⋁", bigwedge: "⋀", bkarow: "⤍", blacklozenge: "⧫", blacksquare: "▪", blacktriangle: "▴", blacktriangledown: "▾", blacktriangleleft: "◂", blacktriangleright: "▸", blank: "␣", blk12: "▒", blk14: "░", blk34: "▓", block: "█", bne: "=⃥", bnequiv: "≡⃥", bNot: "⫭", bnot: "⌐", Bopf: "𝔹", bopf: "𝕓", bot: "⊥", bottom: "⊥", bowtie: "⋈", boxbox: "⧉", boxdl: "┐", boxdL: "╕", boxDl: "╖", boxDL: "╗", boxdr: "┌", boxdR: "╒", boxDr: "╓", boxDR: "╔", boxh: "─", boxH: "═", boxhd: "┬", boxHd: "╤", boxhD: "╥", boxHD: "╦", boxhu: "┴", boxHu: "╧", boxhU: "╨", boxHU: "╩", boxminus: "⊟", boxplus: "⊞", boxtimes: "⊠", boxul: "┘", boxuL: "╛", boxUl: "╜", boxUL: "╝", boxur: "└", boxuR: "╘", boxUr: "╙", boxUR: "╚", boxv: "│", boxV: "║", boxvh: "┼", boxvH: "╪", boxVh: "╫", boxVH: "╬", boxvl: "┤", boxvL: "╡", boxVl: "╢", boxVL: "╣", boxvr: "├", boxvR: "╞", boxVr: "╟", boxVR: "╠", bprime: "‵", breve: "˘", Breve: "˘", brvbar: "¦", bscr: "𝒷", Bscr: "ℬ", bsemi: "⁏", bsim: "∽", bsime: "⋍", bsolb: "⧅", bsol: "\\", bsolhsub: "⟈", bull: "•", bullet: "•", bump: "≎", bumpE: "⪮", bumpe: "≏", Bumpeq: "≎", bumpeq: "≏", Cacute: "Ć", cacute: "ć", capand: "⩄", capbrcup: "⩉", capcap: "⩋", cap: "∩", Cap: "⋒", capcup: "⩇", capdot: "⩀", CapitalDifferentialD: "ⅅ", caps: "∩︀", caret: "⁁", caron: "ˇ", Cayleys: "ℭ", ccaps: "⩍", Ccaron: "Č", ccaron: "č", Ccedil: "Ç", ccedil: "ç", Ccirc: "Ĉ", ccirc: "ĉ", Cconint: "∰", ccups: "⩌", ccupssm: "⩐", Cdot: "Ċ", cdot: "ċ", cedil: "¸", Cedilla: "¸", cemptyv: "⦲", cent: "¢", centerdot: "·", CenterDot: "·", cfr: "𝔠", Cfr: "ℭ", CHcy: "Ч", chcy: "ч", check: "✓", checkmark: "✓", Chi: "Χ", chi: "χ", circ: "ˆ", circeq: "≗", circlearrowleft: "↺", circlearrowright: "↻", circledast: "⊛", circledcirc: "⊚", circleddash: "⊝", CircleDot: "⊙", circledR: "®", circledS: "Ⓢ", CircleMinus: "⊖", CirclePlus: "⊕", CircleTimes: "⊗", cir: "○", cirE: "⧃", cire: "≗", cirfnint: "⨐", cirmid: "⫯", cirscir: "⧂", ClockwiseContourIntegral: "∲", CloseCurlyDoubleQuote: "”", CloseCurlyQuote: "’", clubs: "♣", clubsuit: "♣", colon: ":", Colon: "∷", Colone: "⩴", colone: "≔", coloneq: "≔", comma: ",", commat: "@", comp: "∁", compfn: "∘", complement: "∁", complexes: "ℂ", cong: "≅", congdot: "⩭", Congruent: "≡", conint: "∮", Conint: "∯", ContourIntegral: "∮", copf: "𝕔", Copf: "ℂ", coprod: "∐", Coproduct: "∐", copy: "©", COPY: "©", copysr: "℗", CounterClockwiseContourIntegral: "∳", crarr: "↵", cross: "✗", Cross: "⨯", Cscr: "𝒞", cscr: "𝒸", csub: "⫏", csube: "⫑", csup: "⫐", csupe: "⫒", ctdot: "⋯", cudarrl: "⤸", cudarrr: "⤵", cuepr: "⋞", cuesc: "⋟", cularr: "↶", cularrp: "⤽", cupbrcap: "⩈", cupcap: "⩆", CupCap: "≍", cup: "∪", Cup: "⋓", cupcup: "⩊", cupdot: "⊍", cupor: "⩅", cups: "∪︀", curarr: "↷", curarrm: "⤼", curlyeqprec: "⋞", curlyeqsucc: "⋟", curlyvee: "⋎", curlywedge: "⋏", curren: "¤", curvearrowleft: "↶", curvearrowright: "↷", cuvee: "⋎", cuwed: "⋏", cwconint: "∲", cwint: "∱", cylcty: "⌭", dagger: "†", Dagger: "‡", daleth: "ℸ", darr: "↓", Darr: "↡", dArr: "⇓", dash: "‐", Dashv: "⫤", dashv: "⊣", dbkarow: "⤏", dblac: "˝", Dcaron: "Ď", dcaron: "ď", Dcy: "Д", dcy: "д", ddagger: "‡", ddarr: "⇊", DD: "ⅅ", dd: "ⅆ", DDotrahd: "⤑", ddotseq: "⩷", deg: "°", Del: "∇", Delta: "Δ", delta: "δ", demptyv: "⦱", dfisht: "⥿", Dfr: "𝔇", dfr: "𝔡", dHar: "⥥", dharl: "⇃", dharr: "⇂", DiacriticalAcute: "´", DiacriticalDot: "˙", DiacriticalDoubleAcute: "˝", DiacriticalGrave: "`", DiacriticalTilde: "˜", diam: "⋄", diamond: "⋄", Diamond: "⋄", diamondsuit: "♦", diams: "♦", die: "¨", DifferentialD: "ⅆ", digamma: "ϝ", disin: "⋲", div: "÷", divide: "÷", divideontimes: "⋇", divonx: "⋇", DJcy: "Ђ", djcy: "ђ", dlcorn: "⌞", dlcrop: "⌍", dollar: "$", Dopf: "𝔻", dopf: "𝕕", Dot: "¨", dot: "˙", DotDot: "⃜", doteq: "≐", doteqdot: "≑", DotEqual: "≐", dotminus: "∸", dotplus: "∔", dotsquare: "⊡", doublebarwedge: "⌆", DoubleContourIntegral: "∯", DoubleDot: "¨", DoubleDownArrow: "⇓", DoubleLeftArrow: "⇐", DoubleLeftRightArrow: "⇔", DoubleLeftTee: "⫤", DoubleLongLeftArrow: "⟸", DoubleLongLeftRightArrow: "⟺", DoubleLongRightArrow: "⟹", DoubleRightArrow: "⇒", DoubleRightTee: "⊨", DoubleUpArrow: "⇑", DoubleUpDownArrow: "⇕", DoubleVerticalBar: "∥", DownArrowBar: "⤓", downarrow: "↓", DownArrow: "↓", Downarrow: "⇓", DownArrowUpArrow: "⇵", DownBreve: "̑", downdownarrows: "⇊", downharpoonleft: "⇃", downharpoonright: "⇂", DownLeftRightVector: "⥐", DownLeftTeeVector: "⥞", DownLeftVectorBar: "⥖", DownLeftVector: "↽", DownRightTeeVector: "⥟", DownRightVectorBar: "⥗", DownRightVector: "⇁", DownTeeArrow: "↧", DownTee: "⊤", drbkarow: "⤐", drcorn: "⌟", drcrop: "⌌", Dscr: "𝒟", dscr: "𝒹", DScy: "Ѕ", dscy: "ѕ", dsol: "⧶", Dstrok: "Đ", dstrok: "đ", dtdot: "⋱", dtri: "▿", dtrif: "▾", duarr: "⇵", duhar: "⥯", dwangle: "⦦", DZcy: "Џ", dzcy: "џ", dzigrarr: "⟿", Eacute: "É", eacute: "é", easter: "⩮", Ecaron: "Ě", ecaron: "ě", Ecirc: "Ê", ecirc: "ê", ecir: "≖", ecolon: "≕", Ecy: "Э", ecy: "э", eDDot: "⩷", Edot: "Ė", edot: "ė", eDot: "≑", ee: "ⅇ", efDot: "≒", Efr: "𝔈", efr: "𝔢", eg: "⪚", Egrave: "È", egrave: "è", egs: "⪖", egsdot: "⪘", el: "⪙", Element: "∈", elinters: "⏧", ell: "ℓ", els: "⪕", elsdot: "⪗", Emacr: "Ē", emacr: "ē", empty: "∅", emptyset: "∅", EmptySmallSquare: "◻", emptyv: "∅", EmptyVerySmallSquare: "▫", emsp13: " ", emsp14: " ", emsp: " ", ENG: "Ŋ", eng: "ŋ", ensp: " ", Eogon: "Ę", eogon: "ę", Eopf: "𝔼", eopf: "𝕖", epar: "⋕", eparsl: "⧣", eplus: "⩱", epsi: "ε", Epsilon: "Ε", epsilon: "ε", epsiv: "ϵ", eqcirc: "≖", eqcolon: "≕", eqsim: "≂", eqslantgtr: "⪖", eqslantless: "⪕", Equal: "⩵", equals: "=", EqualTilde: "≂", equest: "≟", Equilibrium: "⇌", equiv: "≡", equivDD: "⩸", eqvparsl: "⧥", erarr: "⥱", erDot: "≓", escr: "ℯ", Escr: "ℰ", esdot: "≐", Esim: "⩳", esim: "≂", Eta: "Η", eta: "η", ETH: "Ð", eth: "ð", Euml: "Ë", euml: "ë", euro: "€", excl: "!", exist: "∃", Exists: "∃", expectation: "ℰ", exponentiale: "ⅇ", ExponentialE: "ⅇ", fallingdotseq: "≒", Fcy: "Ф", fcy: "ф", female: "♀", ffilig: "ﬃ", fflig: "ﬀ", ffllig: "ﬄ", Ffr: "𝔉", ffr: "𝔣", filig: "ﬁ", FilledSmallSquare: "◼", FilledVerySmallSquare: "▪", fjlig: "fj", flat: "♭", fllig: "ﬂ", fltns: "▱", fnof: "ƒ", Fopf: "𝔽", fopf: "𝕗", forall: "∀", ForAll: "∀", fork: "⋔", forkv: "⫙", Fouriertrf: "ℱ", fpartint: "⨍", frac12: "½", frac13: "⅓", frac14: "¼", frac15: "⅕", frac16: "⅙", frac18: "⅛", frac23: "⅔", frac25: "⅖", frac34: "¾", frac35: "⅗", frac38: "⅜", frac45: "⅘", frac56: "⅚", frac58: "⅝", frac78: "⅞", frasl: "⁄", frown: "⌢", fscr: "𝒻", Fscr: "ℱ", gacute: "ǵ", Gamma: "Γ", gamma: "γ", Gammad: "Ϝ", gammad: "ϝ", gap: "⪆", Gbreve: "Ğ", gbreve: "ğ", Gcedil: "Ģ", Gcirc: "Ĝ", gcirc: "ĝ", Gcy: "Г", gcy: "г", Gdot: "Ġ", gdot: "ġ", ge: "≥", gE: "≧", gEl: "⪌", gel: "⋛", geq: "≥", geqq: "≧", geqslant: "⩾", gescc: "⪩", ges: "⩾", gesdot: "⪀", gesdoto: "⪂", gesdotol: "⪄", gesl: "⋛︀", gesles: "⪔", Gfr: "𝔊", gfr: "𝔤", gg: "≫", Gg: "⋙", ggg: "⋙", gimel: "ℷ", GJcy: "Ѓ", gjcy: "ѓ", gla: "⪥", gl: "≷", glE: "⪒", glj: "⪤", gnap: "⪊", gnapprox: "⪊", gne: "⪈", gnE: "≩", gneq: "⪈", gneqq: "≩", gnsim: "⋧", Gopf: "𝔾", gopf: "𝕘", grave: "`", GreaterEqual: "≥", GreaterEqualLess: "⋛", GreaterFullEqual: "≧", GreaterGreater: "⪢", GreaterLess: "≷", GreaterSlantEqual: "⩾", GreaterTilde: "≳", Gscr: "𝒢", gscr: "ℊ", gsim: "≳", gsime: "⪎", gsiml: "⪐", gtcc: "⪧", gtcir: "⩺", gt: ">", GT: ">", Gt: "≫", gtdot: "⋗", gtlPar: "⦕", gtquest: "⩼", gtrapprox: "⪆", gtrarr: "⥸", gtrdot: "⋗", gtreqless: "⋛", gtreqqless: "⪌", gtrless: "≷", gtrsim: "≳", gvertneqq: "≩︀", gvnE: "≩︀", Hacek: "ˇ", hairsp: " ", half: "½", hamilt: "ℋ", HARDcy: "Ъ", hardcy: "ъ", harrcir: "⥈", harr: "↔", hArr: "⇔", harrw: "↭", Hat: "^", hbar: "ℏ", Hcirc: "Ĥ", hcirc: "ĥ", hearts: "♥", heartsuit: "♥", hellip: "…", hercon: "⊹", hfr: "𝔥", Hfr: "ℌ", HilbertSpace: "ℋ", hksearow: "⤥", hkswarow: "⤦", hoarr: "⇿", homtht: "∻", hookleftarrow: "↩", hookrightarrow: "↪", hopf: "𝕙", Hopf: "ℍ", horbar: "―", HorizontalLine: "─", hscr: "𝒽", Hscr: "ℋ", hslash: "ℏ", Hstrok: "Ħ", hstrok: "ħ", HumpDownHump: "≎", HumpEqual: "≏", hybull: "⁃", hyphen: "‐", Iacute: "Í", iacute: "í", ic: "⁣", Icirc: "Î", icirc: "î", Icy: "И", icy: "и", Idot: "İ", IEcy: "Е", iecy: "е", iexcl: "¡", iff: "⇔", ifr: "𝔦", Ifr: "ℑ", Igrave: "Ì", igrave: "ì", ii: "ⅈ", iiiint: "⨌", iiint: "∭", iinfin: "⧜", iiota: "℩", IJlig: "Ĳ", ijlig: "ĳ", Imacr: "Ī", imacr: "ī", image: "ℑ", ImaginaryI: "ⅈ", imagline: "ℐ", imagpart: "ℑ", imath: "ı", Im: "ℑ", imof: "⊷", imped: "Ƶ", Implies: "⇒", incare: "℅", in: "∈", infin: "∞", infintie: "⧝", inodot: "ı", intcal: "⊺", int: "∫", Int: "∬", integers: "ℤ", Integral: "∫", intercal: "⊺", Intersection: "⋂", intlarhk: "⨗", intprod: "⨼", InvisibleComma: "⁣", InvisibleTimes: "⁢", IOcy: "Ё", iocy: "ё", Iogon: "Į", iogon: "į", Iopf: "𝕀", iopf: "𝕚", Iota: "Ι", iota: "ι", iprod: "⨼", iquest: "¿", iscr: "𝒾", Iscr: "ℐ", isin: "∈", isindot: "⋵", isinE: "⋹", isins: "⋴", isinsv: "⋳", isinv: "∈", it: "⁢", Itilde: "Ĩ", itilde: "ĩ", Iukcy: "І", iukcy: "і", Iuml: "Ï", iuml: "ï", Jcirc: "Ĵ", jcirc: "ĵ", Jcy: "Й", jcy: "й", Jfr: "𝔍", jfr: "𝔧", jmath: "ȷ", Jopf: "𝕁", jopf: "𝕛", Jscr: "𝒥", jscr: "𝒿", Jsercy: "Ј", jsercy: "ј", Jukcy: "Є", jukcy: "є", Kappa: "Κ", kappa: "κ", kappav: "ϰ", Kcedil: "Ķ", kcedil: "ķ", Kcy: "К", kcy: "к", Kfr: "𝔎", kfr: "𝔨", kgreen: "ĸ", KHcy: "Х", khcy: "х", KJcy: "Ќ", kjcy: "ќ", Kopf: "𝕂", kopf: "𝕜", Kscr: "𝒦", kscr: "𝓀", lAarr: "⇚", Lacute: "Ĺ", lacute: "ĺ", laemptyv: "⦴", lagran: "ℒ", Lambda: "Λ", lambda: "λ", lang: "⟨", Lang: "⟪", langd: "⦑", langle: "⟨", lap: "⪅", Laplacetrf: "ℒ", laquo: "«", larrb: "⇤", larrbfs: "⤟", larr: "←", Larr: "↞", lArr: "⇐", larrfs: "⤝", larrhk: "↩", larrlp: "↫", larrpl: "⤹", larrsim: "⥳", larrtl: "↢", latail: "⤙", lAtail: "⤛", lat: "⪫", late: "⪭", lates: "⪭︀", lbarr: "⤌", lBarr: "⤎", lbbrk: "❲", lbrace: "{", lbrack: "[", lbrke: "⦋", lbrksld: "⦏", lbrkslu: "⦍", Lcaron: "Ľ", lcaron: "ľ", Lcedil: "Ļ", lcedil: "ļ", lceil: "⌈", lcub: "{", Lcy: "Л", lcy: "л", ldca: "⤶", ldquo: "“", ldquor: "„", ldrdhar: "⥧", ldrushar: "⥋", ldsh: "↲", le: "≤", lE: "≦", LeftAngleBracket: "⟨", LeftArrowBar: "⇤", leftarrow: "←", LeftArrow: "←", Leftarrow: "⇐", LeftArrowRightArrow: "⇆", leftarrowtail: "↢", LeftCeiling: "⌈", LeftDoubleBracket: "⟦", LeftDownTeeVector: "⥡", LeftDownVectorBar: "⥙", LeftDownVector: "⇃", LeftFloor: "⌊", leftharpoondown: "↽", leftharpoonup: "↼", leftleftarrows: "⇇", leftrightarrow: "↔", LeftRightArrow: "↔", Leftrightarrow: "⇔", leftrightarrows: "⇆", leftrightharpoons: "⇋", leftrightsquigarrow: "↭", LeftRightVector: "⥎", LeftTeeArrow: "↤", LeftTee: "⊣", LeftTeeVector: "⥚", leftthreetimes: "⋋", LeftTriangleBar: "⧏", LeftTriangle: "⊲", LeftTriangleEqual: "⊴", LeftUpDownVector: "⥑", LeftUpTeeVector: "⥠", LeftUpVectorBar: "⥘", LeftUpVector: "↿", LeftVectorBar: "⥒", LeftVector: "↼", lEg: "⪋", leg: "⋚", leq: "≤", leqq: "≦", leqslant: "⩽", lescc: "⪨", les: "⩽", lesdot: "⩿", lesdoto: "⪁", lesdotor: "⪃", lesg: "⋚︀", lesges: "⪓", lessapprox: "⪅", lessdot: "⋖", lesseqgtr: "⋚", lesseqqgtr: "⪋", LessEqualGreater: "⋚", LessFullEqual: "≦", LessGreater: "≶", lessgtr: "≶", LessLess: "⪡", lesssim: "≲", LessSlantEqual: "⩽", LessTilde: "≲", lfisht: "⥼", lfloor: "⌊", Lfr: "𝔏", lfr: "𝔩", lg: "≶", lgE: "⪑", lHar: "⥢", lhard: "↽", lharu: "↼", lharul: "⥪", lhblk: "▄", LJcy: "Љ", ljcy: "љ", llarr: "⇇", ll: "≪", Ll: "⋘", llcorner: "⌞", Lleftarrow: "⇚", llhard: "⥫", lltri: "◺", Lmidot: "Ŀ", lmidot: "ŀ", lmoustache: "⎰", lmoust: "⎰", lnap: "⪉", lnapprox: "⪉", lne: "⪇", lnE: "≨", lneq: "⪇", lneqq: "≨", lnsim: "⋦", loang: "⟬", loarr: "⇽", lobrk: "⟦", longleftarrow: "⟵", LongLeftArrow: "⟵", Longleftarrow: "⟸", longleftrightarrow: "⟷", LongLeftRightArrow: "⟷", Longleftrightarrow: "⟺", longmapsto: "⟼", longrightarrow: "⟶", LongRightArrow: "⟶", Longrightarrow: "⟹", looparrowleft: "↫", looparrowright: "↬", lopar: "⦅", Lopf: "𝕃", lopf: "𝕝", loplus: "⨭", lotimes: "⨴", lowast: "∗", lowbar: "_", LowerLeftArrow: "↙", LowerRightArrow: "↘", loz: "◊", lozenge: "◊", lozf: "⧫", lpar: "(", lparlt: "⦓", lrarr: "⇆", lrcorner: "⌟", lrhar: "⇋", lrhard: "⥭", lrm: "‎", lrtri: "⊿", lsaquo: "‹", lscr: "𝓁", Lscr: "ℒ", lsh: "↰", Lsh: "↰", lsim: "≲", lsime: "⪍", lsimg: "⪏", lsqb: "[", lsquo: "‘", lsquor: "‚", Lstrok: "Ł", lstrok: "ł", ltcc: "⪦", ltcir: "⩹", lt: "<", LT: "<", Lt: "≪", ltdot: "⋖", lthree: "⋋", ltimes: "⋉", ltlarr: "⥶", ltquest: "⩻", ltri: "◃", ltrie: "⊴", ltrif: "◂", ltrPar: "⦖", lurdshar: "⥊", luruhar: "⥦", lvertneqq: "≨︀", lvnE: "≨︀", macr: "¯", male: "♂", malt: "✠", maltese: "✠", Map: "⤅", map: "↦", mapsto: "↦", mapstodown: "↧", mapstoleft: "↤", mapstoup: "↥", marker: "▮", mcomma: "⨩", Mcy: "М", mcy: "м", mdash: "—", mDDot: "∺", measuredangle: "∡", MediumSpace: " ", Mellintrf: "ℳ", Mfr: "𝔐", mfr: "𝔪", mho: "℧", micro: "µ", midast: "*", midcir: "⫰", mid: "∣", middot: "·", minusb: "⊟", minus: "−", minusd: "∸", minusdu: "⨪", MinusPlus: "∓", mlcp: "⫛", mldr: "…", mnplus: "∓", models: "⊧", Mopf: "𝕄", mopf: "𝕞", mp: "∓", mscr: "𝓂", Mscr: "ℳ", mstpos: "∾", Mu: "Μ", mu: "μ", multimap: "⊸", mumap: "⊸", nabla: "∇", Nacute: "Ń", nacute: "ń", nang: "∠⃒", nap: "≉", napE: "⩰̸", napid: "≋̸", napos: "ŉ", napprox: "≉", natural: "♮", naturals: "ℕ", natur: "♮", nbsp: " ", nbump: "≎̸", nbumpe: "≏̸", ncap: "⩃", Ncaron: "Ň", ncaron: "ň", Ncedil: "Ņ", ncedil: "ņ", ncong: "≇", ncongdot: "⩭̸", ncup: "⩂", Ncy: "Н", ncy: "н", ndash: "–", nearhk: "⤤", nearr: "↗", neArr: "⇗", nearrow: "↗", ne: "≠", nedot: "≐̸", NegativeMediumSpace: "​", NegativeThickSpace: "​", NegativeThinSpace: "​", NegativeVeryThinSpace: "​", nequiv: "≢", nesear: "⤨", nesim: "≂̸", NestedGreaterGreater: "≫", NestedLessLess: "≪", NewLine: "\n", nexist: "∄", nexists: "∄", Nfr: "𝔑", nfr: "𝔫", ngE: "≧̸", nge: "≱", ngeq: "≱", ngeqq: "≧̸", ngeqslant: "⩾̸", nges: "⩾̸", nGg: "⋙̸", ngsim: "≵", nGt: "≫⃒", ngt: "≯", ngtr: "≯", nGtv: "≫̸", nharr: "↮", nhArr: "⇎", nhpar: "⫲", ni: "∋", nis: "⋼", nisd: "⋺", niv: "∋", NJcy: "Њ", njcy: "њ", nlarr: "↚", nlArr: "⇍", nldr: "‥", nlE: "≦̸", nle: "≰", nleftarrow: "↚", nLeftarrow: "⇍", nleftrightarrow: "↮", nLeftrightarrow: "⇎", nleq: "≰", nleqq: "≦̸", nleqslant: "⩽̸", nles: "⩽̸", nless: "≮", nLl: "⋘̸", nlsim: "≴", nLt: "≪⃒", nlt: "≮", nltri: "⋪", nltrie: "⋬", nLtv: "≪̸", nmid: "∤", NoBreak: "⁠", NonBreakingSpace: " ", nopf: "𝕟", Nopf: "ℕ", Not: "⫬", not: "¬", NotCongruent: "≢", NotCupCap: "≭", NotDoubleVerticalBar: "∦", NotElement: "∉", NotEqual: "≠", NotEqualTilde: "≂̸", NotExists: "∄", NotGreater: "≯", NotGreaterEqual: "≱", NotGreaterFullEqual: "≧̸", NotGreaterGreater: "≫̸", NotGreaterLess: "≹", NotGreaterSlantEqual: "⩾̸", NotGreaterTilde: "≵", NotHumpDownHump: "≎̸", NotHumpEqual: "≏̸", notin: "∉", notindot: "⋵̸", notinE: "⋹̸", notinva: "∉", notinvb: "⋷", notinvc: "⋶", NotLeftTriangleBar: "⧏̸", NotLeftTriangle: "⋪", NotLeftTriangleEqual: "⋬", NotLess: "≮", NotLessEqual: "≰", NotLessGreater: "≸", NotLessLess: "≪̸", NotLessSlantEqual: "⩽̸", NotLessTilde: "≴", NotNestedGreaterGreater: "⪢̸", NotNestedLessLess: "⪡̸", notni: "∌", notniva: "∌", notnivb: "⋾", notnivc: "⋽", NotPrecedes: "⊀", NotPrecedesEqual: "⪯̸", NotPrecedesSlantEqual: "⋠", NotReverseElement: "∌", NotRightTriangleBar: "⧐̸", NotRightTriangle: "⋫", NotRightTriangleEqual: "⋭", NotSquareSubset: "⊏̸", NotSquareSubsetEqual: "⋢", NotSquareSuperset: "⊐̸", NotSquareSupersetEqual: "⋣", NotSubset: "⊂⃒", NotSubsetEqual: "⊈", NotSucceeds: "⊁", NotSucceedsEqual: "⪰̸", NotSucceedsSlantEqual: "⋡", NotSucceedsTilde: "≿̸", NotSuperset: "⊃⃒", NotSupersetEqual: "⊉", NotTilde: "≁", NotTildeEqual: "≄", NotTildeFullEqual: "≇", NotTildeTilde: "≉", NotVerticalBar: "∤", nparallel: "∦", npar: "∦", nparsl: "⫽⃥", npart: "∂̸", npolint: "⨔", npr: "⊀", nprcue: "⋠", nprec: "⊀", npreceq: "⪯̸", npre: "⪯̸", nrarrc: "⤳̸", nrarr: "↛", nrArr: "⇏", nrarrw: "↝̸", nrightarrow: "↛", nRightarrow: "⇏", nrtri: "⋫", nrtrie: "⋭", nsc: "⊁", nsccue: "⋡", nsce: "⪰̸", Nscr: "𝒩", nscr: "𝓃", nshortmid: "∤", nshortparallel: "∦", nsim: "≁", nsime: "≄", nsimeq: "≄", nsmid: "∤", nspar: "∦", nsqsube: "⋢", nsqsupe: "⋣", nsub: "⊄", nsubE: "⫅̸", nsube: "⊈", nsubset: "⊂⃒", nsubseteq: "⊈", nsubseteqq: "⫅̸", nsucc: "⊁", nsucceq: "⪰̸", nsup: "⊅", nsupE: "⫆̸", nsupe: "⊉", nsupset: "⊃⃒", nsupseteq: "⊉", nsupseteqq: "⫆̸", ntgl: "≹", Ntilde: "Ñ", ntilde: "ñ", ntlg: "≸", ntriangleleft: "⋪", ntrianglelefteq: "⋬", ntriangleright: "⋫", ntrianglerighteq: "⋭", Nu: "Ν", nu: "ν", num: "#", numero: "№", numsp: " ", nvap: "≍⃒", nvdash: "⊬", nvDash: "⊭", nVdash: "⊮", nVDash: "⊯", nvge: "≥⃒", nvgt: ">⃒", nvHarr: "⤄", nvinfin: "⧞", nvlArr: "⤂", nvle: "≤⃒", nvlt: "<⃒", nvltrie: "⊴⃒", nvrArr: "⤃", nvrtrie: "⊵⃒", nvsim: "∼⃒", nwarhk: "⤣", nwarr: "↖", nwArr: "⇖", nwarrow: "↖", nwnear: "⤧", Oacute: "Ó", oacute: "ó", oast: "⊛", Ocirc: "Ô", ocirc: "ô", ocir: "⊚", Ocy: "О", ocy: "о", odash: "⊝", Odblac: "Ő", odblac: "ő", odiv: "⨸", odot: "⊙", odsold: "⦼", OElig: "Œ", oelig: "œ", ofcir: "⦿", Ofr: "𝔒", ofr: "𝔬", ogon: "˛", Ograve: "Ò", ograve: "ò", ogt: "⧁", ohbar: "⦵", ohm: "Ω", oint: "∮", olarr: "↺", olcir: "⦾", olcross: "⦻", oline: "‾", olt: "⧀", Omacr: "Ō", omacr: "ō", Omega: "Ω", omega: "ω", Omicron: "Ο", omicron: "ο", omid: "⦶", ominus: "⊖", Oopf: "𝕆", oopf: "𝕠", opar: "⦷", OpenCurlyDoubleQuote: "“", OpenCurlyQuote: "‘", operp: "⦹", oplus: "⊕", orarr: "↻", Or: "⩔", or: "∨", ord: "⩝", order: "ℴ", orderof: "ℴ", ordf: "ª", ordm: "º", origof: "⊶", oror: "⩖", orslope: "⩗", orv: "⩛", oS: "Ⓢ", Oscr: "𝒪", oscr: "ℴ", Oslash: "Ø", oslash: "ø", osol: "⊘", Otilde: "Õ", otilde: "õ", otimesas: "⨶", Otimes: "⨷", otimes: "⊗", Ouml: "Ö", ouml: "ö", ovbar: "⌽", OverBar: "‾", OverBrace: "⏞", OverBracket: "⎴", OverParenthesis: "⏜", para: "¶", parallel: "∥", par: "∥", parsim: "⫳", parsl: "⫽", part: "∂", PartialD: "∂", Pcy: "П", pcy: "п", percnt: "%", period: ".", permil: "‰", perp: "⊥", pertenk: "‱", Pfr: "𝔓", pfr: "𝔭", Phi: "Φ", phi: "φ", phiv: "ϕ", phmmat: "ℳ", phone: "☎", Pi: "Π", pi: "π", pitchfork: "⋔", piv: "ϖ", planck: "ℏ", planckh: "ℎ", plankv: "ℏ", plusacir: "⨣", plusb: "⊞", pluscir: "⨢", plus: "+", plusdo: "∔", plusdu: "⨥", pluse: "⩲", PlusMinus: "±", plusmn: "±", plussim: "⨦", plustwo: "⨧", pm: "±", Poincareplane: "ℌ", pointint: "⨕", popf: "𝕡", Popf: "ℙ", pound: "£", prap: "⪷", Pr: "⪻", pr: "≺", prcue: "≼", precapprox: "⪷", prec: "≺", preccurlyeq: "≼", Precedes: "≺", PrecedesEqual: "⪯", PrecedesSlantEqual: "≼", PrecedesTilde: "≾", preceq: "⪯", precnapprox: "⪹", precneqq: "⪵", precnsim: "⋨", pre: "⪯", prE: "⪳", precsim: "≾", prime: "′", Prime: "″", primes: "ℙ", prnap: "⪹", prnE: "⪵", prnsim: "⋨", prod: "∏", Product: "∏", profalar: "⌮", profline: "⌒", profsurf: "⌓", prop: "∝", Proportional: "∝", Proportion: "∷", propto: "∝", prsim: "≾", prurel: "⊰", Pscr: "𝒫", pscr: "𝓅", Psi: "Ψ", psi: "ψ", puncsp: " ", Qfr: "𝔔", qfr: "𝔮", qint: "⨌", qopf: "𝕢", Qopf: "ℚ", qprime: "⁗", Qscr: "𝒬", qscr: "𝓆", quaternions: "ℍ", quatint: "⨖", quest: "?", questeq: "≟", quot: '"', QUOT: '"', rAarr: "⇛", race: "∽̱", Racute: "Ŕ", racute: "ŕ", radic: "√", raemptyv: "⦳", rang: "⟩", Rang: "⟫", rangd: "⦒", range: "⦥", rangle: "⟩", raquo: "»", rarrap: "⥵", rarrb: "⇥", rarrbfs: "⤠", rarrc: "⤳", rarr: "→", Rarr: "↠", rArr: "⇒", rarrfs: "⤞", rarrhk: "↪", rarrlp: "↬", rarrpl: "⥅", rarrsim: "⥴", Rarrtl: "⤖", rarrtl: "↣", rarrw: "↝", ratail: "⤚", rAtail: "⤜", ratio: "∶", rationals: "ℚ", rbarr: "⤍", rBarr: "⤏", RBarr: "⤐", rbbrk: "❳", rbrace: "}", rbrack: "]", rbrke: "⦌", rbrksld: "⦎", rbrkslu: "⦐", Rcaron: "Ř", rcaron: "ř", Rcedil: "Ŗ", rcedil: "ŗ", rceil: "⌉", rcub: "}", Rcy: "Р", rcy: "р", rdca: "⤷", rdldhar: "⥩", rdquo: "”", rdquor: "”", rdsh: "↳", real: "ℜ", realine: "ℛ", realpart: "ℜ", reals: "ℝ", Re: "ℜ", rect: "▭", reg: "®", REG: "®", ReverseElement: "∋", ReverseEquilibrium: "⇋", ReverseUpEquilibrium: "⥯", rfisht: "⥽", rfloor: "⌋", rfr: "𝔯", Rfr: "ℜ", rHar: "⥤", rhard: "⇁", rharu: "⇀", rharul: "⥬", Rho: "Ρ", rho: "ρ", rhov: "ϱ", RightAngleBracket: "⟩", RightArrowBar: "⇥", rightarrow: "→", RightArrow: "→", Rightarrow: "⇒", RightArrowLeftArrow: "⇄", rightarrowtail: "↣", RightCeiling: "⌉", RightDoubleBracket: "⟧", RightDownTeeVector: "⥝", RightDownVectorBar: "⥕", RightDownVector: "⇂", RightFloor: "⌋", rightharpoondown: "⇁", rightharpoonup: "⇀", rightleftarrows: "⇄", rightleftharpoons: "⇌", rightrightarrows: "⇉", rightsquigarrow: "↝", RightTeeArrow: "↦", RightTee: "⊢", RightTeeVector: "⥛", rightthreetimes: "⋌", RightTriangleBar: "⧐", RightTriangle: "⊳", RightTriangleEqual: "⊵", RightUpDownVector: "⥏", RightUpTeeVector: "⥜", RightUpVectorBar: "⥔", RightUpVector: "↾", RightVectorBar: "⥓", RightVector: "⇀", ring: "˚", risingdotseq: "≓", rlarr: "⇄", rlhar: "⇌", rlm: "‏", rmoustache: "⎱", rmoust: "⎱", rnmid: "⫮", roang: "⟭", roarr: "⇾", robrk: "⟧", ropar: "⦆", ropf: "𝕣", Ropf: "ℝ", roplus: "⨮", rotimes: "⨵", RoundImplies: "⥰", rpar: ")", rpargt: "⦔", rppolint: "⨒", rrarr: "⇉", Rrightarrow: "⇛", rsaquo: "›", rscr: "𝓇", Rscr: "ℛ", rsh: "↱", Rsh: "↱", rsqb: "]", rsquo: "’", rsquor: "’", rthree: "⋌", rtimes: "⋊", rtri: "▹", rtrie: "⊵", rtrif: "▸", rtriltri: "⧎", RuleDelayed: "⧴", ruluhar: "⥨", rx: "℞", Sacute: "Ś", sacute: "ś", sbquo: "‚", scap: "⪸", Scaron: "Š", scaron: "š", Sc: "⪼", sc: "≻", sccue: "≽", sce: "⪰", scE: "⪴", Scedil: "Ş", scedil: "ş", Scirc: "Ŝ", scirc: "ŝ", scnap: "⪺", scnE: "⪶", scnsim: "⋩", scpolint: "⨓", scsim: "≿", Scy: "С", scy: "с", sdotb: "⊡", sdot: "⋅", sdote: "⩦", searhk: "⤥", searr: "↘", seArr: "⇘", searrow: "↘", sect: "§", semi: ";", seswar: "⤩", setminus: "∖", setmn: "∖", sext: "✶", Sfr: "𝔖", sfr: "𝔰", sfrown: "⌢", sharp: "♯", SHCHcy: "Щ", shchcy: "щ", SHcy: "Ш", shcy: "ш", ShortDownArrow: "↓", ShortLeftArrow: "←", shortmid: "∣", shortparallel: "∥", ShortRightArrow: "→", ShortUpArrow: "↑", shy: "­", Sigma: "Σ", sigma: "σ", sigmaf: "ς", sigmav: "ς", sim: "∼", simdot: "⩪", sime: "≃", simeq: "≃", simg: "⪞", simgE: "⪠", siml: "⪝", simlE: "⪟", simne: "≆", simplus: "⨤", simrarr: "⥲", slarr: "←", SmallCircle: "∘", smallsetminus: "∖", smashp: "⨳", smeparsl: "⧤", smid: "∣", smile: "⌣", smt: "⪪", smte: "⪬", smtes: "⪬︀", SOFTcy: "Ь", softcy: "ь", solbar: "⌿", solb: "⧄", sol: "/", Sopf: "𝕊", sopf: "𝕤", spades: "♠", spadesuit: "♠", spar: "∥", sqcap: "⊓", sqcaps: "⊓︀", sqcup: "⊔", sqcups: "⊔︀", Sqrt: "√", sqsub: "⊏", sqsube: "⊑", sqsubset: "⊏", sqsubseteq: "⊑", sqsup: "⊐", sqsupe: "⊒", sqsupset: "⊐", sqsupseteq: "⊒", square: "□", Square: "□", SquareIntersection: "⊓", SquareSubset: "⊏", SquareSubsetEqual: "⊑", SquareSuperset: "⊐", SquareSupersetEqual: "⊒", SquareUnion: "⊔", squarf: "▪", squ: "□", squf: "▪", srarr: "→", Sscr: "𝒮", sscr: "𝓈", ssetmn: "∖", ssmile: "⌣", sstarf: "⋆", Star: "⋆", star: "☆", starf: "★", straightepsilon: "ϵ", straightphi: "ϕ", strns: "¯", sub: "⊂", Sub: "⋐", subdot: "⪽", subE: "⫅", sube: "⊆", subedot: "⫃", submult: "⫁", subnE: "⫋", subne: "⊊", subplus: "⪿", subrarr: "⥹", subset: "⊂", Subset: "⋐", subseteq: "⊆", subseteqq: "⫅", SubsetEqual: "⊆", subsetneq: "⊊", subsetneqq: "⫋", subsim: "⫇", subsub: "⫕", subsup: "⫓", succapprox: "⪸", succ: "≻", succcurlyeq: "≽", Succeeds: "≻", SucceedsEqual: "⪰", SucceedsSlantEqual: "≽", SucceedsTilde: "≿", succeq: "⪰", succnapprox: "⪺", succneqq: "⪶", succnsim: "⋩", succsim: "≿", SuchThat: "∋", sum: "∑", Sum: "∑", sung: "♪", sup1: "¹", sup2: "²", sup3: "³", sup: "⊃", Sup: "⋑", supdot: "⪾", supdsub: "⫘", supE: "⫆", supe: "⊇", supedot: "⫄", Superset: "⊃", SupersetEqual: "⊇", suphsol: "⟉", suphsub: "⫗", suplarr: "⥻", supmult: "⫂", supnE: "⫌", supne: "⊋", supplus: "⫀", supset: "⊃", Supset: "⋑", supseteq: "⊇", supseteqq: "⫆", supsetneq: "⊋", supsetneqq: "⫌", supsim: "⫈", supsub: "⫔", supsup: "⫖", swarhk: "⤦", swarr: "↙", swArr: "⇙", swarrow: "↙", swnwar: "⤪", szlig: "ß", Tab: "	", target: "⌖", Tau: "Τ", tau: "τ", tbrk: "⎴", Tcaron: "Ť", tcaron: "ť", Tcedil: "Ţ", tcedil: "ţ", Tcy: "Т", tcy: "т", tdot: "⃛", telrec: "⌕", Tfr: "𝔗", tfr: "𝔱", there4: "∴", therefore: "∴", Therefore: "∴", Theta: "Θ", theta: "θ", thetasym: "ϑ", thetav: "ϑ", thickapprox: "≈", thicksim: "∼", ThickSpace: "  ", ThinSpace: " ", thinsp: " ", thkap: "≈", thksim: "∼", THORN: "Þ", thorn: "þ", tilde: "˜", Tilde: "∼", TildeEqual: "≃", TildeFullEqual: "≅", TildeTilde: "≈", timesbar: "⨱", timesb: "⊠", times: "×", timesd: "⨰", tint: "∭", toea: "⤨", topbot: "⌶", topcir: "⫱", top: "⊤", Topf: "𝕋", topf: "𝕥", topfork: "⫚", tosa: "⤩", tprime: "‴", trade: "™", TRADE: "™", triangle: "▵", triangledown: "▿", triangleleft: "◃", trianglelefteq: "⊴", triangleq: "≜", triangleright: "▹", trianglerighteq: "⊵", tridot: "◬", trie: "≜", triminus: "⨺", TripleDot: "⃛", triplus: "⨹", trisb: "⧍", tritime: "⨻", trpezium: "⏢", Tscr: "𝒯", tscr: "𝓉", TScy: "Ц", tscy: "ц", TSHcy: "Ћ", tshcy: "ћ", Tstrok: "Ŧ", tstrok: "ŧ", twixt: "≬", twoheadleftarrow: "↞", twoheadrightarrow: "↠", Uacute: "Ú", uacute: "ú", uarr: "↑", Uarr: "↟", uArr: "⇑", Uarrocir: "⥉", Ubrcy: "Ў", ubrcy: "ў", Ubreve: "Ŭ", ubreve: "ŭ", Ucirc: "Û", ucirc: "û", Ucy: "У", ucy: "у", udarr: "⇅", Udblac: "Ű", udblac: "ű", udhar: "⥮", ufisht: "⥾", Ufr: "𝔘", ufr: "𝔲", Ugrave: "Ù", ugrave: "ù", uHar: "⥣", uharl: "↿", uharr: "↾", uhblk: "▀", ulcorn: "⌜", ulcorner: "⌜", ulcrop: "⌏", ultri: "◸", Umacr: "Ū", umacr: "ū", uml: "¨", UnderBar: "_", UnderBrace: "⏟", UnderBracket: "⎵", UnderParenthesis: "⏝", Union: "⋃", UnionPlus: "⊎", Uogon: "Ų", uogon: "ų", Uopf: "𝕌", uopf: "𝕦", UpArrowBar: "⤒", uparrow: "↑", UpArrow: "↑", Uparrow: "⇑", UpArrowDownArrow: "⇅", updownarrow: "↕", UpDownArrow: "↕", Updownarrow: "⇕", UpEquilibrium: "⥮", upharpoonleft: "↿", upharpoonright: "↾", uplus: "⊎", UpperLeftArrow: "↖", UpperRightArrow: "↗", upsi: "υ", Upsi: "ϒ", upsih: "ϒ", Upsilon: "Υ", upsilon: "υ", UpTeeArrow: "↥", UpTee: "⊥", upuparrows: "⇈", urcorn: "⌝", urcorner: "⌝", urcrop: "⌎", Uring: "Ů", uring: "ů", urtri: "◹", Uscr: "𝒰", uscr: "𝓊", utdot: "⋰", Utilde: "Ũ", utilde: "ũ", utri: "▵", utrif: "▴", uuarr: "⇈", Uuml: "Ü", uuml: "ü", uwangle: "⦧", vangrt: "⦜", varepsilon: "ϵ", varkappa: "ϰ", varnothing: "∅", varphi: "ϕ", varpi: "ϖ", varpropto: "∝", varr: "↕", vArr: "⇕", varrho: "ϱ", varsigma: "ς", varsubsetneq: "⊊︀", varsubsetneqq: "⫋︀", varsupsetneq: "⊋︀", varsupsetneqq: "⫌︀", vartheta: "ϑ", vartriangleleft: "⊲", vartriangleright: "⊳", vBar: "⫨", Vbar: "⫫", vBarv: "⫩", Vcy: "В", vcy: "в", vdash: "⊢", vDash: "⊨", Vdash: "⊩", VDash: "⊫", Vdashl: "⫦", veebar: "⊻", vee: "∨", Vee: "⋁", veeeq: "≚", vellip: "⋮", verbar: "|", Verbar: "‖", vert: "|", Vert: "‖", VerticalBar: "∣", VerticalLine: "|", VerticalSeparator: "❘", VerticalTilde: "≀", VeryThinSpace: " ", Vfr: "𝔙", vfr: "𝔳", vltri: "⊲", vnsub: "⊂⃒", vnsup: "⊃⃒", Vopf: "𝕍", vopf: "𝕧", vprop: "∝", vrtri: "⊳", Vscr: "𝒱", vscr: "𝓋", vsubnE: "⫋︀", vsubne: "⊊︀", vsupnE: "⫌︀", vsupne: "⊋︀", Vvdash: "⊪", vzigzag: "⦚", Wcirc: "Ŵ", wcirc: "ŵ", wedbar: "⩟", wedge: "∧", Wedge: "⋀", wedgeq: "≙", weierp: "℘", Wfr: "𝔚", wfr: "𝔴", Wopf: "𝕎", wopf: "𝕨", wp: "℘", wr: "≀", wreath: "≀", Wscr: "𝒲", wscr: "𝓌", xcap: "⋂", xcirc: "◯", xcup: "⋃", xdtri: "▽", Xfr: "𝔛", xfr: "𝔵", xharr: "⟷", xhArr: "⟺", Xi: "Ξ", xi: "ξ", xlarr: "⟵", xlArr: "⟸", xmap: "⟼", xnis: "⋻", xodot: "⨀", Xopf: "𝕏", xopf: "𝕩", xoplus: "⨁", xotime: "⨂", xrarr: "⟶", xrArr: "⟹", Xscr: "𝒳", xscr: "𝓍", xsqcup: "⨆", xuplus: "⨄", xutri: "△", xvee: "⋁", xwedge: "⋀", Yacute: "Ý", yacute: "ý", YAcy: "Я", yacy: "я", Ycirc: "Ŷ", ycirc: "ŷ", Ycy: "Ы", ycy: "ы", yen: "¥", Yfr: "𝔜", yfr: "𝔶", YIcy: "Ї", yicy: "ї", Yopf: "𝕐", yopf: "𝕪", Yscr: "𝒴", yscr: "𝓎", YUcy: "Ю", yucy: "ю", yuml: "ÿ", Yuml: "Ÿ", Zacute: "Ź", zacute: "ź", Zcaron: "Ž", zcaron: "ž", Zcy: "З", zcy: "з", Zdot: "Ż", zdot: "ż", zeetrf: "ℨ", ZeroWidthSpace: "​", Zeta: "Ζ", zeta: "ζ", zfr: "𝔷", Zfr: "ℨ", ZHcy: "Ж", zhcy: "ж", zigrarr: "⇝", zopf: "𝕫", Zopf: "ℤ", Zscr: "𝒵", zscr: "𝓏", zwj: "‍", zwnj: "‌" };
  }
});

// node_modules/markdown-it/lib/common/entities.js
var require_entities2 = __commonJS({
  "node_modules/markdown-it/lib/common/entities.js"(exports, module) {
    "use strict";
    module.exports = require_entities();
  }
});

// node_modules/uc.micro/categories/P/regex.js
var require_regex = __commonJS({
  "node_modules/uc.micro/categories/P/regex.js"(exports, module) {
    module.exports = /[!-#%-\*,-\/:;\?@\[-\]_\{\}\xA1\xA7\xAB\xB6\xB7\xBB\xBF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166D\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2010-\u2027\u2030-\u2043\u2045-\u2051\u2053-\u205E\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4E\u3001-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]|\uD800[\uDD00-\uDD02\uDF9F\uDFD0]|\uD801\uDD6F|\uD802[\uDC57\uDD1F\uDD3F\uDE50-\uDE58\uDE7F\uDEF0-\uDEF6\uDF39-\uDF3F\uDF99-\uDF9C]|\uD803[\uDF55-\uDF59]|\uD804[\uDC47-\uDC4D\uDCBB\uDCBC\uDCBE-\uDCC1\uDD40-\uDD43\uDD74\uDD75\uDDC5-\uDDC8\uDDCD\uDDDB\uDDDD-\uDDDF\uDE38-\uDE3D\uDEA9]|\uD805[\uDC4B-\uDC4F\uDC5B\uDC5D\uDCC6\uDDC1-\uDDD7\uDE41-\uDE43\uDE60-\uDE6C\uDF3C-\uDF3E]|\uD806[\uDC3B\uDE3F-\uDE46\uDE9A-\uDE9C\uDE9E-\uDEA2]|\uD807[\uDC41-\uDC45\uDC70\uDC71\uDEF7\uDEF8]|\uD809[\uDC70-\uDC74]|\uD81A[\uDE6E\uDE6F\uDEF5\uDF37-\uDF3B\uDF44]|\uD81B[\uDE97-\uDE9A]|\uD82F\uDC9F|\uD836[\uDE87-\uDE8B]|\uD83A[\uDD5E\uDD5F]/;
  }
});

// node_modules/mdurl/encode.js
var require_encode = __commonJS({
  "node_modules/mdurl/encode.js"(exports, module) {
    "use strict";
    var encodeCache = {};
    function getEncodeCache(exclude) {
      var i9, ch, cache = encodeCache[exclude];
      if (cache) {
        return cache;
      }
      cache = encodeCache[exclude] = [];
      for (i9 = 0; i9 < 128; i9++) {
        ch = String.fromCharCode(i9);
        if (/^[0-9a-z]$/i.test(ch)) {
          cache.push(ch);
        } else {
          cache.push("%" + ("0" + i9.toString(16).toUpperCase()).slice(-2));
        }
      }
      for (i9 = 0; i9 < exclude.length; i9++) {
        cache[exclude.charCodeAt(i9)] = exclude[i9];
      }
      return cache;
    }
    function encode2(string, exclude, keepEscaped) {
      var i9, l12, code, nextCode, cache, result = "";
      if (typeof exclude !== "string") {
        keepEscaped = exclude;
        exclude = encode2.defaultChars;
      }
      if (typeof keepEscaped === "undefined") {
        keepEscaped = true;
      }
      cache = getEncodeCache(exclude);
      for (i9 = 0, l12 = string.length; i9 < l12; i9++) {
        code = string.charCodeAt(i9);
        if (keepEscaped && code === 37 && i9 + 2 < l12) {
          if (/^[0-9a-f]{2}$/i.test(string.slice(i9 + 1, i9 + 3))) {
            result += string.slice(i9, i9 + 3);
            i9 += 2;
            continue;
          }
        }
        if (code < 128) {
          result += cache[code];
          continue;
        }
        if (code >= 55296 && code <= 57343) {
          if (code >= 55296 && code <= 56319 && i9 + 1 < l12) {
            nextCode = string.charCodeAt(i9 + 1);
            if (nextCode >= 56320 && nextCode <= 57343) {
              result += encodeURIComponent(string[i9] + string[i9 + 1]);
              i9++;
              continue;
            }
          }
          result += "%EF%BF%BD";
          continue;
        }
        result += encodeURIComponent(string[i9]);
      }
      return result;
    }
    encode2.defaultChars = ";/?:@&=+$,-_.!~*'()#";
    encode2.componentChars = "-_.!~*'()";
    module.exports = encode2;
  }
});

// node_modules/mdurl/decode.js
var require_decode = __commonJS({
  "node_modules/mdurl/decode.js"(exports, module) {
    "use strict";
    var decodeCache = {};
    function getDecodeCache(exclude) {
      var i9, ch, cache = decodeCache[exclude];
      if (cache) {
        return cache;
      }
      cache = decodeCache[exclude] = [];
      for (i9 = 0; i9 < 128; i9++) {
        ch = String.fromCharCode(i9);
        cache.push(ch);
      }
      for (i9 = 0; i9 < exclude.length; i9++) {
        ch = exclude.charCodeAt(i9);
        cache[ch] = "%" + ("0" + ch.toString(16).toUpperCase()).slice(-2);
      }
      return cache;
    }
    function decode2(string, exclude) {
      var cache;
      if (typeof exclude !== "string") {
        exclude = decode2.defaultChars;
      }
      cache = getDecodeCache(exclude);
      return string.replace(/(%[a-f0-9]{2})+/gi, function(seq) {
        var i9, l12, b1, b22, b32, b42, chr, result = "";
        for (i9 = 0, l12 = seq.length; i9 < l12; i9 += 3) {
          b1 = parseInt(seq.slice(i9 + 1, i9 + 3), 16);
          if (b1 < 128) {
            result += cache[b1];
            continue;
          }
          if ((b1 & 224) === 192 && i9 + 3 < l12) {
            b22 = parseInt(seq.slice(i9 + 4, i9 + 6), 16);
            if ((b22 & 192) === 128) {
              chr = b1 << 6 & 1984 | b22 & 63;
              if (chr < 128) {
                result += "��";
              } else {
                result += String.fromCharCode(chr);
              }
              i9 += 3;
              continue;
            }
          }
          if ((b1 & 240) === 224 && i9 + 6 < l12) {
            b22 = parseInt(seq.slice(i9 + 4, i9 + 6), 16);
            b32 = parseInt(seq.slice(i9 + 7, i9 + 9), 16);
            if ((b22 & 192) === 128 && (b32 & 192) === 128) {
              chr = b1 << 12 & 61440 | b22 << 6 & 4032 | b32 & 63;
              if (chr < 2048 || chr >= 55296 && chr <= 57343) {
                result += "���";
              } else {
                result += String.fromCharCode(chr);
              }
              i9 += 6;
              continue;
            }
          }
          if ((b1 & 248) === 240 && i9 + 9 < l12) {
            b22 = parseInt(seq.slice(i9 + 4, i9 + 6), 16);
            b32 = parseInt(seq.slice(i9 + 7, i9 + 9), 16);
            b42 = parseInt(seq.slice(i9 + 10, i9 + 12), 16);
            if ((b22 & 192) === 128 && (b32 & 192) === 128 && (b42 & 192) === 128) {
              chr = b1 << 18 & 1835008 | b22 << 12 & 258048 | b32 << 6 & 4032 | b42 & 63;
              if (chr < 65536 || chr > 1114111) {
                result += "����";
              } else {
                chr -= 65536;
                result += String.fromCharCode(55296 + (chr >> 10), 56320 + (chr & 1023));
              }
              i9 += 9;
              continue;
            }
          }
          result += "�";
        }
        return result;
      });
    }
    decode2.defaultChars = ";/?:@&=+$,#";
    decode2.componentChars = "";
    module.exports = decode2;
  }
});

// node_modules/mdurl/format.js
var require_format = __commonJS({
  "node_modules/mdurl/format.js"(exports, module) {
    "use strict";
    module.exports = function format(url) {
      var result = "";
      result += url.protocol || "";
      result += url.slashes ? "//" : "";
      result += url.auth ? url.auth + "@" : "";
      if (url.hostname && url.hostname.indexOf(":") !== -1) {
        result += "[" + url.hostname + "]";
      } else {
        result += url.hostname || "";
      }
      result += url.port ? ":" + url.port : "";
      result += url.pathname || "";
      result += url.search || "";
      result += url.hash || "";
      return result;
    };
  }
});

// node_modules/mdurl/parse.js
var require_parse = __commonJS({
  "node_modules/mdurl/parse.js"(exports, module) {
    "use strict";
    function Url() {
      this.protocol = null;
      this.slashes = null;
      this.auth = null;
      this.port = null;
      this.hostname = null;
      this.hash = null;
      this.search = null;
      this.pathname = null;
    }
    var protocolPattern = /^([a-z0-9.+-]+:)/i;
    var portPattern = /:[0-9]*$/;
    var simplePathPattern = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/;
    var delims = ["<", ">", '"', "`", " ", "\r", "\n", "	"];
    var unwise = ["{", "}", "|", "\\", "^", "`"].concat(delims);
    var autoEscape = ["'"].concat(unwise);
    var nonHostChars = ["%", "/", "?", ";", "#"].concat(autoEscape);
    var hostEndingChars = ["/", "?", "#"];
    var hostnameMaxLen = 255;
    var hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/;
    var hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/;
    var hostlessProtocol = {
      "javascript": true,
      "javascript:": true
    };
    var slashedProtocol = {
      "http": true,
      "https": true,
      "ftp": true,
      "gopher": true,
      "file": true,
      "http:": true,
      "https:": true,
      "ftp:": true,
      "gopher:": true,
      "file:": true
    };
    function urlParse(url, slashesDenoteHost) {
      if (url && url instanceof Url) {
        return url;
      }
      var u12 = new Url();
      u12.parse(url, slashesDenoteHost);
      return u12;
    }
    Url.prototype.parse = function(url, slashesDenoteHost) {
      var i9, l12, lowerProto, hec, slashes, rest = url;
      rest = rest.trim();
      if (!slashesDenoteHost && url.split("#").length === 1) {
        var simplePath = simplePathPattern.exec(rest);
        if (simplePath) {
          this.pathname = simplePath[1];
          if (simplePath[2]) {
            this.search = simplePath[2];
          }
          return this;
        }
      }
      var proto = protocolPattern.exec(rest);
      if (proto) {
        proto = proto[0];
        lowerProto = proto.toLowerCase();
        this.protocol = proto;
        rest = rest.substr(proto.length);
      }
      if (slashesDenoteHost || proto || rest.match(/^\/\/[^@\/]+@[^@\/]+/)) {
        slashes = rest.substr(0, 2) === "//";
        if (slashes && !(proto && hostlessProtocol[proto])) {
          rest = rest.substr(2);
          this.slashes = true;
        }
      }
      if (!hostlessProtocol[proto] && (slashes || proto && !slashedProtocol[proto])) {
        var hostEnd = -1;
        for (i9 = 0; i9 < hostEndingChars.length; i9++) {
          hec = rest.indexOf(hostEndingChars[i9]);
          if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {
            hostEnd = hec;
          }
        }
        var auth, atSign;
        if (hostEnd === -1) {
          atSign = rest.lastIndexOf("@");
        } else {
          atSign = rest.lastIndexOf("@", hostEnd);
        }
        if (atSign !== -1) {
          auth = rest.slice(0, atSign);
          rest = rest.slice(atSign + 1);
          this.auth = auth;
        }
        hostEnd = -1;
        for (i9 = 0; i9 < nonHostChars.length; i9++) {
          hec = rest.indexOf(nonHostChars[i9]);
          if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {
            hostEnd = hec;
          }
        }
        if (hostEnd === -1) {
          hostEnd = rest.length;
        }
        if (rest[hostEnd - 1] === ":") {
          hostEnd--;
        }
        var host = rest.slice(0, hostEnd);
        rest = rest.slice(hostEnd);
        this.parseHost(host);
        this.hostname = this.hostname || "";
        var ipv6Hostname = this.hostname[0] === "[" && this.hostname[this.hostname.length - 1] === "]";
        if (!ipv6Hostname) {
          var hostparts = this.hostname.split(/\./);
          for (i9 = 0, l12 = hostparts.length; i9 < l12; i9++) {
            var part = hostparts[i9];
            if (!part) {
              continue;
            }
            if (!part.match(hostnamePartPattern)) {
              var newpart = "";
              for (var j6 = 0, k4 = part.length; j6 < k4; j6++) {
                if (part.charCodeAt(j6) > 127) {
                  newpart += "x";
                } else {
                  newpart += part[j6];
                }
              }
              if (!newpart.match(hostnamePartPattern)) {
                var validParts = hostparts.slice(0, i9);
                var notHost = hostparts.slice(i9 + 1);
                var bit = part.match(hostnamePartStart);
                if (bit) {
                  validParts.push(bit[1]);
                  notHost.unshift(bit[2]);
                }
                if (notHost.length) {
                  rest = notHost.join(".") + rest;
                }
                this.hostname = validParts.join(".");
                break;
              }
            }
          }
        }
        if (this.hostname.length > hostnameMaxLen) {
          this.hostname = "";
        }
        if (ipv6Hostname) {
          this.hostname = this.hostname.substr(1, this.hostname.length - 2);
        }
      }
      var hash = rest.indexOf("#");
      if (hash !== -1) {
        this.hash = rest.substr(hash);
        rest = rest.slice(0, hash);
      }
      var qm = rest.indexOf("?");
      if (qm !== -1) {
        this.search = rest.substr(qm);
        rest = rest.slice(0, qm);
      }
      if (rest) {
        this.pathname = rest;
      }
      if (slashedProtocol[lowerProto] && this.hostname && !this.pathname) {
        this.pathname = "";
      }
      return this;
    };
    Url.prototype.parseHost = function(host) {
      var port = portPattern.exec(host);
      if (port) {
        port = port[0];
        if (port !== ":") {
          this.port = port.substr(1);
        }
        host = host.substr(0, host.length - port.length);
      }
      if (host) {
        this.hostname = host;
      }
    };
    module.exports = urlParse;
  }
});

// node_modules/mdurl/index.js
var require_mdurl = __commonJS({
  "node_modules/mdurl/index.js"(exports, module) {
    "use strict";
    module.exports.encode = require_encode();
    module.exports.decode = require_decode();
    module.exports.format = require_format();
    module.exports.parse = require_parse();
  }
});

// node_modules/uc.micro/properties/Any/regex.js
var require_regex2 = __commonJS({
  "node_modules/uc.micro/properties/Any/regex.js"(exports, module) {
    module.exports = /[\0-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/;
  }
});

// node_modules/uc.micro/categories/Cc/regex.js
var require_regex3 = __commonJS({
  "node_modules/uc.micro/categories/Cc/regex.js"(exports, module) {
    module.exports = /[\0-\x1F\x7F-\x9F]/;
  }
});

// node_modules/uc.micro/categories/Cf/regex.js
var require_regex4 = __commonJS({
  "node_modules/uc.micro/categories/Cf/regex.js"(exports, module) {
    module.exports = /[\xAD\u0600-\u0605\u061C\u06DD\u070F\u08E2\u180E\u200B-\u200F\u202A-\u202E\u2060-\u2064\u2066-\u206F\uFEFF\uFFF9-\uFFFB]|\uD804[\uDCBD\uDCCD]|\uD82F[\uDCA0-\uDCA3]|\uD834[\uDD73-\uDD7A]|\uDB40[\uDC01\uDC20-\uDC7F]/;
  }
});

// node_modules/uc.micro/categories/Z/regex.js
var require_regex5 = __commonJS({
  "node_modules/uc.micro/categories/Z/regex.js"(exports, module) {
    module.exports = /[ \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000]/;
  }
});

// node_modules/uc.micro/index.js
var require_uc = __commonJS({
  "node_modules/uc.micro/index.js"(exports) {
    "use strict";
    exports.Any = require_regex2();
    exports.Cc = require_regex3();
    exports.Cf = require_regex4();
    exports.P = require_regex();
    exports.Z = require_regex5();
  }
});

// node_modules/markdown-it/lib/common/utils.js
var require_utils = __commonJS({
  "node_modules/markdown-it/lib/common/utils.js"(exports) {
    "use strict";
    function _class(obj) {
      return Object.prototype.toString.call(obj);
    }
    function isString3(obj) {
      return _class(obj) === "[object String]";
    }
    var _hasOwnProperty = Object.prototype.hasOwnProperty;
    function has(object, key) {
      return _hasOwnProperty.call(object, key);
    }
    function assign(obj) {
      var sources = Array.prototype.slice.call(arguments, 1);
      sources.forEach(function(source) {
        if (!source) {
          return;
        }
        if (typeof source !== "object") {
          throw new TypeError(source + "must be object");
        }
        Object.keys(source).forEach(function(key) {
          obj[key] = source[key];
        });
      });
      return obj;
    }
    function arrayReplaceAt(src, pos, newElements) {
      return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));
    }
    function isValidEntityCode(c14) {
      if (c14 >= 55296 && c14 <= 57343) {
        return false;
      }
      if (c14 >= 64976 && c14 <= 65007) {
        return false;
      }
      if ((c14 & 65535) === 65535 || (c14 & 65535) === 65534) {
        return false;
      }
      if (c14 >= 0 && c14 <= 8) {
        return false;
      }
      if (c14 === 11) {
        return false;
      }
      if (c14 >= 14 && c14 <= 31) {
        return false;
      }
      if (c14 >= 127 && c14 <= 159) {
        return false;
      }
      if (c14 > 1114111) {
        return false;
      }
      return true;
    }
    function fromCodePoint(c14) {
      if (c14 > 65535) {
        c14 -= 65536;
        var surrogate1 = 55296 + (c14 >> 10), surrogate2 = 56320 + (c14 & 1023);
        return String.fromCharCode(surrogate1, surrogate2);
      }
      return String.fromCharCode(c14);
    }
    var UNESCAPE_MD_RE = /\\([!"#$%&'()*+,\-.\/:;<=>?@[\\\]^_`{|}~])/g;
    var ENTITY_RE = /&([a-z#][a-z0-9]{1,31});/gi;
    var UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + "|" + ENTITY_RE.source, "gi");
    var DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;
    var entities = require_entities2();
    function replaceEntityPattern(match, name) {
      var code = 0;
      if (has(entities, name)) {
        return entities[name];
      }
      if (name.charCodeAt(0) === 35 && DIGITAL_ENTITY_TEST_RE.test(name)) {
        code = name[1].toLowerCase() === "x" ? parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);
        if (isValidEntityCode(code)) {
          return fromCodePoint(code);
        }
      }
      return match;
    }
    function unescapeMd(str) {
      if (str.indexOf("\\") < 0) {
        return str;
      }
      return str.replace(UNESCAPE_MD_RE, "$1");
    }
    function unescapeAll(str) {
      if (str.indexOf("\\") < 0 && str.indexOf("&") < 0) {
        return str;
      }
      return str.replace(UNESCAPE_ALL_RE, function(match, escaped, entity) {
        if (escaped) {
          return escaped;
        }
        return replaceEntityPattern(match, entity);
      });
    }
    var HTML_ESCAPE_TEST_RE = /[&<>"]/;
    var HTML_ESCAPE_REPLACE_RE = /[&<>"]/g;
    var HTML_REPLACEMENTS = {
      "&": "&amp;",
      "<": "&lt;",
      ">": "&gt;",
      '"': "&quot;"
    };
    function replaceUnsafeChar(ch) {
      return HTML_REPLACEMENTS[ch];
    }
    function escapeHtml(str) {
      if (HTML_ESCAPE_TEST_RE.test(str)) {
        return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);
      }
      return str;
    }
    var REGEXP_ESCAPE_RE = /[.?*+^$[\]\\(){}|-]/g;
    function escapeRE(str) {
      return str.replace(REGEXP_ESCAPE_RE, "\\$&");
    }
    function isSpace(code) {
      switch (code) {
        case 9:
        case 32:
          return true;
      }
      return false;
    }
    function isWhiteSpace(code) {
      if (code >= 8192 && code <= 8202) {
        return true;
      }
      switch (code) {
        case 9:
        case 10:
        case 11:
        case 12:
        case 13:
        case 32:
        case 160:
        case 5760:
        case 8239:
        case 8287:
        case 12288:
          return true;
      }
      return false;
    }
    var UNICODE_PUNCT_RE = require_regex();
    function isPunctChar(ch) {
      return UNICODE_PUNCT_RE.test(ch);
    }
    function isMdAsciiPunct(ch) {
      switch (ch) {
        case 33:
        case 34:
        case 35:
        case 36:
        case 37:
        case 38:
        case 39:
        case 40:
        case 41:
        case 42:
        case 43:
        case 44:
        case 45:
        case 46:
        case 47:
        case 58:
        case 59:
        case 60:
        case 61:
        case 62:
        case 63:
        case 64:
        case 91:
        case 92:
        case 93:
        case 94:
        case 95:
        case 96:
        case 123:
        case 124:
        case 125:
        case 126:
          return true;
        default:
          return false;
      }
    }
    function normalizeReference(str) {
      str = str.trim().replace(/\s+/g, " ");
      if ("ẞ".toLowerCase() === "Ṿ") {
        str = str.replace(/ẞ/g, "ß");
      }
      return str.toLowerCase().toUpperCase();
    }
    exports.lib = {};
    exports.lib.mdurl = require_mdurl();
    exports.lib.ucmicro = require_uc();
    exports.assign = assign;
    exports.isString = isString3;
    exports.has = has;
    exports.unescapeMd = unescapeMd;
    exports.unescapeAll = unescapeAll;
    exports.isValidEntityCode = isValidEntityCode;
    exports.fromCodePoint = fromCodePoint;
    exports.escapeHtml = escapeHtml;
    exports.arrayReplaceAt = arrayReplaceAt;
    exports.isSpace = isSpace;
    exports.isWhiteSpace = isWhiteSpace;
    exports.isMdAsciiPunct = isMdAsciiPunct;
    exports.isPunctChar = isPunctChar;
    exports.escapeRE = escapeRE;
    exports.normalizeReference = normalizeReference;
  }
});

// node_modules/markdown-it/lib/helpers/parse_link_label.js
var require_parse_link_label = __commonJS({
  "node_modules/markdown-it/lib/helpers/parse_link_label.js"(exports, module) {
    "use strict";
    module.exports = function parseLinkLabel(state, start, disableNested) {
      var level, found, marker, prevPos, labelEnd = -1, max = state.posMax, oldPos = state.pos;
      state.pos = start + 1;
      level = 1;
      while (state.pos < max) {
        marker = state.src.charCodeAt(state.pos);
        if (marker === 93) {
          level--;
          if (level === 0) {
            found = true;
            break;
          }
        }
        prevPos = state.pos;
        state.md.inline.skipToken(state);
        if (marker === 91) {
          if (prevPos === state.pos - 1) {
            level++;
          } else if (disableNested) {
            state.pos = oldPos;
            return -1;
          }
        }
      }
      if (found) {
        labelEnd = state.pos;
      }
      state.pos = oldPos;
      return labelEnd;
    };
  }
});

// node_modules/markdown-it/lib/helpers/parse_link_destination.js
var require_parse_link_destination = __commonJS({
  "node_modules/markdown-it/lib/helpers/parse_link_destination.js"(exports, module) {
    "use strict";
    var unescapeAll = require_utils().unescapeAll;
    module.exports = function parseLinkDestination(str, pos, max) {
      var code, level, lines = 0, start = pos, result = {
        ok: false,
        pos: 0,
        lines: 0,
        str: ""
      };
      if (str.charCodeAt(pos) === 60) {
        pos++;
        while (pos < max) {
          code = str.charCodeAt(pos);
          if (code === 10) {
            return result;
          }
          if (code === 60) {
            return result;
          }
          if (code === 62) {
            result.pos = pos + 1;
            result.str = unescapeAll(str.slice(start + 1, pos));
            result.ok = true;
            return result;
          }
          if (code === 92 && pos + 1 < max) {
            pos += 2;
            continue;
          }
          pos++;
        }
        return result;
      }
      level = 0;
      while (pos < max) {
        code = str.charCodeAt(pos);
        if (code === 32) {
          break;
        }
        if (code < 32 || code === 127) {
          break;
        }
        if (code === 92 && pos + 1 < max) {
          if (str.charCodeAt(pos + 1) === 32) {
            break;
          }
          pos += 2;
          continue;
        }
        if (code === 40) {
          level++;
          if (level > 32) {
            return result;
          }
        }
        if (code === 41) {
          if (level === 0) {
            break;
          }
          level--;
        }
        pos++;
      }
      if (start === pos) {
        return result;
      }
      if (level !== 0) {
        return result;
      }
      result.str = unescapeAll(str.slice(start, pos));
      result.lines = lines;
      result.pos = pos;
      result.ok = true;
      return result;
    };
  }
});

// node_modules/markdown-it/lib/helpers/parse_link_title.js
var require_parse_link_title = __commonJS({
  "node_modules/markdown-it/lib/helpers/parse_link_title.js"(exports, module) {
    "use strict";
    var unescapeAll = require_utils().unescapeAll;
    module.exports = function parseLinkTitle(str, pos, max) {
      var code, marker, lines = 0, start = pos, result = {
        ok: false,
        pos: 0,
        lines: 0,
        str: ""
      };
      if (pos >= max) {
        return result;
      }
      marker = str.charCodeAt(pos);
      if (marker !== 34 && marker !== 39 && marker !== 40) {
        return result;
      }
      pos++;
      if (marker === 40) {
        marker = 41;
      }
      while (pos < max) {
        code = str.charCodeAt(pos);
        if (code === marker) {
          result.pos = pos + 1;
          result.lines = lines;
          result.str = unescapeAll(str.slice(start + 1, pos));
          result.ok = true;
          return result;
        } else if (code === 40 && marker === 41) {
          return result;
        } else if (code === 10) {
          lines++;
        } else if (code === 92 && pos + 1 < max) {
          pos++;
          if (str.charCodeAt(pos) === 10) {
            lines++;
          }
        }
        pos++;
      }
      return result;
    };
  }
});

// node_modules/markdown-it/lib/helpers/index.js
var require_helpers = __commonJS({
  "node_modules/markdown-it/lib/helpers/index.js"(exports) {
    "use strict";
    exports.parseLinkLabel = require_parse_link_label();
    exports.parseLinkDestination = require_parse_link_destination();
    exports.parseLinkTitle = require_parse_link_title();
  }
});

// node_modules/markdown-it/lib/renderer.js
var require_renderer = __commonJS({
  "node_modules/markdown-it/lib/renderer.js"(exports, module) {
    "use strict";
    var assign = require_utils().assign;
    var unescapeAll = require_utils().unescapeAll;
    var escapeHtml = require_utils().escapeHtml;
    var default_rules = {};
    default_rules.code_inline = function(tokens, idx, options, env2, slf) {
      var token = tokens[idx];
      return "<code" + slf.renderAttrs(token) + ">" + escapeHtml(tokens[idx].content) + "</code>";
    };
    default_rules.code_block = function(tokens, idx, options, env2, slf) {
      var token = tokens[idx];
      return "<pre" + slf.renderAttrs(token) + "><code>" + escapeHtml(tokens[idx].content) + "</code></pre>\n";
    };
    default_rules.fence = function(tokens, idx, options, env2, slf) {
      var token = tokens[idx], info = token.info ? unescapeAll(token.info).trim() : "", langName = "", langAttrs = "", highlighted, i9, arr, tmpAttrs, tmpToken;
      if (info) {
        arr = info.split(/(\s+)/g);
        langName = arr[0];
        langAttrs = arr.slice(2).join("");
      }
      if (options.highlight) {
        highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content);
      } else {
        highlighted = escapeHtml(token.content);
      }
      if (highlighted.indexOf("<pre") === 0) {
        return highlighted + "\n";
      }
      if (info) {
        i9 = token.attrIndex("class");
        tmpAttrs = token.attrs ? token.attrs.slice() : [];
        if (i9 < 0) {
          tmpAttrs.push(["class", options.langPrefix + langName]);
        } else {
          tmpAttrs[i9] = tmpAttrs[i9].slice();
          tmpAttrs[i9][1] += " " + options.langPrefix + langName;
        }
        tmpToken = {
          attrs: tmpAttrs
        };
        return "<pre><code" + slf.renderAttrs(tmpToken) + ">" + highlighted + "</code></pre>\n";
      }
      return "<pre><code" + slf.renderAttrs(token) + ">" + highlighted + "</code></pre>\n";
    };
    default_rules.image = function(tokens, idx, options, env2, slf) {
      var token = tokens[idx];
      token.attrs[token.attrIndex("alt")][1] = slf.renderInlineAsText(token.children, options, env2);
      return slf.renderToken(tokens, idx, options);
    };
    default_rules.hardbreak = function(tokens, idx, options) {
      return options.xhtmlOut ? "<br />\n" : "<br>\n";
    };
    default_rules.softbreak = function(tokens, idx, options) {
      return options.breaks ? options.xhtmlOut ? "<br />\n" : "<br>\n" : "\n";
    };
    default_rules.text = function(tokens, idx) {
      return escapeHtml(tokens[idx].content);
    };
    default_rules.html_block = function(tokens, idx) {
      return tokens[idx].content;
    };
    default_rules.html_inline = function(tokens, idx) {
      return tokens[idx].content;
    };
    function Renderer() {
      this.rules = assign({}, default_rules);
    }
    Renderer.prototype.renderAttrs = function renderAttrs(token) {
      var i9, l12, result;
      if (!token.attrs) {
        return "";
      }
      result = "";
      for (i9 = 0, l12 = token.attrs.length; i9 < l12; i9++) {
        result += " " + escapeHtml(token.attrs[i9][0]) + '="' + escapeHtml(token.attrs[i9][1]) + '"';
      }
      return result;
    };
    Renderer.prototype.renderToken = function renderToken(tokens, idx, options) {
      var nextToken, result = "", needLf = false, token = tokens[idx];
      if (token.hidden) {
        return "";
      }
      if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {
        result += "\n";
      }
      result += (token.nesting === -1 ? "</" : "<") + token.tag;
      result += this.renderAttrs(token);
      if (token.nesting === 0 && options.xhtmlOut) {
        result += " /";
      }
      if (token.block) {
        needLf = true;
        if (token.nesting === 1) {
          if (idx + 1 < tokens.length) {
            nextToken = tokens[idx + 1];
            if (nextToken.type === "inline" || nextToken.hidden) {
              needLf = false;
            } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {
              needLf = false;
            }
          }
        }
      }
      result += needLf ? ">\n" : ">";
      return result;
    };
    Renderer.prototype.renderInline = function(tokens, options, env2) {
      var type, result = "", rules = this.rules;
      for (var i9 = 0, len = tokens.length; i9 < len; i9++) {
        type = tokens[i9].type;
        if (typeof rules[type] !== "undefined") {
          result += rules[type](tokens, i9, options, env2, this);
        } else {
          result += this.renderToken(tokens, i9, options);
        }
      }
      return result;
    };
    Renderer.prototype.renderInlineAsText = function(tokens, options, env2) {
      var result = "";
      for (var i9 = 0, len = tokens.length; i9 < len; i9++) {
        if (tokens[i9].type === "text") {
          result += tokens[i9].content;
        } else if (tokens[i9].type === "image") {
          result += this.renderInlineAsText(tokens[i9].children, options, env2);
        } else if (tokens[i9].type === "softbreak") {
          result += "\n";
        }
      }
      return result;
    };
    Renderer.prototype.render = function(tokens, options, env2) {
      var i9, len, type, result = "", rules = this.rules;
      for (i9 = 0, len = tokens.length; i9 < len; i9++) {
        type = tokens[i9].type;
        if (type === "inline") {
          result += this.renderInline(tokens[i9].children, options, env2);
        } else if (typeof rules[type] !== "undefined") {
          result += rules[tokens[i9].type](tokens, i9, options, env2, this);
        } else {
          result += this.renderToken(tokens, i9, options, env2);
        }
      }
      return result;
    };
    module.exports = Renderer;
  }
});

// node_modules/markdown-it/lib/ruler.js
var require_ruler = __commonJS({
  "node_modules/markdown-it/lib/ruler.js"(exports, module) {
    "use strict";
    function Ruler() {
      this.__rules__ = [];
      this.__cache__ = null;
    }
    Ruler.prototype.__find__ = function(name) {
      for (var i9 = 0; i9 < this.__rules__.length; i9++) {
        if (this.__rules__[i9].name === name) {
          return i9;
        }
      }
      return -1;
    };
    Ruler.prototype.__compile__ = function() {
      var self = this;
      var chains = [""];
      self.__rules__.forEach(function(rule) {
        if (!rule.enabled) {
          return;
        }
        rule.alt.forEach(function(altName) {
          if (chains.indexOf(altName) < 0) {
            chains.push(altName);
          }
        });
      });
      self.__cache__ = {};
      chains.forEach(function(chain) {
        self.__cache__[chain] = [];
        self.__rules__.forEach(function(rule) {
          if (!rule.enabled) {
            return;
          }
          if (chain && rule.alt.indexOf(chain) < 0) {
            return;
          }
          self.__cache__[chain].push(rule.fn);
        });
      });
    };
    Ruler.prototype.at = function(name, fn, options) {
      var index2 = this.__find__(name);
      var opt = options || {};
      if (index2 === -1) {
        throw new Error("Parser rule not found: " + name);
      }
      this.__rules__[index2].fn = fn;
      this.__rules__[index2].alt = opt.alt || [];
      this.__cache__ = null;
    };
    Ruler.prototype.before = function(beforeName, ruleName, fn, options) {
      var index2 = this.__find__(beforeName);
      var opt = options || {};
      if (index2 === -1) {
        throw new Error("Parser rule not found: " + beforeName);
      }
      this.__rules__.splice(index2, 0, {
        name: ruleName,
        enabled: true,
        fn,
        alt: opt.alt || []
      });
      this.__cache__ = null;
    };
    Ruler.prototype.after = function(afterName, ruleName, fn, options) {
      var index2 = this.__find__(afterName);
      var opt = options || {};
      if (index2 === -1) {
        throw new Error("Parser rule not found: " + afterName);
      }
      this.__rules__.splice(index2 + 1, 0, {
        name: ruleName,
        enabled: true,
        fn,
        alt: opt.alt || []
      });
      this.__cache__ = null;
    };
    Ruler.prototype.push = function(ruleName, fn, options) {
      var opt = options || {};
      this.__rules__.push({
        name: ruleName,
        enabled: true,
        fn,
        alt: opt.alt || []
      });
      this.__cache__ = null;
    };
    Ruler.prototype.enable = function(list, ignoreInvalid) {
      if (!Array.isArray(list)) {
        list = [list];
      }
      var result = [];
      list.forEach(function(name) {
        var idx = this.__find__(name);
        if (idx < 0) {
          if (ignoreInvalid) {
            return;
          }
          throw new Error("Rules manager: invalid rule name " + name);
        }
        this.__rules__[idx].enabled = true;
        result.push(name);
      }, this);
      this.__cache__ = null;
      return result;
    };
    Ruler.prototype.enableOnly = function(list, ignoreInvalid) {
      if (!Array.isArray(list)) {
        list = [list];
      }
      this.__rules__.forEach(function(rule) {
        rule.enabled = false;
      });
      this.enable(list, ignoreInvalid);
    };
    Ruler.prototype.disable = function(list, ignoreInvalid) {
      if (!Array.isArray(list)) {
        list = [list];
      }
      var result = [];
      list.forEach(function(name) {
        var idx = this.__find__(name);
        if (idx < 0) {
          if (ignoreInvalid) {
            return;
          }
          throw new Error("Rules manager: invalid rule name " + name);
        }
        this.__rules__[idx].enabled = false;
        result.push(name);
      }, this);
      this.__cache__ = null;
      return result;
    };
    Ruler.prototype.getRules = function(chainName) {
      if (this.__cache__ === null) {
        this.__compile__();
      }
      return this.__cache__[chainName] || [];
    };
    module.exports = Ruler;
  }
});

// node_modules/markdown-it/lib/rules_core/normalize.js
var require_normalize = __commonJS({
  "node_modules/markdown-it/lib/rules_core/normalize.js"(exports, module) {
    "use strict";
    var NEWLINES_RE = /\r\n?|\n/g;
    var NULL_RE = /\0/g;
    module.exports = function normalize(state) {
      var str;
      str = state.src.replace(NEWLINES_RE, "\n");
      str = str.replace(NULL_RE, "�");
      state.src = str;
    };
  }
});

// node_modules/markdown-it/lib/rules_core/block.js
var require_block = __commonJS({
  "node_modules/markdown-it/lib/rules_core/block.js"(exports, module) {
    "use strict";
    module.exports = function block(state) {
      var token;
      if (state.inlineMode) {
        token = new state.Token("inline", "", 0);
        token.content = state.src;
        token.map = [0, 1];
        token.children = [];
        state.tokens.push(token);
      } else {
        state.md.block.parse(state.src, state.md, state.env, state.tokens);
      }
    };
  }
});

// node_modules/markdown-it/lib/rules_core/inline.js
var require_inline = __commonJS({
  "node_modules/markdown-it/lib/rules_core/inline.js"(exports, module) {
    "use strict";
    module.exports = function inline(state) {
      var tokens = state.tokens, tok, i9, l12;
      for (i9 = 0, l12 = tokens.length; i9 < l12; i9++) {
        tok = tokens[i9];
        if (tok.type === "inline") {
          state.md.inline.parse(tok.content, state.md, state.env, tok.children);
        }
      }
    };
  }
});

// node_modules/markdown-it/lib/rules_core/linkify.js
var require_linkify = __commonJS({
  "node_modules/markdown-it/lib/rules_core/linkify.js"(exports, module) {
    "use strict";
    var arrayReplaceAt = require_utils().arrayReplaceAt;
    function isLinkOpen(str) {
      return /^<a[>\s]/i.test(str);
    }
    function isLinkClose(str) {
      return /^<\/a\s*>/i.test(str);
    }
    module.exports = function linkify(state) {
      var i9, j6, l12, tokens, token, currentToken, nodes, ln2, text, pos, lastPos, level, htmlLinkLevel, url, fullUrl, urlText, blockTokens = state.tokens, links;
      if (!state.md.options.linkify) {
        return;
      }
      for (j6 = 0, l12 = blockTokens.length; j6 < l12; j6++) {
        if (blockTokens[j6].type !== "inline" || !state.md.linkify.pretest(blockTokens[j6].content)) {
          continue;
        }
        tokens = blockTokens[j6].children;
        htmlLinkLevel = 0;
        for (i9 = tokens.length - 1; i9 >= 0; i9--) {
          currentToken = tokens[i9];
          if (currentToken.type === "link_close") {
            i9--;
            while (tokens[i9].level !== currentToken.level && tokens[i9].type !== "link_open") {
              i9--;
            }
            continue;
          }
          if (currentToken.type === "html_inline") {
            if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {
              htmlLinkLevel--;
            }
            if (isLinkClose(currentToken.content)) {
              htmlLinkLevel++;
            }
          }
          if (htmlLinkLevel > 0) {
            continue;
          }
          if (currentToken.type === "text" && state.md.linkify.test(currentToken.content)) {
            text = currentToken.content;
            links = state.md.linkify.match(text);
            nodes = [];
            level = currentToken.level;
            lastPos = 0;
            for (ln2 = 0; ln2 < links.length; ln2++) {
              url = links[ln2].url;
              fullUrl = state.md.normalizeLink(url);
              if (!state.md.validateLink(fullUrl)) {
                continue;
              }
              urlText = links[ln2].text;
              if (!links[ln2].schema) {
                urlText = state.md.normalizeLinkText("http://" + urlText).replace(/^http:\/\//, "");
              } else if (links[ln2].schema === "mailto:" && !/^mailto:/i.test(urlText)) {
                urlText = state.md.normalizeLinkText("mailto:" + urlText).replace(/^mailto:/, "");
              } else {
                urlText = state.md.normalizeLinkText(urlText);
              }
              pos = links[ln2].index;
              if (pos > lastPos) {
                token = new state.Token("text", "", 0);
                token.content = text.slice(lastPos, pos);
                token.level = level;
                nodes.push(token);
              }
              token = new state.Token("link_open", "a", 1);
              token.attrs = [["href", fullUrl]];
              token.level = level++;
              token.markup = "linkify";
              token.info = "auto";
              nodes.push(token);
              token = new state.Token("text", "", 0);
              token.content = urlText;
              token.level = level;
              nodes.push(token);
              token = new state.Token("link_close", "a", -1);
              token.level = --level;
              token.markup = "linkify";
              token.info = "auto";
              nodes.push(token);
              lastPos = links[ln2].lastIndex;
            }
            if (lastPos < text.length) {
              token = new state.Token("text", "", 0);
              token.content = text.slice(lastPos);
              token.level = level;
              nodes.push(token);
            }
            blockTokens[j6].children = tokens = arrayReplaceAt(tokens, i9, nodes);
          }
        }
      }
    };
  }
});

// node_modules/markdown-it/lib/rules_core/replacements.js
var require_replacements = __commonJS({
  "node_modules/markdown-it/lib/rules_core/replacements.js"(exports, module) {
    "use strict";
    var RARE_RE = /\+-|\.\.|\?\?\?\?|!!!!|,,|--/;
    var SCOPED_ABBR_TEST_RE = /\((c|tm|r|p)\)/i;
    var SCOPED_ABBR_RE = /\((c|tm|r|p)\)/ig;
    var SCOPED_ABBR = {
      c: "©",
      r: "®",
      p: "§",
      tm: "™"
    };
    function replaceFn(match, name) {
      return SCOPED_ABBR[name.toLowerCase()];
    }
    function replace_scoped(inlineTokens) {
      var i9, token, inside_autolink = 0;
      for (i9 = inlineTokens.length - 1; i9 >= 0; i9--) {
        token = inlineTokens[i9];
        if (token.type === "text" && !inside_autolink) {
          token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);
        }
        if (token.type === "link_open" && token.info === "auto") {
          inside_autolink--;
        }
        if (token.type === "link_close" && token.info === "auto") {
          inside_autolink++;
        }
      }
    }
    function replace_rare(inlineTokens) {
      var i9, token, inside_autolink = 0;
      for (i9 = inlineTokens.length - 1; i9 >= 0; i9--) {
        token = inlineTokens[i9];
        if (token.type === "text" && !inside_autolink) {
          if (RARE_RE.test(token.content)) {
            token.content = token.content.replace(/\+-/g, "±").replace(/\.{2,}/g, "…").replace(/([?!])…/g, "$1..").replace(/([?!]){4,}/g, "$1$1$1").replace(/,{2,}/g, ",").replace(/(^|[^-])---(?=[^-]|$)/mg, "$1—").replace(/(^|\s)--(?=\s|$)/mg, "$1–").replace(/(^|[^-\s])--(?=[^-\s]|$)/mg, "$1–");
          }
        }
        if (token.type === "link_open" && token.info === "auto") {
          inside_autolink--;
        }
        if (token.type === "link_close" && token.info === "auto") {
          inside_autolink++;
        }
      }
    }
    module.exports = function replace(state) {
      var blkIdx;
      if (!state.md.options.typographer) {
        return;
      }
      for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {
        if (state.tokens[blkIdx].type !== "inline") {
          continue;
        }
        if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {
          replace_scoped(state.tokens[blkIdx].children);
        }
        if (RARE_RE.test(state.tokens[blkIdx].content)) {
          replace_rare(state.tokens[blkIdx].children);
        }
      }
    };
  }
});

// node_modules/markdown-it/lib/rules_core/smartquotes.js
var require_smartquotes = __commonJS({
  "node_modules/markdown-it/lib/rules_core/smartquotes.js"(exports, module) {
    "use strict";
    var isWhiteSpace = require_utils().isWhiteSpace;
    var isPunctChar = require_utils().isPunctChar;
    var isMdAsciiPunct = require_utils().isMdAsciiPunct;
    var QUOTE_TEST_RE = /['"]/;
    var QUOTE_RE = /['"]/g;
    var APOSTROPHE = "’";
    function replaceAt(str, index2, ch) {
      return str.substr(0, index2) + ch + str.substr(index2 + 1);
    }
    function process_inlines(tokens, state) {
      var i9, token, text, t18, pos, max, thisLevel, item, lastChar, nextChar, isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace, canOpen, canClose, j6, isSingle, stack, openQuote, closeQuote;
      stack = [];
      for (i9 = 0; i9 < tokens.length; i9++) {
        token = tokens[i9];
        thisLevel = tokens[i9].level;
        for (j6 = stack.length - 1; j6 >= 0; j6--) {
          if (stack[j6].level <= thisLevel) {
            break;
          }
        }
        stack.length = j6 + 1;
        if (token.type !== "text") {
          continue;
        }
        text = token.content;
        pos = 0;
        max = text.length;
        OUTER:
          while (pos < max) {
            QUOTE_RE.lastIndex = pos;
            t18 = QUOTE_RE.exec(text);
            if (!t18) {
              break;
            }
            canOpen = canClose = true;
            pos = t18.index + 1;
            isSingle = t18[0] === "'";
            lastChar = 32;
            if (t18.index - 1 >= 0) {
              lastChar = text.charCodeAt(t18.index - 1);
            } else {
              for (j6 = i9 - 1; j6 >= 0; j6--) {
                if (tokens[j6].type === "softbreak" || tokens[j6].type === "hardbreak")
                  break;
                if (!tokens[j6].content)
                  continue;
                lastChar = tokens[j6].content.charCodeAt(tokens[j6].content.length - 1);
                break;
              }
            }
            nextChar = 32;
            if (pos < max) {
              nextChar = text.charCodeAt(pos);
            } else {
              for (j6 = i9 + 1; j6 < tokens.length; j6++) {
                if (tokens[j6].type === "softbreak" || tokens[j6].type === "hardbreak")
                  break;
                if (!tokens[j6].content)
                  continue;
                nextChar = tokens[j6].content.charCodeAt(0);
                break;
              }
            }
            isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));
            isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));
            isLastWhiteSpace = isWhiteSpace(lastChar);
            isNextWhiteSpace = isWhiteSpace(nextChar);
            if (isNextWhiteSpace) {
              canOpen = false;
            } else if (isNextPunctChar) {
              if (!(isLastWhiteSpace || isLastPunctChar)) {
                canOpen = false;
              }
            }
            if (isLastWhiteSpace) {
              canClose = false;
            } else if (isLastPunctChar) {
              if (!(isNextWhiteSpace || isNextPunctChar)) {
                canClose = false;
              }
            }
            if (nextChar === 34 && t18[0] === '"') {
              if (lastChar >= 48 && lastChar <= 57) {
                canClose = canOpen = false;
              }
            }
            if (canOpen && canClose) {
              canOpen = isLastPunctChar;
              canClose = isNextPunctChar;
            }
            if (!canOpen && !canClose) {
              if (isSingle) {
                token.content = replaceAt(token.content, t18.index, APOSTROPHE);
              }
              continue;
            }
            if (canClose) {
              for (j6 = stack.length - 1; j6 >= 0; j6--) {
                item = stack[j6];
                if (stack[j6].level < thisLevel) {
                  break;
                }
                if (item.single === isSingle && stack[j6].level === thisLevel) {
                  item = stack[j6];
                  if (isSingle) {
                    openQuote = state.md.options.quotes[2];
                    closeQuote = state.md.options.quotes[3];
                  } else {
                    openQuote = state.md.options.quotes[0];
                    closeQuote = state.md.options.quotes[1];
                  }
                  token.content = replaceAt(token.content, t18.index, closeQuote);
                  tokens[item.token].content = replaceAt(
                    tokens[item.token].content,
                    item.pos,
                    openQuote
                  );
                  pos += closeQuote.length - 1;
                  if (item.token === i9) {
                    pos += openQuote.length - 1;
                  }
                  text = token.content;
                  max = text.length;
                  stack.length = j6;
                  continue OUTER;
                }
              }
            }
            if (canOpen) {
              stack.push({
                token: i9,
                pos: t18.index,
                single: isSingle,
                level: thisLevel
              });
            } else if (canClose && isSingle) {
              token.content = replaceAt(token.content, t18.index, APOSTROPHE);
            }
          }
      }
    }
    module.exports = function smartquotes(state) {
      var blkIdx;
      if (!state.md.options.typographer) {
        return;
      }
      for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {
        if (state.tokens[blkIdx].type !== "inline" || !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {
          continue;
        }
        process_inlines(state.tokens[blkIdx].children, state);
      }
    };
  }
});

// node_modules/markdown-it/lib/token.js
var require_token = __commonJS({
  "node_modules/markdown-it/lib/token.js"(exports, module) {
    "use strict";
    function Token(type, tag, nesting) {
      this.type = type;
      this.tag = tag;
      this.attrs = null;
      this.map = null;
      this.nesting = nesting;
      this.level = 0;
      this.children = null;
      this.content = "";
      this.markup = "";
      this.info = "";
      this.meta = null;
      this.block = false;
      this.hidden = false;
    }
    Token.prototype.attrIndex = function attrIndex(name) {
      var attrs, i9, len;
      if (!this.attrs) {
        return -1;
      }
      attrs = this.attrs;
      for (i9 = 0, len = attrs.length; i9 < len; i9++) {
        if (attrs[i9][0] === name) {
          return i9;
        }
      }
      return -1;
    };
    Token.prototype.attrPush = function attrPush(attrData) {
      if (this.attrs) {
        this.attrs.push(attrData);
      } else {
        this.attrs = [attrData];
      }
    };
    Token.prototype.attrSet = function attrSet(name, value) {
      var idx = this.attrIndex(name), attrData = [name, value];
      if (idx < 0) {
        this.attrPush(attrData);
      } else {
        this.attrs[idx] = attrData;
      }
    };
    Token.prototype.attrGet = function attrGet(name) {
      var idx = this.attrIndex(name), value = null;
      if (idx >= 0) {
        value = this.attrs[idx][1];
      }
      return value;
    };
    Token.prototype.attrJoin = function attrJoin(name, value) {
      var idx = this.attrIndex(name);
      if (idx < 0) {
        this.attrPush([name, value]);
      } else {
        this.attrs[idx][1] = this.attrs[idx][1] + " " + value;
      }
    };
    module.exports = Token;
  }
});

// node_modules/markdown-it/lib/rules_core/state_core.js
var require_state_core = __commonJS({
  "node_modules/markdown-it/lib/rules_core/state_core.js"(exports, module) {
    "use strict";
    var Token = require_token();
    function StateCore(src, md, env2) {
      this.src = src;
      this.env = env2;
      this.tokens = [];
      this.inlineMode = false;
      this.md = md;
    }
    StateCore.prototype.Token = Token;
    module.exports = StateCore;
  }
});

// node_modules/markdown-it/lib/parser_core.js
var require_parser_core = __commonJS({
  "node_modules/markdown-it/lib/parser_core.js"(exports, module) {
    "use strict";
    var Ruler = require_ruler();
    var _rules = [
      ["normalize", require_normalize()],
      ["block", require_block()],
      ["inline", require_inline()],
      ["linkify", require_linkify()],
      ["replacements", require_replacements()],
      ["smartquotes", require_smartquotes()]
    ];
    function Core() {
      this.ruler = new Ruler();
      for (var i9 = 0; i9 < _rules.length; i9++) {
        this.ruler.push(_rules[i9][0], _rules[i9][1]);
      }
    }
    Core.prototype.process = function(state) {
      var i9, l12, rules;
      rules = this.ruler.getRules("");
      for (i9 = 0, l12 = rules.length; i9 < l12; i9++) {
        rules[i9](state);
      }
    };
    Core.prototype.State = require_state_core();
    module.exports = Core;
  }
});

// node_modules/markdown-it/lib/rules_block/table.js
var require_table = __commonJS({
  "node_modules/markdown-it/lib/rules_block/table.js"(exports, module) {
    "use strict";
    var isSpace = require_utils().isSpace;
    function getLine(state, line) {
      var pos = state.bMarks[line] + state.tShift[line], max = state.eMarks[line];
      return state.src.substr(pos, max - pos);
    }
    function escapedSplit(str) {
      var result = [], pos = 0, max = str.length, ch, isEscaped = false, lastPos = 0, current = "";
      ch = str.charCodeAt(pos);
      while (pos < max) {
        if (ch === 124) {
          if (!isEscaped) {
            result.push(current + str.substring(lastPos, pos));
            current = "";
            lastPos = pos + 1;
          } else {
            current += str.substring(lastPos, pos - 1);
            lastPos = pos;
          }
        }
        isEscaped = ch === 92;
        pos++;
        ch = str.charCodeAt(pos);
      }
      result.push(current + str.substring(lastPos));
      return result;
    }
    module.exports = function table(state, startLine, endLine, silent) {
      var ch, lineText, pos, i9, l12, nextLine, columns, columnCount, token, aligns, t18, tableLines, tbodyLines, oldParentType, terminate, terminatorRules, firstCh, secondCh;
      if (startLine + 2 > endLine) {
        return false;
      }
      nextLine = startLine + 1;
      if (state.sCount[nextLine] < state.blkIndent) {
        return false;
      }
      if (state.sCount[nextLine] - state.blkIndent >= 4) {
        return false;
      }
      pos = state.bMarks[nextLine] + state.tShift[nextLine];
      if (pos >= state.eMarks[nextLine]) {
        return false;
      }
      firstCh = state.src.charCodeAt(pos++);
      if (firstCh !== 124 && firstCh !== 45 && firstCh !== 58) {
        return false;
      }
      if (pos >= state.eMarks[nextLine]) {
        return false;
      }
      secondCh = state.src.charCodeAt(pos++);
      if (secondCh !== 124 && secondCh !== 45 && secondCh !== 58 && !isSpace(secondCh)) {
        return false;
      }
      if (firstCh === 45 && isSpace(secondCh)) {
        return false;
      }
      while (pos < state.eMarks[nextLine]) {
        ch = state.src.charCodeAt(pos);
        if (ch !== 124 && ch !== 45 && ch !== 58 && !isSpace(ch)) {
          return false;
        }
        pos++;
      }
      lineText = getLine(state, startLine + 1);
      columns = lineText.split("|");
      aligns = [];
      for (i9 = 0; i9 < columns.length; i9++) {
        t18 = columns[i9].trim();
        if (!t18) {
          if (i9 === 0 || i9 === columns.length - 1) {
            continue;
          } else {
            return false;
          }
        }
        if (!/^:?-+:?$/.test(t18)) {
          return false;
        }
        if (t18.charCodeAt(t18.length - 1) === 58) {
          aligns.push(t18.charCodeAt(0) === 58 ? "center" : "right");
        } else if (t18.charCodeAt(0) === 58) {
          aligns.push("left");
        } else {
          aligns.push("");
        }
      }
      lineText = getLine(state, startLine).trim();
      if (lineText.indexOf("|") === -1) {
        return false;
      }
      if (state.sCount[startLine] - state.blkIndent >= 4) {
        return false;
      }
      columns = escapedSplit(lineText);
      if (columns.length && columns[0] === "")
        columns.shift();
      if (columns.length && columns[columns.length - 1] === "")
        columns.pop();
      columnCount = columns.length;
      if (columnCount === 0 || columnCount !== aligns.length) {
        return false;
      }
      if (silent) {
        return true;
      }
      oldParentType = state.parentType;
      state.parentType = "table";
      terminatorRules = state.md.block.ruler.getRules("blockquote");
      token = state.push("table_open", "table", 1);
      token.map = tableLines = [startLine, 0];
      token = state.push("thead_open", "thead", 1);
      token.map = [startLine, startLine + 1];
      token = state.push("tr_open", "tr", 1);
      token.map = [startLine, startLine + 1];
      for (i9 = 0; i9 < columns.length; i9++) {
        token = state.push("th_open", "th", 1);
        if (aligns[i9]) {
          token.attrs = [["style", "text-align:" + aligns[i9]]];
        }
        token = state.push("inline", "", 0);
        token.content = columns[i9].trim();
        token.children = [];
        token = state.push("th_close", "th", -1);
      }
      token = state.push("tr_close", "tr", -1);
      token = state.push("thead_close", "thead", -1);
      for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {
        if (state.sCount[nextLine] < state.blkIndent) {
          break;
        }
        terminate = false;
        for (i9 = 0, l12 = terminatorRules.length; i9 < l12; i9++) {
          if (terminatorRules[i9](state, nextLine, endLine, true)) {
            terminate = true;
            break;
          }
        }
        if (terminate) {
          break;
        }
        lineText = getLine(state, nextLine).trim();
        if (!lineText) {
          break;
        }
        if (state.sCount[nextLine] - state.blkIndent >= 4) {
          break;
        }
        columns = escapedSplit(lineText);
        if (columns.length && columns[0] === "")
          columns.shift();
        if (columns.length && columns[columns.length - 1] === "")
          columns.pop();
        if (nextLine === startLine + 2) {
          token = state.push("tbody_open", "tbody", 1);
          token.map = tbodyLines = [startLine + 2, 0];
        }
        token = state.push("tr_open", "tr", 1);
        token.map = [nextLine, nextLine + 1];
        for (i9 = 0; i9 < columnCount; i9++) {
          token = state.push("td_open", "td", 1);
          if (aligns[i9]) {
            token.attrs = [["style", "text-align:" + aligns[i9]]];
          }
          token = state.push("inline", "", 0);
          token.content = columns[i9] ? columns[i9].trim() : "";
          token.children = [];
          token = state.push("td_close", "td", -1);
        }
        token = state.push("tr_close", "tr", -1);
      }
      if (tbodyLines) {
        token = state.push("tbody_close", "tbody", -1);
        tbodyLines[1] = nextLine;
      }
      token = state.push("table_close", "table", -1);
      tableLines[1] = nextLine;
      state.parentType = oldParentType;
      state.line = nextLine;
      return true;
    };
  }
});

// node_modules/markdown-it/lib/rules_block/code.js
var require_code = __commonJS({
  "node_modules/markdown-it/lib/rules_block/code.js"(exports, module) {
    "use strict";
    module.exports = function code(state, startLine, endLine) {
      var nextLine, last, token;
      if (state.sCount[startLine] - state.blkIndent < 4) {
        return false;
      }
      last = nextLine = startLine + 1;
      while (nextLine < endLine) {
        if (state.isEmpty(nextLine)) {
          nextLine++;
          continue;
        }
        if (state.sCount[nextLine] - state.blkIndent >= 4) {
          nextLine++;
          last = nextLine;
          continue;
        }
        break;
      }
      state.line = last;
      token = state.push("code_block", "code", 0);
      token.content = state.getLines(startLine, last, 4 + state.blkIndent, false) + "\n";
      token.map = [startLine, state.line];
      return true;
    };
  }
});

// node_modules/markdown-it/lib/rules_block/fence.js
var require_fence = __commonJS({
  "node_modules/markdown-it/lib/rules_block/fence.js"(exports, module) {
    "use strict";
    module.exports = function fence(state, startLine, endLine, silent) {
      var marker, len, params, nextLine, mem, token, markup, haveEndMarker = false, pos = state.bMarks[startLine] + state.tShift[startLine], max = state.eMarks[startLine];
      if (state.sCount[startLine] - state.blkIndent >= 4) {
        return false;
      }
      if (pos + 3 > max) {
        return false;
      }
      marker = state.src.charCodeAt(pos);
      if (marker !== 126 && marker !== 96) {
        return false;
      }
      mem = pos;
      pos = state.skipChars(pos, marker);
      len = pos - mem;
      if (len < 3) {
        return false;
      }
      markup = state.src.slice(mem, pos);
      params = state.src.slice(pos, max);
      if (marker === 96) {
        if (params.indexOf(String.fromCharCode(marker)) >= 0) {
          return false;
        }
      }
      if (silent) {
        return true;
      }
      nextLine = startLine;
      for (; ; ) {
        nextLine++;
        if (nextLine >= endLine) {
          break;
        }
        pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];
        max = state.eMarks[nextLine];
        if (pos < max && state.sCount[nextLine] < state.blkIndent) {
          break;
        }
        if (state.src.charCodeAt(pos) !== marker) {
          continue;
        }
        if (state.sCount[nextLine] - state.blkIndent >= 4) {
          continue;
        }
        pos = state.skipChars(pos, marker);
        if (pos - mem < len) {
          continue;
        }
        pos = state.skipSpaces(pos);
        if (pos < max) {
          continue;
        }
        haveEndMarker = true;
        break;
      }
      len = state.sCount[startLine];
      state.line = nextLine + (haveEndMarker ? 1 : 0);
      token = state.push("fence", "code", 0);
      token.info = params;
      token.content = state.getLines(startLine + 1, nextLine, len, true);
      token.markup = markup;
      token.map = [startLine, state.line];
      return true;
    };
  }
});

// node_modules/markdown-it/lib/rules_block/blockquote.js
var require_blockquote = __commonJS({
  "node_modules/markdown-it/lib/rules_block/blockquote.js"(exports, module) {
    "use strict";
    var isSpace = require_utils().isSpace;
    module.exports = function blockquote(state, startLine, endLine, silent) {
      var adjustTab, ch, i9, initial, l12, lastLineEmpty, lines, nextLine, offset, oldBMarks, oldBSCount, oldIndent, oldParentType, oldSCount, oldTShift, spaceAfterMarker, terminate, terminatorRules, token, isOutdented, oldLineMax = state.lineMax, pos = state.bMarks[startLine] + state.tShift[startLine], max = state.eMarks[startLine];
      if (state.sCount[startLine] - state.blkIndent >= 4) {
        return false;
      }
      if (state.src.charCodeAt(pos++) !== 62) {
        return false;
      }
      if (silent) {
        return true;
      }
      initial = offset = state.sCount[startLine] + 1;
      if (state.src.charCodeAt(pos) === 32) {
        pos++;
        initial++;
        offset++;
        adjustTab = false;
        spaceAfterMarker = true;
      } else if (state.src.charCodeAt(pos) === 9) {
        spaceAfterMarker = true;
        if ((state.bsCount[startLine] + offset) % 4 === 3) {
          pos++;
          initial++;
          offset++;
          adjustTab = false;
        } else {
          adjustTab = true;
        }
      } else {
        spaceAfterMarker = false;
      }
      oldBMarks = [state.bMarks[startLine]];
      state.bMarks[startLine] = pos;
      while (pos < max) {
        ch = state.src.charCodeAt(pos);
        if (isSpace(ch)) {
          if (ch === 9) {
            offset += 4 - (offset + state.bsCount[startLine] + (adjustTab ? 1 : 0)) % 4;
          } else {
            offset++;
          }
        } else {
          break;
        }
        pos++;
      }
      oldBSCount = [state.bsCount[startLine]];
      state.bsCount[startLine] = state.sCount[startLine] + 1 + (spaceAfterMarker ? 1 : 0);
      lastLineEmpty = pos >= max;
      oldSCount = [state.sCount[startLine]];
      state.sCount[startLine] = offset - initial;
      oldTShift = [state.tShift[startLine]];
      state.tShift[startLine] = pos - state.bMarks[startLine];
      terminatorRules = state.md.block.ruler.getRules("blockquote");
      oldParentType = state.parentType;
      state.parentType = "blockquote";
      for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {
        isOutdented = state.sCount[nextLine] < state.blkIndent;
        pos = state.bMarks[nextLine] + state.tShift[nextLine];
        max = state.eMarks[nextLine];
        if (pos >= max) {
          break;
        }
        if (state.src.charCodeAt(pos++) === 62 && !isOutdented) {
          initial = offset = state.sCount[nextLine] + 1;
          if (state.src.charCodeAt(pos) === 32) {
            pos++;
            initial++;
            offset++;
            adjustTab = false;
            spaceAfterMarker = true;
          } else if (state.src.charCodeAt(pos) === 9) {
            spaceAfterMarker = true;
            if ((state.bsCount[nextLine] + offset) % 4 === 3) {
              pos++;
              initial++;
              offset++;
              adjustTab = false;
            } else {
              adjustTab = true;
            }
          } else {
            spaceAfterMarker = false;
          }
          oldBMarks.push(state.bMarks[nextLine]);
          state.bMarks[nextLine] = pos;
          while (pos < max) {
            ch = state.src.charCodeAt(pos);
            if (isSpace(ch)) {
              if (ch === 9) {
                offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;
              } else {
                offset++;
              }
            } else {
              break;
            }
            pos++;
          }
          lastLineEmpty = pos >= max;
          oldBSCount.push(state.bsCount[nextLine]);
          state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);
          oldSCount.push(state.sCount[nextLine]);
          state.sCount[nextLine] = offset - initial;
          oldTShift.push(state.tShift[nextLine]);
          state.tShift[nextLine] = pos - state.bMarks[nextLine];
          continue;
        }
        if (lastLineEmpty) {
          break;
        }
        terminate = false;
        for (i9 = 0, l12 = terminatorRules.length; i9 < l12; i9++) {
          if (terminatorRules[i9](state, nextLine, endLine, true)) {
            terminate = true;
            break;
          }
        }
        if (terminate) {
          state.lineMax = nextLine;
          if (state.blkIndent !== 0) {
            oldBMarks.push(state.bMarks[nextLine]);
            oldBSCount.push(state.bsCount[nextLine]);
            oldTShift.push(state.tShift[nextLine]);
            oldSCount.push(state.sCount[nextLine]);
            state.sCount[nextLine] -= state.blkIndent;
          }
          break;
        }
        oldBMarks.push(state.bMarks[nextLine]);
        oldBSCount.push(state.bsCount[nextLine]);
        oldTShift.push(state.tShift[nextLine]);
        oldSCount.push(state.sCount[nextLine]);
        state.sCount[nextLine] = -1;
      }
      oldIndent = state.blkIndent;
      state.blkIndent = 0;
      token = state.push("blockquote_open", "blockquote", 1);
      token.markup = ">";
      token.map = lines = [startLine, 0];
      state.md.block.tokenize(state, startLine, nextLine);
      token = state.push("blockquote_close", "blockquote", -1);
      token.markup = ">";
      state.lineMax = oldLineMax;
      state.parentType = oldParentType;
      lines[1] = state.line;
      for (i9 = 0; i9 < oldTShift.length; i9++) {
        state.bMarks[i9 + startLine] = oldBMarks[i9];
        state.tShift[i9 + startLine] = oldTShift[i9];
        state.sCount[i9 + startLine] = oldSCount[i9];
        state.bsCount[i9 + startLine] = oldBSCount[i9];
      }
      state.blkIndent = oldIndent;
      return true;
    };
  }
});

// node_modules/markdown-it/lib/rules_block/hr.js
var require_hr = __commonJS({
  "node_modules/markdown-it/lib/rules_block/hr.js"(exports, module) {
    "use strict";
    var isSpace = require_utils().isSpace;
    module.exports = function hr2(state, startLine, endLine, silent) {
      var marker, cnt, ch, token, pos = state.bMarks[startLine] + state.tShift[startLine], max = state.eMarks[startLine];
      if (state.sCount[startLine] - state.blkIndent >= 4) {
        return false;
      }
      marker = state.src.charCodeAt(pos++);
      if (marker !== 42 && marker !== 45 && marker !== 95) {
        return false;
      }
      cnt = 1;
      while (pos < max) {
        ch = state.src.charCodeAt(pos++);
        if (ch !== marker && !isSpace(ch)) {
          return false;
        }
        if (ch === marker) {
          cnt++;
        }
      }
      if (cnt < 3) {
        return false;
      }
      if (silent) {
        return true;
      }
      state.line = startLine + 1;
      token = state.push("hr", "hr", 0);
      token.map = [startLine, state.line];
      token.markup = Array(cnt + 1).join(String.fromCharCode(marker));
      return true;
    };
  }
});

// node_modules/markdown-it/lib/rules_block/list.js
var require_list = __commonJS({
  "node_modules/markdown-it/lib/rules_block/list.js"(exports, module) {
    "use strict";
    var isSpace = require_utils().isSpace;
    function skipBulletListMarker(state, startLine) {
      var marker, pos, max, ch;
      pos = state.bMarks[startLine] + state.tShift[startLine];
      max = state.eMarks[startLine];
      marker = state.src.charCodeAt(pos++);
      if (marker !== 42 && marker !== 45 && marker !== 43) {
        return -1;
      }
      if (pos < max) {
        ch = state.src.charCodeAt(pos);
        if (!isSpace(ch)) {
          return -1;
        }
      }
      return pos;
    }
    function skipOrderedListMarker(state, startLine) {
      var ch, start = state.bMarks[startLine] + state.tShift[startLine], pos = start, max = state.eMarks[startLine];
      if (pos + 1 >= max) {
        return -1;
      }
      ch = state.src.charCodeAt(pos++);
      if (ch < 48 || ch > 57) {
        return -1;
      }
      for (; ; ) {
        if (pos >= max) {
          return -1;
        }
        ch = state.src.charCodeAt(pos++);
        if (ch >= 48 && ch <= 57) {
          if (pos - start >= 10) {
            return -1;
          }
          continue;
        }
        if (ch === 41 || ch === 46) {
          break;
        }
        return -1;
      }
      if (pos < max) {
        ch = state.src.charCodeAt(pos);
        if (!isSpace(ch)) {
          return -1;
        }
      }
      return pos;
    }
    function markTightParagraphs(state, idx) {
      var i9, l12, level = state.level + 2;
      for (i9 = idx + 2, l12 = state.tokens.length - 2; i9 < l12; i9++) {
        if (state.tokens[i9].level === level && state.tokens[i9].type === "paragraph_open") {
          state.tokens[i9 + 2].hidden = true;
          state.tokens[i9].hidden = true;
          i9 += 2;
        }
      }
    }
    module.exports = function list(state, startLine, endLine, silent) {
      var ch, contentStart, i9, indent, indentAfterMarker, initial, isOrdered, itemLines, l12, listLines, listTokIdx, markerCharCode, markerValue, max, nextLine, offset, oldListIndent, oldParentType, oldSCount, oldTShift, oldTight, pos, posAfterMarker, prevEmptyEnd, start, terminate, terminatorRules, token, isTerminatingParagraph = false, tight = true;
      if (state.sCount[startLine] - state.blkIndent >= 4) {
        return false;
      }
      if (state.listIndent >= 0 && state.sCount[startLine] - state.listIndent >= 4 && state.sCount[startLine] < state.blkIndent) {
        return false;
      }
      if (silent && state.parentType === "paragraph") {
        if (state.sCount[startLine] >= state.blkIndent) {
          isTerminatingParagraph = true;
        }
      }
      if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {
        isOrdered = true;
        start = state.bMarks[startLine] + state.tShift[startLine];
        markerValue = Number(state.src.slice(start, posAfterMarker - 1));
        if (isTerminatingParagraph && markerValue !== 1)
          return false;
      } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {
        isOrdered = false;
      } else {
        return false;
      }
      if (isTerminatingParagraph) {
        if (state.skipSpaces(posAfterMarker) >= state.eMarks[startLine])
          return false;
      }
      markerCharCode = state.src.charCodeAt(posAfterMarker - 1);
      if (silent) {
        return true;
      }
      listTokIdx = state.tokens.length;
      if (isOrdered) {
        token = state.push("ordered_list_open", "ol", 1);
        if (markerValue !== 1) {
          token.attrs = [["start", markerValue]];
        }
      } else {
        token = state.push("bullet_list_open", "ul", 1);
      }
      token.map = listLines = [startLine, 0];
      token.markup = String.fromCharCode(markerCharCode);
      nextLine = startLine;
      prevEmptyEnd = false;
      terminatorRules = state.md.block.ruler.getRules("list");
      oldParentType = state.parentType;
      state.parentType = "list";
      while (nextLine < endLine) {
        pos = posAfterMarker;
        max = state.eMarks[nextLine];
        initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[startLine] + state.tShift[startLine]);
        while (pos < max) {
          ch = state.src.charCodeAt(pos);
          if (ch === 9) {
            offset += 4 - (offset + state.bsCount[nextLine]) % 4;
          } else if (ch === 32) {
            offset++;
          } else {
            break;
          }
          pos++;
        }
        contentStart = pos;
        if (contentStart >= max) {
          indentAfterMarker = 1;
        } else {
          indentAfterMarker = offset - initial;
        }
        if (indentAfterMarker > 4) {
          indentAfterMarker = 1;
        }
        indent = initial + indentAfterMarker;
        token = state.push("list_item_open", "li", 1);
        token.markup = String.fromCharCode(markerCharCode);
        token.map = itemLines = [startLine, 0];
        if (isOrdered) {
          token.info = state.src.slice(start, posAfterMarker - 1);
        }
        oldTight = state.tight;
        oldTShift = state.tShift[startLine];
        oldSCount = state.sCount[startLine];
        oldListIndent = state.listIndent;
        state.listIndent = state.blkIndent;
        state.blkIndent = indent;
        state.tight = true;
        state.tShift[startLine] = contentStart - state.bMarks[startLine];
        state.sCount[startLine] = offset;
        if (contentStart >= max && state.isEmpty(startLine + 1)) {
          state.line = Math.min(state.line + 2, endLine);
        } else {
          state.md.block.tokenize(state, startLine, endLine, true);
        }
        if (!state.tight || prevEmptyEnd) {
          tight = false;
        }
        prevEmptyEnd = state.line - startLine > 1 && state.isEmpty(state.line - 1);
        state.blkIndent = state.listIndent;
        state.listIndent = oldListIndent;
        state.tShift[startLine] = oldTShift;
        state.sCount[startLine] = oldSCount;
        state.tight = oldTight;
        token = state.push("list_item_close", "li", -1);
        token.markup = String.fromCharCode(markerCharCode);
        nextLine = startLine = state.line;
        itemLines[1] = nextLine;
        contentStart = state.bMarks[startLine];
        if (nextLine >= endLine) {
          break;
        }
        if (state.sCount[nextLine] < state.blkIndent) {
          break;
        }
        if (state.sCount[startLine] - state.blkIndent >= 4) {
          break;
        }
        terminate = false;
        for (i9 = 0, l12 = terminatorRules.length; i9 < l12; i9++) {
          if (terminatorRules[i9](state, nextLine, endLine, true)) {
            terminate = true;
            break;
          }
        }
        if (terminate) {
          break;
        }
        if (isOrdered) {
          posAfterMarker = skipOrderedListMarker(state, nextLine);
          if (posAfterMarker < 0) {
            break;
          }
          start = state.bMarks[nextLine] + state.tShift[nextLine];
        } else {
          posAfterMarker = skipBulletListMarker(state, nextLine);
          if (posAfterMarker < 0) {
            break;
          }
        }
        if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) {
          break;
        }
      }
      if (isOrdered) {
        token = state.push("ordered_list_close", "ol", -1);
      } else {
        token = state.push("bullet_list_close", "ul", -1);
      }
      token.markup = String.fromCharCode(markerCharCode);
      listLines[1] = nextLine;
      state.line = nextLine;
      state.parentType = oldParentType;
      if (tight) {
        markTightParagraphs(state, listTokIdx);
      }
      return true;
    };
  }
});

// node_modules/markdown-it/lib/rules_block/reference.js
var require_reference = __commonJS({
  "node_modules/markdown-it/lib/rules_block/reference.js"(exports, module) {
    "use strict";
    var normalizeReference = require_utils().normalizeReference;
    var isSpace = require_utils().isSpace;
    module.exports = function reference(state, startLine, _endLine, silent) {
      var ch, destEndPos, destEndLineNo, endLine, href, i9, l12, label, labelEnd, oldParentType, res, start, str, terminate, terminatorRules, title, lines = 0, pos = state.bMarks[startLine] + state.tShift[startLine], max = state.eMarks[startLine], nextLine = startLine + 1;
      if (state.sCount[startLine] - state.blkIndent >= 4) {
        return false;
      }
      if (state.src.charCodeAt(pos) !== 91) {
        return false;
      }
      while (++pos < max) {
        if (state.src.charCodeAt(pos) === 93 && state.src.charCodeAt(pos - 1) !== 92) {
          if (pos + 1 === max) {
            return false;
          }
          if (state.src.charCodeAt(pos + 1) !== 58) {
            return false;
          }
          break;
        }
      }
      endLine = state.lineMax;
      terminatorRules = state.md.block.ruler.getRules("reference");
      oldParentType = state.parentType;
      state.parentType = "reference";
      for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {
        if (state.sCount[nextLine] - state.blkIndent > 3) {
          continue;
        }
        if (state.sCount[nextLine] < 0) {
          continue;
        }
        terminate = false;
        for (i9 = 0, l12 = terminatorRules.length; i9 < l12; i9++) {
          if (terminatorRules[i9](state, nextLine, endLine, true)) {
            terminate = true;
            break;
          }
        }
        if (terminate) {
          break;
        }
      }
      str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();
      max = str.length;
      for (pos = 1; pos < max; pos++) {
        ch = str.charCodeAt(pos);
        if (ch === 91) {
          return false;
        } else if (ch === 93) {
          labelEnd = pos;
          break;
        } else if (ch === 10) {
          lines++;
        } else if (ch === 92) {
          pos++;
          if (pos < max && str.charCodeAt(pos) === 10) {
            lines++;
          }
        }
      }
      if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 58) {
        return false;
      }
      for (pos = labelEnd + 2; pos < max; pos++) {
        ch = str.charCodeAt(pos);
        if (ch === 10) {
          lines++;
        } else if (isSpace(ch)) {
        } else {
          break;
        }
      }
      res = state.md.helpers.parseLinkDestination(str, pos, max);
      if (!res.ok) {
        return false;
      }
      href = state.md.normalizeLink(res.str);
      if (!state.md.validateLink(href)) {
        return false;
      }
      pos = res.pos;
      lines += res.lines;
      destEndPos = pos;
      destEndLineNo = lines;
      start = pos;
      for (; pos < max; pos++) {
        ch = str.charCodeAt(pos);
        if (ch === 10) {
          lines++;
        } else if (isSpace(ch)) {
        } else {
          break;
        }
      }
      res = state.md.helpers.parseLinkTitle(str, pos, max);
      if (pos < max && start !== pos && res.ok) {
        title = res.str;
        pos = res.pos;
        lines += res.lines;
      } else {
        title = "";
        pos = destEndPos;
        lines = destEndLineNo;
      }
      while (pos < max) {
        ch = str.charCodeAt(pos);
        if (!isSpace(ch)) {
          break;
        }
        pos++;
      }
      if (pos < max && str.charCodeAt(pos) !== 10) {
        if (title) {
          title = "";
          pos = destEndPos;
          lines = destEndLineNo;
          while (pos < max) {
            ch = str.charCodeAt(pos);
            if (!isSpace(ch)) {
              break;
            }
            pos++;
          }
        }
      }
      if (pos < max && str.charCodeAt(pos) !== 10) {
        return false;
      }
      label = normalizeReference(str.slice(1, labelEnd));
      if (!label) {
        return false;
      }
      if (silent) {
        return true;
      }
      if (typeof state.env.references === "undefined") {
        state.env.references = {};
      }
      if (typeof state.env.references[label] === "undefined") {
        state.env.references[label] = { title, href };
      }
      state.parentType = oldParentType;
      state.line = startLine + lines + 1;
      return true;
    };
  }
});

// node_modules/markdown-it/lib/common/html_blocks.js
var require_html_blocks = __commonJS({
  "node_modules/markdown-it/lib/common/html_blocks.js"(exports, module) {
    "use strict";
    module.exports = [
      "address",
      "article",
      "aside",
      "base",
      "basefont",
      "blockquote",
      "body",
      "caption",
      "center",
      "col",
      "colgroup",
      "dd",
      "details",
      "dialog",
      "dir",
      "div",
      "dl",
      "dt",
      "fieldset",
      "figcaption",
      "figure",
      "footer",
      "form",
      "frame",
      "frameset",
      "h1",
      "h2",
      "h3",
      "h4",
      "h5",
      "h6",
      "head",
      "header",
      "hr",
      "html",
      "iframe",
      "legend",
      "li",
      "link",
      "main",
      "menu",
      "menuitem",
      "nav",
      "noframes",
      "ol",
      "optgroup",
      "option",
      "p",
      "param",
      "section",
      "source",
      "summary",
      "table",
      "tbody",
      "td",
      "tfoot",
      "th",
      "thead",
      "title",
      "tr",
      "track",
      "ul"
    ];
  }
});

// node_modules/markdown-it/lib/common/html_re.js
var require_html_re = __commonJS({
  "node_modules/markdown-it/lib/common/html_re.js"(exports, module) {
    "use strict";
    var attr_name = "[a-zA-Z_:][a-zA-Z0-9:._-]*";
    var unquoted = "[^\"'=<>`\\x00-\\x20]+";
    var single_quoted = "'[^']*'";
    var double_quoted = '"[^"]*"';
    var attr_value = "(?:" + unquoted + "|" + single_quoted + "|" + double_quoted + ")";
    var attribute = "(?:\\s+" + attr_name + "(?:\\s*=\\s*" + attr_value + ")?)";
    var open_tag = "<[A-Za-z][A-Za-z0-9\\-]*" + attribute + "*\\s*\\/?>";
    var close_tag = "<\\/[A-Za-z][A-Za-z0-9\\-]*\\s*>";
    var comment = "<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->";
    var processing = "<[?][\\s\\S]*?[?]>";
    var declaration = "<![A-Z]+\\s+[^>]*>";
    var cdata = "<!\\[CDATA\\[[\\s\\S]*?\\]\\]>";
    var HTML_TAG_RE = new RegExp("^(?:" + open_tag + "|" + close_tag + "|" + comment + "|" + processing + "|" + declaration + "|" + cdata + ")");
    var HTML_OPEN_CLOSE_TAG_RE = new RegExp("^(?:" + open_tag + "|" + close_tag + ")");
    module.exports.HTML_TAG_RE = HTML_TAG_RE;
    module.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;
  }
});

// node_modules/markdown-it/lib/rules_block/html_block.js
var require_html_block = __commonJS({
  "node_modules/markdown-it/lib/rules_block/html_block.js"(exports, module) {
    "use strict";
    var block_names = require_html_blocks();
    var HTML_OPEN_CLOSE_TAG_RE = require_html_re().HTML_OPEN_CLOSE_TAG_RE;
    var HTML_SEQUENCES = [
      [/^<(script|pre|style|textarea)(?=(\s|>|$))/i, /<\/(script|pre|style|textarea)>/i, true],
      [/^<!--/, /-->/, true],
      [/^<\?/, /\?>/, true],
      [/^<![A-Z]/, />/, true],
      [/^<!\[CDATA\[/, /\]\]>/, true],
      [new RegExp("^</?(" + block_names.join("|") + ")(?=(\\s|/?>|$))", "i"), /^$/, true],
      [new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + "\\s*$"), /^$/, false]
    ];
    module.exports = function html_block(state, startLine, endLine, silent) {
      var i9, nextLine, token, lineText, pos = state.bMarks[startLine] + state.tShift[startLine], max = state.eMarks[startLine];
      if (state.sCount[startLine] - state.blkIndent >= 4) {
        return false;
      }
      if (!state.md.options.html) {
        return false;
      }
      if (state.src.charCodeAt(pos) !== 60) {
        return false;
      }
      lineText = state.src.slice(pos, max);
      for (i9 = 0; i9 < HTML_SEQUENCES.length; i9++) {
        if (HTML_SEQUENCES[i9][0].test(lineText)) {
          break;
        }
      }
      if (i9 === HTML_SEQUENCES.length) {
        return false;
      }
      if (silent) {
        return HTML_SEQUENCES[i9][2];
      }
      nextLine = startLine + 1;
      if (!HTML_SEQUENCES[i9][1].test(lineText)) {
        for (; nextLine < endLine; nextLine++) {
          if (state.sCount[nextLine] < state.blkIndent) {
            break;
          }
          pos = state.bMarks[nextLine] + state.tShift[nextLine];
          max = state.eMarks[nextLine];
          lineText = state.src.slice(pos, max);
          if (HTML_SEQUENCES[i9][1].test(lineText)) {
            if (lineText.length !== 0) {
              nextLine++;
            }
            break;
          }
        }
      }
      state.line = nextLine;
      token = state.push("html_block", "", 0);
      token.map = [startLine, nextLine];
      token.content = state.getLines(startLine, nextLine, state.blkIndent, true);
      return true;
    };
  }
});

// node_modules/markdown-it/lib/rules_block/heading.js
var require_heading = __commonJS({
  "node_modules/markdown-it/lib/rules_block/heading.js"(exports, module) {
    "use strict";
    var isSpace = require_utils().isSpace;
    module.exports = function heading(state, startLine, endLine, silent) {
      var ch, level, tmp, token, pos = state.bMarks[startLine] + state.tShift[startLine], max = state.eMarks[startLine];
      if (state.sCount[startLine] - state.blkIndent >= 4) {
        return false;
      }
      ch = state.src.charCodeAt(pos);
      if (ch !== 35 || pos >= max) {
        return false;
      }
      level = 1;
      ch = state.src.charCodeAt(++pos);
      while (ch === 35 && pos < max && level <= 6) {
        level++;
        ch = state.src.charCodeAt(++pos);
      }
      if (level > 6 || pos < max && !isSpace(ch)) {
        return false;
      }
      if (silent) {
        return true;
      }
      max = state.skipSpacesBack(max, pos);
      tmp = state.skipCharsBack(max, 35, pos);
      if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {
        max = tmp;
      }
      state.line = startLine + 1;
      token = state.push("heading_open", "h" + String(level), 1);
      token.markup = "########".slice(0, level);
      token.map = [startLine, state.line];
      token = state.push("inline", "", 0);
      token.content = state.src.slice(pos, max).trim();
      token.map = [startLine, state.line];
      token.children = [];
      token = state.push("heading_close", "h" + String(level), -1);
      token.markup = "########".slice(0, level);
      return true;
    };
  }
});

// node_modules/markdown-it/lib/rules_block/lheading.js
var require_lheading = __commonJS({
  "node_modules/markdown-it/lib/rules_block/lheading.js"(exports, module) {
    "use strict";
    module.exports = function lheading(state, startLine, endLine) {
      var content, terminate, i9, l12, token, pos, max, level, marker, nextLine = startLine + 1, oldParentType, terminatorRules = state.md.block.ruler.getRules("paragraph");
      if (state.sCount[startLine] - state.blkIndent >= 4) {
        return false;
      }
      oldParentType = state.parentType;
      state.parentType = "paragraph";
      for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {
        if (state.sCount[nextLine] - state.blkIndent > 3) {
          continue;
        }
        if (state.sCount[nextLine] >= state.blkIndent) {
          pos = state.bMarks[nextLine] + state.tShift[nextLine];
          max = state.eMarks[nextLine];
          if (pos < max) {
            marker = state.src.charCodeAt(pos);
            if (marker === 45 || marker === 61) {
              pos = state.skipChars(pos, marker);
              pos = state.skipSpaces(pos);
              if (pos >= max) {
                level = marker === 61 ? 1 : 2;
                break;
              }
            }
          }
        }
        if (state.sCount[nextLine] < 0) {
          continue;
        }
        terminate = false;
        for (i9 = 0, l12 = terminatorRules.length; i9 < l12; i9++) {
          if (terminatorRules[i9](state, nextLine, endLine, true)) {
            terminate = true;
            break;
          }
        }
        if (terminate) {
          break;
        }
      }
      if (!level) {
        return false;
      }
      content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();
      state.line = nextLine + 1;
      token = state.push("heading_open", "h" + String(level), 1);
      token.markup = String.fromCharCode(marker);
      token.map = [startLine, state.line];
      token = state.push("inline", "", 0);
      token.content = content;
      token.map = [startLine, state.line - 1];
      token.children = [];
      token = state.push("heading_close", "h" + String(level), -1);
      token.markup = String.fromCharCode(marker);
      state.parentType = oldParentType;
      return true;
    };
  }
});

// node_modules/markdown-it/lib/rules_block/paragraph.js
var require_paragraph = __commonJS({
  "node_modules/markdown-it/lib/rules_block/paragraph.js"(exports, module) {
    "use strict";
    module.exports = function paragraph(state, startLine) {
      var content, terminate, i9, l12, token, oldParentType, nextLine = startLine + 1, terminatorRules = state.md.block.ruler.getRules("paragraph"), endLine = state.lineMax;
      oldParentType = state.parentType;
      state.parentType = "paragraph";
      for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {
        if (state.sCount[nextLine] - state.blkIndent > 3) {
          continue;
        }
        if (state.sCount[nextLine] < 0) {
          continue;
        }
        terminate = false;
        for (i9 = 0, l12 = terminatorRules.length; i9 < l12; i9++) {
          if (terminatorRules[i9](state, nextLine, endLine, true)) {
            terminate = true;
            break;
          }
        }
        if (terminate) {
          break;
        }
      }
      content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();
      state.line = nextLine;
      token = state.push("paragraph_open", "p", 1);
      token.map = [startLine, state.line];
      token = state.push("inline", "", 0);
      token.content = content;
      token.map = [startLine, state.line];
      token.children = [];
      token = state.push("paragraph_close", "p", -1);
      state.parentType = oldParentType;
      return true;
    };
  }
});

// node_modules/markdown-it/lib/rules_block/state_block.js
var require_state_block = __commonJS({
  "node_modules/markdown-it/lib/rules_block/state_block.js"(exports, module) {
    "use strict";
    var Token = require_token();
    var isSpace = require_utils().isSpace;
    function StateBlock(src, md, env2, tokens) {
      var ch, s18, start, pos, len, indent, offset, indent_found;
      this.src = src;
      this.md = md;
      this.env = env2;
      this.tokens = tokens;
      this.bMarks = [];
      this.eMarks = [];
      this.tShift = [];
      this.sCount = [];
      this.bsCount = [];
      this.blkIndent = 0;
      this.line = 0;
      this.lineMax = 0;
      this.tight = false;
      this.ddIndent = -1;
      this.listIndent = -1;
      this.parentType = "root";
      this.level = 0;
      this.result = "";
      s18 = this.src;
      indent_found = false;
      for (start = pos = indent = offset = 0, len = s18.length; pos < len; pos++) {
        ch = s18.charCodeAt(pos);
        if (!indent_found) {
          if (isSpace(ch)) {
            indent++;
            if (ch === 9) {
              offset += 4 - offset % 4;
            } else {
              offset++;
            }
            continue;
          } else {
            indent_found = true;
          }
        }
        if (ch === 10 || pos === len - 1) {
          if (ch !== 10) {
            pos++;
          }
          this.bMarks.push(start);
          this.eMarks.push(pos);
          this.tShift.push(indent);
          this.sCount.push(offset);
          this.bsCount.push(0);
          indent_found = false;
          indent = 0;
          offset = 0;
          start = pos + 1;
        }
      }
      this.bMarks.push(s18.length);
      this.eMarks.push(s18.length);
      this.tShift.push(0);
      this.sCount.push(0);
      this.bsCount.push(0);
      this.lineMax = this.bMarks.length - 1;
    }
    StateBlock.prototype.push = function(type, tag, nesting) {
      var token = new Token(type, tag, nesting);
      token.block = true;
      if (nesting < 0)
        this.level--;
      token.level = this.level;
      if (nesting > 0)
        this.level++;
      this.tokens.push(token);
      return token;
    };
    StateBlock.prototype.isEmpty = function isEmpty(line) {
      return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];
    };
    StateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {
      for (var max = this.lineMax; from < max; from++) {
        if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {
          break;
        }
      }
      return from;
    };
    StateBlock.prototype.skipSpaces = function skipSpaces(pos) {
      var ch;
      for (var max = this.src.length; pos < max; pos++) {
        ch = this.src.charCodeAt(pos);
        if (!isSpace(ch)) {
          break;
        }
      }
      return pos;
    };
    StateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {
      if (pos <= min) {
        return pos;
      }
      while (pos > min) {
        if (!isSpace(this.src.charCodeAt(--pos))) {
          return pos + 1;
        }
      }
      return pos;
    };
    StateBlock.prototype.skipChars = function skipChars(pos, code) {
      for (var max = this.src.length; pos < max; pos++) {
        if (this.src.charCodeAt(pos) !== code) {
          break;
        }
      }
      return pos;
    };
    StateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {
      if (pos <= min) {
        return pos;
      }
      while (pos > min) {
        if (code !== this.src.charCodeAt(--pos)) {
          return pos + 1;
        }
      }
      return pos;
    };
    StateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {
      var i9, lineIndent, ch, first, last, queue, lineStart, line = begin;
      if (begin >= end) {
        return "";
      }
      queue = new Array(end - begin);
      for (i9 = 0; line < end; line++, i9++) {
        lineIndent = 0;
        lineStart = first = this.bMarks[line];
        if (line + 1 < end || keepLastLF) {
          last = this.eMarks[line] + 1;
        } else {
          last = this.eMarks[line];
        }
        while (first < last && lineIndent < indent) {
          ch = this.src.charCodeAt(first);
          if (isSpace(ch)) {
            if (ch === 9) {
              lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;
            } else {
              lineIndent++;
            }
          } else if (first - lineStart < this.tShift[line]) {
            lineIndent++;
          } else {
            break;
          }
          first++;
        }
        if (lineIndent > indent) {
          queue[i9] = new Array(lineIndent - indent + 1).join(" ") + this.src.slice(first, last);
        } else {
          queue[i9] = this.src.slice(first, last);
        }
      }
      return queue.join("");
    };
    StateBlock.prototype.Token = Token;
    module.exports = StateBlock;
  }
});

// node_modules/markdown-it/lib/parser_block.js
var require_parser_block = __commonJS({
  "node_modules/markdown-it/lib/parser_block.js"(exports, module) {
    "use strict";
    var Ruler = require_ruler();
    var _rules = [
      // First 2 params - rule name & source. Secondary array - list of rules,
      // which can be terminated by this one.
      ["table", require_table(), ["paragraph", "reference"]],
      ["code", require_code()],
      ["fence", require_fence(), ["paragraph", "reference", "blockquote", "list"]],
      ["blockquote", require_blockquote(), ["paragraph", "reference", "blockquote", "list"]],
      ["hr", require_hr(), ["paragraph", "reference", "blockquote", "list"]],
      ["list", require_list(), ["paragraph", "reference", "blockquote"]],
      ["reference", require_reference()],
      ["html_block", require_html_block(), ["paragraph", "reference", "blockquote"]],
      ["heading", require_heading(), ["paragraph", "reference", "blockquote"]],
      ["lheading", require_lheading()],
      ["paragraph", require_paragraph()]
    ];
    function ParserBlock() {
      this.ruler = new Ruler();
      for (var i9 = 0; i9 < _rules.length; i9++) {
        this.ruler.push(_rules[i9][0], _rules[i9][1], { alt: (_rules[i9][2] || []).slice() });
      }
    }
    ParserBlock.prototype.tokenize = function(state, startLine, endLine) {
      var ok, i9, rules = this.ruler.getRules(""), len = rules.length, line = startLine, hasEmptyLines = false, maxNesting = state.md.options.maxNesting;
      while (line < endLine) {
        state.line = line = state.skipEmptyLines(line);
        if (line >= endLine) {
          break;
        }
        if (state.sCount[line] < state.blkIndent) {
          break;
        }
        if (state.level >= maxNesting) {
          state.line = endLine;
          break;
        }
        for (i9 = 0; i9 < len; i9++) {
          ok = rules[i9](state, line, endLine, false);
          if (ok) {
            break;
          }
        }
        state.tight = !hasEmptyLines;
        if (state.isEmpty(state.line - 1)) {
          hasEmptyLines = true;
        }
        line = state.line;
        if (line < endLine && state.isEmpty(line)) {
          hasEmptyLines = true;
          line++;
          state.line = line;
        }
      }
    };
    ParserBlock.prototype.parse = function(src, md, env2, outTokens) {
      var state;
      if (!src) {
        return;
      }
      state = new this.State(src, md, env2, outTokens);
      this.tokenize(state, state.line, state.lineMax);
    };
    ParserBlock.prototype.State = require_state_block();
    module.exports = ParserBlock;
  }
});

// node_modules/markdown-it/lib/rules_inline/text.js
var require_text = __commonJS({
  "node_modules/markdown-it/lib/rules_inline/text.js"(exports, module) {
    "use strict";
    function isTerminatorChar(ch) {
      switch (ch) {
        case 10:
        case 33:
        case 35:
        case 36:
        case 37:
        case 38:
        case 42:
        case 43:
        case 45:
        case 58:
        case 60:
        case 61:
        case 62:
        case 64:
        case 91:
        case 92:
        case 93:
        case 94:
        case 95:
        case 96:
        case 123:
        case 125:
        case 126:
          return true;
        default:
          return false;
      }
    }
    module.exports = function text(state, silent) {
      var pos = state.pos;
      while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {
        pos++;
      }
      if (pos === state.pos) {
        return false;
      }
      if (!silent) {
        state.pending += state.src.slice(state.pos, pos);
      }
      state.pos = pos;
      return true;
    };
  }
});

// node_modules/markdown-it/lib/rules_inline/newline.js
var require_newline = __commonJS({
  "node_modules/markdown-it/lib/rules_inline/newline.js"(exports, module) {
    "use strict";
    var isSpace = require_utils().isSpace;
    module.exports = function newline(state, silent) {
      var pmax, max, ws, pos = state.pos;
      if (state.src.charCodeAt(pos) !== 10) {
        return false;
      }
      pmax = state.pending.length - 1;
      max = state.posMax;
      if (!silent) {
        if (pmax >= 0 && state.pending.charCodeAt(pmax) === 32) {
          if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 32) {
            ws = pmax - 1;
            while (ws >= 1 && state.pending.charCodeAt(ws - 1) === 32)
              ws--;
            state.pending = state.pending.slice(0, ws);
            state.push("hardbreak", "br", 0);
          } else {
            state.pending = state.pending.slice(0, -1);
            state.push("softbreak", "br", 0);
          }
        } else {
          state.push("softbreak", "br", 0);
        }
      }
      pos++;
      while (pos < max && isSpace(state.src.charCodeAt(pos))) {
        pos++;
      }
      state.pos = pos;
      return true;
    };
  }
});

// node_modules/markdown-it/lib/rules_inline/escape.js
var require_escape = __commonJS({
  "node_modules/markdown-it/lib/rules_inline/escape.js"(exports, module) {
    "use strict";
    var isSpace = require_utils().isSpace;
    var ESCAPED = [];
    for (i9 = 0; i9 < 256; i9++) {
      ESCAPED.push(0);
    }
    var i9;
    "\\!\"#$%&'()*+,./:;<=>?@[]^_`{|}~-".split("").forEach(function(ch) {
      ESCAPED[ch.charCodeAt(0)] = 1;
    });
    module.exports = function escape(state, silent) {
      var ch, pos = state.pos, max = state.posMax;
      if (state.src.charCodeAt(pos) !== 92) {
        return false;
      }
      pos++;
      if (pos < max) {
        ch = state.src.charCodeAt(pos);
        if (ch < 256 && ESCAPED[ch] !== 0) {
          if (!silent) {
            state.pending += state.src[pos];
          }
          state.pos += 2;
          return true;
        }
        if (ch === 10) {
          if (!silent) {
            state.push("hardbreak", "br", 0);
          }
          pos++;
          while (pos < max) {
            ch = state.src.charCodeAt(pos);
            if (!isSpace(ch)) {
              break;
            }
            pos++;
          }
          state.pos = pos;
          return true;
        }
      }
      if (!silent) {
        state.pending += "\\";
      }
      state.pos++;
      return true;
    };
  }
});

// node_modules/markdown-it/lib/rules_inline/backticks.js
var require_backticks = __commonJS({
  "node_modules/markdown-it/lib/rules_inline/backticks.js"(exports, module) {
    "use strict";
    module.exports = function backtick(state, silent) {
      var start, max, marker, token, matchStart, matchEnd, openerLength, closerLength, pos = state.pos, ch = state.src.charCodeAt(pos);
      if (ch !== 96) {
        return false;
      }
      start = pos;
      pos++;
      max = state.posMax;
      while (pos < max && state.src.charCodeAt(pos) === 96) {
        pos++;
      }
      marker = state.src.slice(start, pos);
      openerLength = marker.length;
      if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {
        if (!silent)
          state.pending += marker;
        state.pos += openerLength;
        return true;
      }
      matchStart = matchEnd = pos;
      while ((matchStart = state.src.indexOf("`", matchEnd)) !== -1) {
        matchEnd = matchStart + 1;
        while (matchEnd < max && state.src.charCodeAt(matchEnd) === 96) {
          matchEnd++;
        }
        closerLength = matchEnd - matchStart;
        if (closerLength === openerLength) {
          if (!silent) {
            token = state.push("code_inline", "code", 0);
            token.markup = marker;
            token.content = state.src.slice(pos, matchStart).replace(/\n/g, " ").replace(/^ (.+) $/, "$1");
          }
          state.pos = matchEnd;
          return true;
        }
        state.backticks[closerLength] = matchStart;
      }
      state.backticksScanned = true;
      if (!silent)
        state.pending += marker;
      state.pos += openerLength;
      return true;
    };
  }
});

// node_modules/markdown-it/lib/rules_inline/strikethrough.js
var require_strikethrough = __commonJS({
  "node_modules/markdown-it/lib/rules_inline/strikethrough.js"(exports, module) {
    "use strict";
    module.exports.tokenize = function strikethrough(state, silent) {
      var i9, scanned, token, len, ch, start = state.pos, marker = state.src.charCodeAt(start);
      if (silent) {
        return false;
      }
      if (marker !== 126) {
        return false;
      }
      scanned = state.scanDelims(state.pos, true);
      len = scanned.length;
      ch = String.fromCharCode(marker);
      if (len < 2) {
        return false;
      }
      if (len % 2) {
        token = state.push("text", "", 0);
        token.content = ch;
        len--;
      }
      for (i9 = 0; i9 < len; i9 += 2) {
        token = state.push("text", "", 0);
        token.content = ch + ch;
        state.delimiters.push({
          marker,
          length: 0,
          // disable "rule of 3" length checks meant for emphasis
          token: state.tokens.length - 1,
          end: -1,
          open: scanned.can_open,
          close: scanned.can_close
        });
      }
      state.pos += scanned.length;
      return true;
    };
    function postProcess(state, delimiters) {
      var i9, j6, startDelim, endDelim, token, loneMarkers = [], max = delimiters.length;
      for (i9 = 0; i9 < max; i9++) {
        startDelim = delimiters[i9];
        if (startDelim.marker !== 126) {
          continue;
        }
        if (startDelim.end === -1) {
          continue;
        }
        endDelim = delimiters[startDelim.end];
        token = state.tokens[startDelim.token];
        token.type = "s_open";
        token.tag = "s";
        token.nesting = 1;
        token.markup = "~~";
        token.content = "";
        token = state.tokens[endDelim.token];
        token.type = "s_close";
        token.tag = "s";
        token.nesting = -1;
        token.markup = "~~";
        token.content = "";
        if (state.tokens[endDelim.token - 1].type === "text" && state.tokens[endDelim.token - 1].content === "~") {
          loneMarkers.push(endDelim.token - 1);
        }
      }
      while (loneMarkers.length) {
        i9 = loneMarkers.pop();
        j6 = i9 + 1;
        while (j6 < state.tokens.length && state.tokens[j6].type === "s_close") {
          j6++;
        }
        j6--;
        if (i9 !== j6) {
          token = state.tokens[j6];
          state.tokens[j6] = state.tokens[i9];
          state.tokens[i9] = token;
        }
      }
    }
    module.exports.postProcess = function strikethrough(state) {
      var curr, tokens_meta = state.tokens_meta, max = state.tokens_meta.length;
      postProcess(state, state.delimiters);
      for (curr = 0; curr < max; curr++) {
        if (tokens_meta[curr] && tokens_meta[curr].delimiters) {
          postProcess(state, tokens_meta[curr].delimiters);
        }
      }
    };
  }
});

// node_modules/markdown-it/lib/rules_inline/emphasis.js
var require_emphasis = __commonJS({
  "node_modules/markdown-it/lib/rules_inline/emphasis.js"(exports, module) {
    "use strict";
    module.exports.tokenize = function emphasis(state, silent) {
      var i9, scanned, token, start = state.pos, marker = state.src.charCodeAt(start);
      if (silent) {
        return false;
      }
      if (marker !== 95 && marker !== 42) {
        return false;
      }
      scanned = state.scanDelims(state.pos, marker === 42);
      for (i9 = 0; i9 < scanned.length; i9++) {
        token = state.push("text", "", 0);
        token.content = String.fromCharCode(marker);
        state.delimiters.push({
          // Char code of the starting marker (number).
          //
          marker,
          // Total length of these series of delimiters.
          //
          length: scanned.length,
          // A position of the token this delimiter corresponds to.
          //
          token: state.tokens.length - 1,
          // If this delimiter is matched as a valid opener, `end` will be
          // equal to its position, otherwise it's `-1`.
          //
          end: -1,
          // Boolean flags that determine if this delimiter could open or close
          // an emphasis.
          //
          open: scanned.can_open,
          close: scanned.can_close
        });
      }
      state.pos += scanned.length;
      return true;
    };
    function postProcess(state, delimiters) {
      var i9, startDelim, endDelim, token, ch, isStrong, max = delimiters.length;
      for (i9 = max - 1; i9 >= 0; i9--) {
        startDelim = delimiters[i9];
        if (startDelim.marker !== 95 && startDelim.marker !== 42) {
          continue;
        }
        if (startDelim.end === -1) {
          continue;
        }
        endDelim = delimiters[startDelim.end];
        isStrong = i9 > 0 && delimiters[i9 - 1].end === startDelim.end + 1 && // check that first two markers match and adjacent
        delimiters[i9 - 1].marker === startDelim.marker && delimiters[i9 - 1].token === startDelim.token - 1 && // check that last two markers are adjacent (we can safely assume they match)
        delimiters[startDelim.end + 1].token === endDelim.token + 1;
        ch = String.fromCharCode(startDelim.marker);
        token = state.tokens[startDelim.token];
        token.type = isStrong ? "strong_open" : "em_open";
        token.tag = isStrong ? "strong" : "em";
        token.nesting = 1;
        token.markup = isStrong ? ch + ch : ch;
        token.content = "";
        token = state.tokens[endDelim.token];
        token.type = isStrong ? "strong_close" : "em_close";
        token.tag = isStrong ? "strong" : "em";
        token.nesting = -1;
        token.markup = isStrong ? ch + ch : ch;
        token.content = "";
        if (isStrong) {
          state.tokens[delimiters[i9 - 1].token].content = "";
          state.tokens[delimiters[startDelim.end + 1].token].content = "";
          i9--;
        }
      }
    }
    module.exports.postProcess = function emphasis(state) {
      var curr, tokens_meta = state.tokens_meta, max = state.tokens_meta.length;
      postProcess(state, state.delimiters);
      for (curr = 0; curr < max; curr++) {
        if (tokens_meta[curr] && tokens_meta[curr].delimiters) {
          postProcess(state, tokens_meta[curr].delimiters);
        }
      }
    };
  }
});

// node_modules/markdown-it/lib/rules_inline/link.js
var require_link = __commonJS({
  "node_modules/markdown-it/lib/rules_inline/link.js"(exports, module) {
    "use strict";
    var normalizeReference = require_utils().normalizeReference;
    var isSpace = require_utils().isSpace;
    module.exports = function link(state, silent) {
      var attrs, code, label, labelEnd, labelStart, pos, res, ref, token, href = "", title = "", oldPos = state.pos, max = state.posMax, start = state.pos, parseReference = true;
      if (state.src.charCodeAt(state.pos) !== 91) {
        return false;
      }
      labelStart = state.pos + 1;
      labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true);
      if (labelEnd < 0) {
        return false;
      }
      pos = labelEnd + 1;
      if (pos < max && state.src.charCodeAt(pos) === 40) {
        parseReference = false;
        pos++;
        for (; pos < max; pos++) {
          code = state.src.charCodeAt(pos);
          if (!isSpace(code) && code !== 10) {
            break;
          }
        }
        if (pos >= max) {
          return false;
        }
        start = pos;
        res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);
        if (res.ok) {
          href = state.md.normalizeLink(res.str);
          if (state.md.validateLink(href)) {
            pos = res.pos;
          } else {
            href = "";
          }
          start = pos;
          for (; pos < max; pos++) {
            code = state.src.charCodeAt(pos);
            if (!isSpace(code) && code !== 10) {
              break;
            }
          }
          res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);
          if (pos < max && start !== pos && res.ok) {
            title = res.str;
            pos = res.pos;
            for (; pos < max; pos++) {
              code = state.src.charCodeAt(pos);
              if (!isSpace(code) && code !== 10) {
                break;
              }
            }
          }
        }
        if (pos >= max || state.src.charCodeAt(pos) !== 41) {
          parseReference = true;
        }
        pos++;
      }
      if (parseReference) {
        if (typeof state.env.references === "undefined") {
          return false;
        }
        if (pos < max && state.src.charCodeAt(pos) === 91) {
          start = pos + 1;
          pos = state.md.helpers.parseLinkLabel(state, pos);
          if (pos >= 0) {
            label = state.src.slice(start, pos++);
          } else {
            pos = labelEnd + 1;
          }
        } else {
          pos = labelEnd + 1;
        }
        if (!label) {
          label = state.src.slice(labelStart, labelEnd);
        }
        ref = state.env.references[normalizeReference(label)];
        if (!ref) {
          state.pos = oldPos;
          return false;
        }
        href = ref.href;
        title = ref.title;
      }
      if (!silent) {
        state.pos = labelStart;
        state.posMax = labelEnd;
        token = state.push("link_open", "a", 1);
        token.attrs = attrs = [["href", href]];
        if (title) {
          attrs.push(["title", title]);
        }
        state.md.inline.tokenize(state);
        token = state.push("link_close", "a", -1);
      }
      state.pos = pos;
      state.posMax = max;
      return true;
    };
  }
});

// node_modules/markdown-it/lib/rules_inline/image.js
var require_image = __commonJS({
  "node_modules/markdown-it/lib/rules_inline/image.js"(exports, module) {
    "use strict";
    var normalizeReference = require_utils().normalizeReference;
    var isSpace = require_utils().isSpace;
    module.exports = function image(state, silent) {
      var attrs, code, content, label, labelEnd, labelStart, pos, ref, res, title, token, tokens, start, href = "", oldPos = state.pos, max = state.posMax;
      if (state.src.charCodeAt(state.pos) !== 33) {
        return false;
      }
      if (state.src.charCodeAt(state.pos + 1) !== 91) {
        return false;
      }
      labelStart = state.pos + 2;
      labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);
      if (labelEnd < 0) {
        return false;
      }
      pos = labelEnd + 1;
      if (pos < max && state.src.charCodeAt(pos) === 40) {
        pos++;
        for (; pos < max; pos++) {
          code = state.src.charCodeAt(pos);
          if (!isSpace(code) && code !== 10) {
            break;
          }
        }
        if (pos >= max) {
          return false;
        }
        start = pos;
        res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);
        if (res.ok) {
          href = state.md.normalizeLink(res.str);
          if (state.md.validateLink(href)) {
            pos = res.pos;
          } else {
            href = "";
          }
        }
        start = pos;
        for (; pos < max; pos++) {
          code = state.src.charCodeAt(pos);
          if (!isSpace(code) && code !== 10) {
            break;
          }
        }
        res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);
        if (pos < max && start !== pos && res.ok) {
          title = res.str;
          pos = res.pos;
          for (; pos < max; pos++) {
            code = state.src.charCodeAt(pos);
            if (!isSpace(code) && code !== 10) {
              break;
            }
          }
        } else {
          title = "";
        }
        if (pos >= max || state.src.charCodeAt(pos) !== 41) {
          state.pos = oldPos;
          return false;
        }
        pos++;
      } else {
        if (typeof state.env.references === "undefined") {
          return false;
        }
        if (pos < max && state.src.charCodeAt(pos) === 91) {
          start = pos + 1;
          pos = state.md.helpers.parseLinkLabel(state, pos);
          if (pos >= 0) {
            label = state.src.slice(start, pos++);
          } else {
            pos = labelEnd + 1;
          }
        } else {
          pos = labelEnd + 1;
        }
        if (!label) {
          label = state.src.slice(labelStart, labelEnd);
        }
        ref = state.env.references[normalizeReference(label)];
        if (!ref) {
          state.pos = oldPos;
          return false;
        }
        href = ref.href;
        title = ref.title;
      }
      if (!silent) {
        content = state.src.slice(labelStart, labelEnd);
        state.md.inline.parse(
          content,
          state.md,
          state.env,
          tokens = []
        );
        token = state.push("image", "img", 0);
        token.attrs = attrs = [["src", href], ["alt", ""]];
        token.children = tokens;
        token.content = content;
        if (title) {
          attrs.push(["title", title]);
        }
      }
      state.pos = pos;
      state.posMax = max;
      return true;
    };
  }
});

// node_modules/markdown-it/lib/rules_inline/autolink.js
var require_autolink = __commonJS({
  "node_modules/markdown-it/lib/rules_inline/autolink.js"(exports, module) {
    "use strict";
    var EMAIL_RE = /^([a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/;
    var AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.\-]{1,31}):([^<>\x00-\x20]*)$/;
    module.exports = function autolink(state, silent) {
      var url, fullUrl, token, ch, start, max, pos = state.pos;
      if (state.src.charCodeAt(pos) !== 60) {
        return false;
      }
      start = state.pos;
      max = state.posMax;
      for (; ; ) {
        if (++pos >= max)
          return false;
        ch = state.src.charCodeAt(pos);
        if (ch === 60)
          return false;
        if (ch === 62)
          break;
      }
      url = state.src.slice(start + 1, pos);
      if (AUTOLINK_RE.test(url)) {
        fullUrl = state.md.normalizeLink(url);
        if (!state.md.validateLink(fullUrl)) {
          return false;
        }
        if (!silent) {
          token = state.push("link_open", "a", 1);
          token.attrs = [["href", fullUrl]];
          token.markup = "autolink";
          token.info = "auto";
          token = state.push("text", "", 0);
          token.content = state.md.normalizeLinkText(url);
          token = state.push("link_close", "a", -1);
          token.markup = "autolink";
          token.info = "auto";
        }
        state.pos += url.length + 2;
        return true;
      }
      if (EMAIL_RE.test(url)) {
        fullUrl = state.md.normalizeLink("mailto:" + url);
        if (!state.md.validateLink(fullUrl)) {
          return false;
        }
        if (!silent) {
          token = state.push("link_open", "a", 1);
          token.attrs = [["href", fullUrl]];
          token.markup = "autolink";
          token.info = "auto";
          token = state.push("text", "", 0);
          token.content = state.md.normalizeLinkText(url);
          token = state.push("link_close", "a", -1);
          token.markup = "autolink";
          token.info = "auto";
        }
        state.pos += url.length + 2;
        return true;
      }
      return false;
    };
  }
});

// node_modules/markdown-it/lib/rules_inline/html_inline.js
var require_html_inline = __commonJS({
  "node_modules/markdown-it/lib/rules_inline/html_inline.js"(exports, module) {
    "use strict";
    var HTML_TAG_RE = require_html_re().HTML_TAG_RE;
    function isLetter(ch) {
      var lc = ch | 32;
      return lc >= 97 && lc <= 122;
    }
    module.exports = function html_inline(state, silent) {
      var ch, match, max, token, pos = state.pos;
      if (!state.md.options.html) {
        return false;
      }
      max = state.posMax;
      if (state.src.charCodeAt(pos) !== 60 || pos + 2 >= max) {
        return false;
      }
      ch = state.src.charCodeAt(pos + 1);
      if (ch !== 33 && ch !== 63 && ch !== 47 && !isLetter(ch)) {
        return false;
      }
      match = state.src.slice(pos).match(HTML_TAG_RE);
      if (!match) {
        return false;
      }
      if (!silent) {
        token = state.push("html_inline", "", 0);
        token.content = state.src.slice(pos, pos + match[0].length);
      }
      state.pos += match[0].length;
      return true;
    };
  }
});

// node_modules/markdown-it/lib/rules_inline/entity.js
var require_entity = __commonJS({
  "node_modules/markdown-it/lib/rules_inline/entity.js"(exports, module) {
    "use strict";
    var entities = require_entities2();
    var has = require_utils().has;
    var isValidEntityCode = require_utils().isValidEntityCode;
    var fromCodePoint = require_utils().fromCodePoint;
    var DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;
    var NAMED_RE = /^&([a-z][a-z0-9]{1,31});/i;
    module.exports = function entity(state, silent) {
      var ch, code, match, pos = state.pos, max = state.posMax;
      if (state.src.charCodeAt(pos) !== 38) {
        return false;
      }
      if (pos + 1 < max) {
        ch = state.src.charCodeAt(pos + 1);
        if (ch === 35) {
          match = state.src.slice(pos).match(DIGITAL_RE);
          if (match) {
            if (!silent) {
              code = match[1][0].toLowerCase() === "x" ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);
              state.pending += isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(65533);
            }
            state.pos += match[0].length;
            return true;
          }
        } else {
          match = state.src.slice(pos).match(NAMED_RE);
          if (match) {
            if (has(entities, match[1])) {
              if (!silent) {
                state.pending += entities[match[1]];
              }
              state.pos += match[0].length;
              return true;
            }
          }
        }
      }
      if (!silent) {
        state.pending += "&";
      }
      state.pos++;
      return true;
    };
  }
});

// node_modules/markdown-it/lib/rules_inline/balance_pairs.js
var require_balance_pairs = __commonJS({
  "node_modules/markdown-it/lib/rules_inline/balance_pairs.js"(exports, module) {
    "use strict";
    function processDelimiters(state, delimiters) {
      var closerIdx, openerIdx, closer, opener, minOpenerIdx, newMinOpenerIdx, isOddMatch, lastJump, openersBottom = {}, max = delimiters.length;
      if (!max)
        return;
      var headerIdx = 0;
      var lastTokenIdx = -2;
      var jumps = [];
      for (closerIdx = 0; closerIdx < max; closerIdx++) {
        closer = delimiters[closerIdx];
        jumps.push(0);
        if (delimiters[headerIdx].marker !== closer.marker || lastTokenIdx !== closer.token - 1) {
          headerIdx = closerIdx;
        }
        lastTokenIdx = closer.token;
        closer.length = closer.length || 0;
        if (!closer.close)
          continue;
        if (!openersBottom.hasOwnProperty(closer.marker)) {
          openersBottom[closer.marker] = [-1, -1, -1, -1, -1, -1];
        }
        minOpenerIdx = openersBottom[closer.marker][(closer.open ? 3 : 0) + closer.length % 3];
        openerIdx = headerIdx - jumps[headerIdx] - 1;
        newMinOpenerIdx = openerIdx;
        for (; openerIdx > minOpenerIdx; openerIdx -= jumps[openerIdx] + 1) {
          opener = delimiters[openerIdx];
          if (opener.marker !== closer.marker)
            continue;
          if (opener.open && opener.end < 0) {
            isOddMatch = false;
            if (opener.close || closer.open) {
              if ((opener.length + closer.length) % 3 === 0) {
                if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {
                  isOddMatch = true;
                }
              }
            }
            if (!isOddMatch) {
              lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ? jumps[openerIdx - 1] + 1 : 0;
              jumps[closerIdx] = closerIdx - openerIdx + lastJump;
              jumps[openerIdx] = lastJump;
              closer.open = false;
              opener.end = closerIdx;
              opener.close = false;
              newMinOpenerIdx = -1;
              lastTokenIdx = -2;
              break;
            }
          }
        }
        if (newMinOpenerIdx !== -1) {
          openersBottom[closer.marker][(closer.open ? 3 : 0) + (closer.length || 0) % 3] = newMinOpenerIdx;
        }
      }
    }
    module.exports = function link_pairs(state) {
      var curr, tokens_meta = state.tokens_meta, max = state.tokens_meta.length;
      processDelimiters(state, state.delimiters);
      for (curr = 0; curr < max; curr++) {
        if (tokens_meta[curr] && tokens_meta[curr].delimiters) {
          processDelimiters(state, tokens_meta[curr].delimiters);
        }
      }
    };
  }
});

// node_modules/markdown-it/lib/rules_inline/text_collapse.js
var require_text_collapse = __commonJS({
  "node_modules/markdown-it/lib/rules_inline/text_collapse.js"(exports, module) {
    "use strict";
    module.exports = function text_collapse(state) {
      var curr, last, level = 0, tokens = state.tokens, max = state.tokens.length;
      for (curr = last = 0; curr < max; curr++) {
        if (tokens[curr].nesting < 0)
          level--;
        tokens[curr].level = level;
        if (tokens[curr].nesting > 0)
          level++;
        if (tokens[curr].type === "text" && curr + 1 < max && tokens[curr + 1].type === "text") {
          tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;
        } else {
          if (curr !== last) {
            tokens[last] = tokens[curr];
          }
          last++;
        }
      }
      if (curr !== last) {
        tokens.length = last;
      }
    };
  }
});

// node_modules/markdown-it/lib/rules_inline/state_inline.js
var require_state_inline = __commonJS({
  "node_modules/markdown-it/lib/rules_inline/state_inline.js"(exports, module) {
    "use strict";
    var Token = require_token();
    var isWhiteSpace = require_utils().isWhiteSpace;
    var isPunctChar = require_utils().isPunctChar;
    var isMdAsciiPunct = require_utils().isMdAsciiPunct;
    function StateInline(src, md, env2, outTokens) {
      this.src = src;
      this.env = env2;
      this.md = md;
      this.tokens = outTokens;
      this.tokens_meta = Array(outTokens.length);
      this.pos = 0;
      this.posMax = this.src.length;
      this.level = 0;
      this.pending = "";
      this.pendingLevel = 0;
      this.cache = {};
      this.delimiters = [];
      this._prev_delimiters = [];
      this.backticks = {};
      this.backticksScanned = false;
    }
    StateInline.prototype.pushPending = function() {
      var token = new Token("text", "", 0);
      token.content = this.pending;
      token.level = this.pendingLevel;
      this.tokens.push(token);
      this.pending = "";
      return token;
    };
    StateInline.prototype.push = function(type, tag, nesting) {
      if (this.pending) {
        this.pushPending();
      }
      var token = new Token(type, tag, nesting);
      var token_meta = null;
      if (nesting < 0) {
        this.level--;
        this.delimiters = this._prev_delimiters.pop();
      }
      token.level = this.level;
      if (nesting > 0) {
        this.level++;
        this._prev_delimiters.push(this.delimiters);
        this.delimiters = [];
        token_meta = { delimiters: this.delimiters };
      }
      this.pendingLevel = this.level;
      this.tokens.push(token);
      this.tokens_meta.push(token_meta);
      return token;
    };
    StateInline.prototype.scanDelims = function(start, canSplitWord) {
      var pos = start, lastChar, nextChar, count, can_open, can_close, isLastWhiteSpace, isLastPunctChar, isNextWhiteSpace, isNextPunctChar, left_flanking = true, right_flanking = true, max = this.posMax, marker = this.src.charCodeAt(start);
      lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 32;
      while (pos < max && this.src.charCodeAt(pos) === marker) {
        pos++;
      }
      count = pos - start;
      nextChar = pos < max ? this.src.charCodeAt(pos) : 32;
      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));
      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));
      isLastWhiteSpace = isWhiteSpace(lastChar);
      isNextWhiteSpace = isWhiteSpace(nextChar);
      if (isNextWhiteSpace) {
        left_flanking = false;
      } else if (isNextPunctChar) {
        if (!(isLastWhiteSpace || isLastPunctChar)) {
          left_flanking = false;
        }
      }
      if (isLastWhiteSpace) {
        right_flanking = false;
      } else if (isLastPunctChar) {
        if (!(isNextWhiteSpace || isNextPunctChar)) {
          right_flanking = false;
        }
      }
      if (!canSplitWord) {
        can_open = left_flanking && (!right_flanking || isLastPunctChar);
        can_close = right_flanking && (!left_flanking || isNextPunctChar);
      } else {
        can_open = left_flanking;
        can_close = right_flanking;
      }
      return {
        can_open,
        can_close,
        length: count
      };
    };
    StateInline.prototype.Token = Token;
    module.exports = StateInline;
  }
});

// node_modules/markdown-it/lib/parser_inline.js
var require_parser_inline = __commonJS({
  "node_modules/markdown-it/lib/parser_inline.js"(exports, module) {
    "use strict";
    var Ruler = require_ruler();
    var _rules = [
      ["text", require_text()],
      ["newline", require_newline()],
      ["escape", require_escape()],
      ["backticks", require_backticks()],
      ["strikethrough", require_strikethrough().tokenize],
      ["emphasis", require_emphasis().tokenize],
      ["link", require_link()],
      ["image", require_image()],
      ["autolink", require_autolink()],
      ["html_inline", require_html_inline()],
      ["entity", require_entity()]
    ];
    var _rules2 = [
      ["balance_pairs", require_balance_pairs()],
      ["strikethrough", require_strikethrough().postProcess],
      ["emphasis", require_emphasis().postProcess],
      ["text_collapse", require_text_collapse()]
    ];
    function ParserInline() {
      var i9;
      this.ruler = new Ruler();
      for (i9 = 0; i9 < _rules.length; i9++) {
        this.ruler.push(_rules[i9][0], _rules[i9][1]);
      }
      this.ruler2 = new Ruler();
      for (i9 = 0; i9 < _rules2.length; i9++) {
        this.ruler2.push(_rules2[i9][0], _rules2[i9][1]);
      }
    }
    ParserInline.prototype.skipToken = function(state) {
      var ok, i9, pos = state.pos, rules = this.ruler.getRules(""), len = rules.length, maxNesting = state.md.options.maxNesting, cache = state.cache;
      if (typeof cache[pos] !== "undefined") {
        state.pos = cache[pos];
        return;
      }
      if (state.level < maxNesting) {
        for (i9 = 0; i9 < len; i9++) {
          state.level++;
          ok = rules[i9](state, true);
          state.level--;
          if (ok) {
            break;
          }
        }
      } else {
        state.pos = state.posMax;
      }
      if (!ok) {
        state.pos++;
      }
      cache[pos] = state.pos;
    };
    ParserInline.prototype.tokenize = function(state) {
      var ok, i9, rules = this.ruler.getRules(""), len = rules.length, end = state.posMax, maxNesting = state.md.options.maxNesting;
      while (state.pos < end) {
        if (state.level < maxNesting) {
          for (i9 = 0; i9 < len; i9++) {
            ok = rules[i9](state, false);
            if (ok) {
              break;
            }
          }
        }
        if (ok) {
          if (state.pos >= end) {
            break;
          }
          continue;
        }
        state.pending += state.src[state.pos++];
      }
      if (state.pending) {
        state.pushPending();
      }
    };
    ParserInline.prototype.parse = function(str, md, env2, outTokens) {
      var i9, rules, len;
      var state = new this.State(str, md, env2, outTokens);
      this.tokenize(state);
      rules = this.ruler2.getRules("");
      len = rules.length;
      for (i9 = 0; i9 < len; i9++) {
        rules[i9](state);
      }
    };
    ParserInline.prototype.State = require_state_inline();
    module.exports = ParserInline;
  }
});

// node_modules/linkify-it/lib/re.js
var require_re = __commonJS({
  "node_modules/linkify-it/lib/re.js"(exports, module) {
    "use strict";
    module.exports = function(opts) {
      var re6 = {};
      re6.src_Any = require_regex2().source;
      re6.src_Cc = require_regex3().source;
      re6.src_Z = require_regex5().source;
      re6.src_P = require_regex().source;
      re6.src_ZPCc = [re6.src_Z, re6.src_P, re6.src_Cc].join("|");
      re6.src_ZCc = [re6.src_Z, re6.src_Cc].join("|");
      var text_separators = "[><｜]";
      re6.src_pseudo_letter = "(?:(?!" + text_separators + "|" + re6.src_ZPCc + ")" + re6.src_Any + ")";
      re6.src_ip4 = "(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)";
      re6.src_auth = "(?:(?:(?!" + re6.src_ZCc + "|[@/\\[\\]()]).)+@)?";
      re6.src_port = "(?::(?:6(?:[0-4]\\d{3}|5(?:[0-4]\\d{2}|5(?:[0-2]\\d|3[0-5])))|[1-5]?\\d{1,4}))?";
      re6.src_host_terminator = "(?=$|" + text_separators + "|" + re6.src_ZPCc + ")(?!-|_|:\\d|\\.-|\\.(?!$|" + re6.src_ZPCc + "))";
      re6.src_path = "(?:[/?#](?:(?!" + re6.src_ZCc + "|" + text_separators + `|[()[\\]{}.,"'?!\\-;]).|\\[(?:(?!` + re6.src_ZCc + "|\\]).)*\\]|\\((?:(?!" + re6.src_ZCc + "|[)]).)*\\)|\\{(?:(?!" + re6.src_ZCc + '|[}]).)*\\}|\\"(?:(?!' + re6.src_ZCc + `|["]).)+\\"|\\'(?:(?!` + re6.src_ZCc + "|[']).)+\\'|\\'(?=" + re6.src_pseudo_letter + "|[-]).|\\.{2,}[a-zA-Z0-9%/&]|\\.(?!" + re6.src_ZCc + "|[.]).|" + (opts && opts["---"] ? "\\-(?!--(?:[^-]|$))(?:-*)|" : "\\-+|") + ",(?!" + re6.src_ZCc + ").|;(?!" + re6.src_ZCc + ").|\\!+(?!" + re6.src_ZCc + "|[!]).|\\?(?!" + re6.src_ZCc + "|[?]).)+|\\/)?";
      re6.src_email_name = '[\\-;:&=\\+\\$,\\.a-zA-Z0-9_][\\-;:&=\\+\\$,\\"\\.a-zA-Z0-9_]*';
      re6.src_xn = "xn--[a-z0-9\\-]{1,59}";
      re6.src_domain_root = // Allow letters & digits (http://test1)
      "(?:" + re6.src_xn + "|" + re6.src_pseudo_letter + "{1,63})";
      re6.src_domain = "(?:" + re6.src_xn + "|(?:" + re6.src_pseudo_letter + ")|(?:" + re6.src_pseudo_letter + "(?:-|" + re6.src_pseudo_letter + "){0,61}" + re6.src_pseudo_letter + "))";
      re6.src_host = "(?:(?:(?:(?:" + re6.src_domain + ")\\.)*" + re6.src_domain + "))";
      re6.tpl_host_fuzzy = "(?:" + re6.src_ip4 + "|(?:(?:(?:" + re6.src_domain + ")\\.)+(?:%TLDS%)))";
      re6.tpl_host_no_ip_fuzzy = "(?:(?:(?:" + re6.src_domain + ")\\.)+(?:%TLDS%))";
      re6.src_host_strict = re6.src_host + re6.src_host_terminator;
      re6.tpl_host_fuzzy_strict = re6.tpl_host_fuzzy + re6.src_host_terminator;
      re6.src_host_port_strict = re6.src_host + re6.src_port + re6.src_host_terminator;
      re6.tpl_host_port_fuzzy_strict = re6.tpl_host_fuzzy + re6.src_port + re6.src_host_terminator;
      re6.tpl_host_port_no_ip_fuzzy_strict = re6.tpl_host_no_ip_fuzzy + re6.src_port + re6.src_host_terminator;
      re6.tpl_host_fuzzy_test = "localhost|www\\.|\\.\\d{1,3}\\.|(?:\\.(?:%TLDS%)(?:" + re6.src_ZPCc + "|>|$))";
      re6.tpl_email_fuzzy = "(^|" + text_separators + '|"|\\(|' + re6.src_ZCc + ")(" + re6.src_email_name + "@" + re6.tpl_host_fuzzy_strict + ")";
      re6.tpl_link_fuzzy = // Fuzzy link can't be prepended with .:/\- and non punctuation.
      // but can start with > (markdown blockquote)
      "(^|(?![.:/\\-_@])(?:[$+<=>^`|｜]|" + re6.src_ZPCc + "))((?![$+<=>^`|｜])" + re6.tpl_host_port_fuzzy_strict + re6.src_path + ")";
      re6.tpl_link_no_ip_fuzzy = // Fuzzy link can't be prepended with .:/\- and non punctuation.
      // but can start with > (markdown blockquote)
      "(^|(?![.:/\\-_@])(?:[$+<=>^`|｜]|" + re6.src_ZPCc + "))((?![$+<=>^`|｜])" + re6.tpl_host_port_no_ip_fuzzy_strict + re6.src_path + ")";
      return re6;
    };
  }
});

// node_modules/linkify-it/index.js
var require_linkify_it = __commonJS({
  "node_modules/linkify-it/index.js"(exports, module) {
    "use strict";
    function assign(obj) {
      var sources = Array.prototype.slice.call(arguments, 1);
      sources.forEach(function(source) {
        if (!source) {
          return;
        }
        Object.keys(source).forEach(function(key) {
          obj[key] = source[key];
        });
      });
      return obj;
    }
    function _class(obj) {
      return Object.prototype.toString.call(obj);
    }
    function isString3(obj) {
      return _class(obj) === "[object String]";
    }
    function isObject(obj) {
      return _class(obj) === "[object Object]";
    }
    function isRegExp(obj) {
      return _class(obj) === "[object RegExp]";
    }
    function isFunction2(obj) {
      return _class(obj) === "[object Function]";
    }
    function escapeRE(str) {
      return str.replace(/[.?*+^$[\]\\(){}|-]/g, "\\$&");
    }
    var defaultOptions = {
      fuzzyLink: true,
      fuzzyEmail: true,
      fuzzyIP: false
    };
    function isOptionsObj(obj) {
      return Object.keys(obj || {}).reduce(function(acc, k4) {
        return acc || defaultOptions.hasOwnProperty(k4);
      }, false);
    }
    var defaultSchemas = {
      "http:": {
        validate: function(text, pos, self) {
          var tail = text.slice(pos);
          if (!self.re.http) {
            self.re.http = new RegExp(
              "^\\/\\/" + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path,
              "i"
            );
          }
          if (self.re.http.test(tail)) {
            return tail.match(self.re.http)[0].length;
          }
          return 0;
        }
      },
      "https:": "http:",
      "ftp:": "http:",
      "//": {
        validate: function(text, pos, self) {
          var tail = text.slice(pos);
          if (!self.re.no_http) {
            self.re.no_http = new RegExp(
              "^" + self.re.src_auth + // Don't allow single-level domains, because of false positives like '//test'
              // with code comments
              "(?:localhost|(?:(?:" + self.re.src_domain + ")\\.)+" + self.re.src_domain_root + ")" + self.re.src_port + self.re.src_host_terminator + self.re.src_path,
              "i"
            );
          }
          if (self.re.no_http.test(tail)) {
            if (pos >= 3 && text[pos - 3] === ":") {
              return 0;
            }
            if (pos >= 3 && text[pos - 3] === "/") {
              return 0;
            }
            return tail.match(self.re.no_http)[0].length;
          }
          return 0;
        }
      },
      "mailto:": {
        validate: function(text, pos, self) {
          var tail = text.slice(pos);
          if (!self.re.mailto) {
            self.re.mailto = new RegExp(
              "^" + self.re.src_email_name + "@" + self.re.src_host_strict,
              "i"
            );
          }
          if (self.re.mailto.test(tail)) {
            return tail.match(self.re.mailto)[0].length;
          }
          return 0;
        }
      }
    };
    var tlds_2ch_src_re = "a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]";
    var tlds_default = "biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф".split("|");
    function resetScanCache(self) {
      self.__index__ = -1;
      self.__text_cache__ = "";
    }
    function createValidator(re6) {
      return function(text, pos) {
        var tail = text.slice(pos);
        if (re6.test(tail)) {
          return tail.match(re6)[0].length;
        }
        return 0;
      };
    }
    function createNormalizer() {
      return function(match, self) {
        self.normalize(match);
      };
    }
    function compile(self) {
      var re6 = self.re = require_re()(self.__opts__);
      var tlds = self.__tlds__.slice();
      self.onCompile();
      if (!self.__tlds_replaced__) {
        tlds.push(tlds_2ch_src_re);
      }
      tlds.push(re6.src_xn);
      re6.src_tlds = tlds.join("|");
      function untpl(tpl) {
        return tpl.replace("%TLDS%", re6.src_tlds);
      }
      re6.email_fuzzy = RegExp(untpl(re6.tpl_email_fuzzy), "i");
      re6.link_fuzzy = RegExp(untpl(re6.tpl_link_fuzzy), "i");
      re6.link_no_ip_fuzzy = RegExp(untpl(re6.tpl_link_no_ip_fuzzy), "i");
      re6.host_fuzzy_test = RegExp(untpl(re6.tpl_host_fuzzy_test), "i");
      var aliases = [];
      self.__compiled__ = {};
      function schemaError(name, val) {
        throw new Error('(LinkifyIt) Invalid schema "' + name + '": ' + val);
      }
      Object.keys(self.__schemas__).forEach(function(name) {
        var val = self.__schemas__[name];
        if (val === null) {
          return;
        }
        var compiled = { validate: null, link: null };
        self.__compiled__[name] = compiled;
        if (isObject(val)) {
          if (isRegExp(val.validate)) {
            compiled.validate = createValidator(val.validate);
          } else if (isFunction2(val.validate)) {
            compiled.validate = val.validate;
          } else {
            schemaError(name, val);
          }
          if (isFunction2(val.normalize)) {
            compiled.normalize = val.normalize;
          } else if (!val.normalize) {
            compiled.normalize = createNormalizer();
          } else {
            schemaError(name, val);
          }
          return;
        }
        if (isString3(val)) {
          aliases.push(name);
          return;
        }
        schemaError(name, val);
      });
      aliases.forEach(function(alias) {
        if (!self.__compiled__[self.__schemas__[alias]]) {
          return;
        }
        self.__compiled__[alias].validate = self.__compiled__[self.__schemas__[alias]].validate;
        self.__compiled__[alias].normalize = self.__compiled__[self.__schemas__[alias]].normalize;
      });
      self.__compiled__[""] = { validate: null, normalize: createNormalizer() };
      var slist = Object.keys(self.__compiled__).filter(function(name) {
        return name.length > 0 && self.__compiled__[name];
      }).map(escapeRE).join("|");
      self.re.schema_test = RegExp("(^|(?!_)(?:[><｜]|" + re6.src_ZPCc + "))(" + slist + ")", "i");
      self.re.schema_search = RegExp("(^|(?!_)(?:[><｜]|" + re6.src_ZPCc + "))(" + slist + ")", "ig");
      self.re.pretest = RegExp(
        "(" + self.re.schema_test.source + ")|(" + self.re.host_fuzzy_test.source + ")|@",
        "i"
      );
      resetScanCache(self);
    }
    function Match(self, shift) {
      var start = self.__index__, end = self.__last_index__, text = self.__text_cache__.slice(start, end);
      this.schema = self.__schema__.toLowerCase();
      this.index = start + shift;
      this.lastIndex = end + shift;
      this.raw = text;
      this.text = text;
      this.url = text;
    }
    function createMatch(self, shift) {
      var match = new Match(self, shift);
      self.__compiled__[match.schema].normalize(match, self);
      return match;
    }
    function LinkifyIt(schemas, options) {
      if (!(this instanceof LinkifyIt)) {
        return new LinkifyIt(schemas, options);
      }
      if (!options) {
        if (isOptionsObj(schemas)) {
          options = schemas;
          schemas = {};
        }
      }
      this.__opts__ = assign({}, defaultOptions, options);
      this.__index__ = -1;
      this.__last_index__ = -1;
      this.__schema__ = "";
      this.__text_cache__ = "";
      this.__schemas__ = assign({}, defaultSchemas, schemas);
      this.__compiled__ = {};
      this.__tlds__ = tlds_default;
      this.__tlds_replaced__ = false;
      this.re = {};
      compile(this);
    }
    LinkifyIt.prototype.add = function add(schema, definition) {
      this.__schemas__[schema] = definition;
      compile(this);
      return this;
    };
    LinkifyIt.prototype.set = function set(options) {
      this.__opts__ = assign(this.__opts__, options);
      return this;
    };
    LinkifyIt.prototype.test = function test2(text) {
      this.__text_cache__ = text;
      this.__index__ = -1;
      if (!text.length) {
        return false;
      }
      var m13, ml, me5, len, shift, next, re6, tld_pos, at_pos;
      if (this.re.schema_test.test(text)) {
        re6 = this.re.schema_search;
        re6.lastIndex = 0;
        while ((m13 = re6.exec(text)) !== null) {
          len = this.testSchemaAt(text, m13[2], re6.lastIndex);
          if (len) {
            this.__schema__ = m13[2];
            this.__index__ = m13.index + m13[1].length;
            this.__last_index__ = m13.index + m13[0].length + len;
            break;
          }
        }
      }
      if (this.__opts__.fuzzyLink && this.__compiled__["http:"]) {
        tld_pos = text.search(this.re.host_fuzzy_test);
        if (tld_pos >= 0) {
          if (this.__index__ < 0 || tld_pos < this.__index__) {
            if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {
              shift = ml.index + ml[1].length;
              if (this.__index__ < 0 || shift < this.__index__) {
                this.__schema__ = "";
                this.__index__ = shift;
                this.__last_index__ = ml.index + ml[0].length;
              }
            }
          }
        }
      }
      if (this.__opts__.fuzzyEmail && this.__compiled__["mailto:"]) {
        at_pos = text.indexOf("@");
        if (at_pos >= 0) {
          if ((me5 = text.match(this.re.email_fuzzy)) !== null) {
            shift = me5.index + me5[1].length;
            next = me5.index + me5[0].length;
            if (this.__index__ < 0 || shift < this.__index__ || shift === this.__index__ && next > this.__last_index__) {
              this.__schema__ = "mailto:";
              this.__index__ = shift;
              this.__last_index__ = next;
            }
          }
        }
      }
      return this.__index__ >= 0;
    };
    LinkifyIt.prototype.pretest = function pretest(text) {
      return this.re.pretest.test(text);
    };
    LinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {
      if (!this.__compiled__[schema.toLowerCase()]) {
        return 0;
      }
      return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);
    };
    LinkifyIt.prototype.match = function match(text) {
      var shift = 0, result = [];
      if (this.__index__ >= 0 && this.__text_cache__ === text) {
        result.push(createMatch(this, shift));
        shift = this.__last_index__;
      }
      var tail = shift ? text.slice(shift) : text;
      while (this.test(tail)) {
        result.push(createMatch(this, shift));
        tail = tail.slice(this.__last_index__);
        shift += this.__last_index__;
      }
      if (result.length) {
        return result;
      }
      return null;
    };
    LinkifyIt.prototype.tlds = function tlds(list, keepOld) {
      list = Array.isArray(list) ? list : [list];
      if (!keepOld) {
        this.__tlds__ = list.slice();
        this.__tlds_replaced__ = true;
        compile(this);
        return this;
      }
      this.__tlds__ = this.__tlds__.concat(list).sort().filter(function(el2, idx, arr) {
        return el2 !== arr[idx - 1];
      }).reverse();
      compile(this);
      return this;
    };
    LinkifyIt.prototype.normalize = function normalize(match) {
      if (!match.schema) {
        match.url = "http://" + match.url;
      }
      if (match.schema === "mailto:" && !/^mailto:/i.test(match.url)) {
        match.url = "mailto:" + match.url;
      }
    };
    LinkifyIt.prototype.onCompile = function onCompile() {
    };
    module.exports = LinkifyIt;
  }
});

// node_modules/punycode/punycode.es6.js
var punycode_es6_exports = {};
__export(punycode_es6_exports, {
  decode: () => decode,
  default: () => punycode_es6_default,
  encode: () => encode,
  toASCII: () => toASCII,
  toUnicode: () => toUnicode,
  ucs2decode: () => ucs2decode,
  ucs2encode: () => ucs2encode
});
function error(type) {
  throw new RangeError(errors[type]);
}
function map(array, callback) {
  const result = [];
  let length2 = array.length;
  while (length2--) {
    result[length2] = callback(array[length2]);
  }
  return result;
}
function mapDomain(domain, callback) {
  const parts = domain.split("@");
  let result = "";
  if (parts.length > 1) {
    result = parts[0] + "@";
    domain = parts[1];
  }
  domain = domain.replace(regexSeparators, ".");
  const labels = domain.split(".");
  const encoded = map(labels, callback).join(".");
  return result + encoded;
}
function ucs2decode(string) {
  const output = [];
  let counter2 = 0;
  const length2 = string.length;
  while (counter2 < length2) {
    const value = string.charCodeAt(counter2++);
    if (value >= 55296 && value <= 56319 && counter2 < length2) {
      const extra = string.charCodeAt(counter2++);
      if ((extra & 64512) == 56320) {
        output.push(((value & 1023) << 10) + (extra & 1023) + 65536);
      } else {
        output.push(value);
        counter2--;
      }
    } else {
      output.push(value);
    }
  }
  return output;
}
var maxInt, base, tMin, tMax, skew, damp, initialBias, initialN, delimiter, regexPunycode, regexNonASCII, regexSeparators, errors, baseMinusTMin, floor, stringFromCharCode, ucs2encode, basicToDigit, digitToBasic, adapt, decode, encode, toUnicode, toASCII, punycode, punycode_es6_default;
var init_punycode_es6 = __esm({
  "node_modules/punycode/punycode.es6.js"() {
    "use strict";
    maxInt = 2147483647;
    base = 36;
    tMin = 1;
    tMax = 26;
    skew = 38;
    damp = 700;
    initialBias = 72;
    initialN = 128;
    delimiter = "-";
    regexPunycode = /^xn--/;
    regexNonASCII = /[^\0-\x7F]/;
    regexSeparators = /[\x2E\u3002\uFF0E\uFF61]/g;
    errors = {
      "overflow": "Overflow: input needs wider integers to process",
      "not-basic": "Illegal input >= 0x80 (not a basic code point)",
      "invalid-input": "Invalid input"
    };
    baseMinusTMin = base - tMin;
    floor = Math.floor;
    stringFromCharCode = String.fromCharCode;
    ucs2encode = (codePoints) => String.fromCodePoint(...codePoints);
    basicToDigit = function(codePoint) {
      if (codePoint >= 48 && codePoint < 58) {
        return 26 + (codePoint - 48);
      }
      if (codePoint >= 65 && codePoint < 91) {
        return codePoint - 65;
      }
      if (codePoint >= 97 && codePoint < 123) {
        return codePoint - 97;
      }
      return base;
    };
    digitToBasic = function(digit, flag) {
      return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);
    };
    adapt = function(delta, numPoints, firstTime) {
      let k4 = 0;
      delta = firstTime ? floor(delta / damp) : delta >> 1;
      delta += floor(delta / numPoints);
      for (; delta > baseMinusTMin * tMax >> 1; k4 += base) {
        delta = floor(delta / baseMinusTMin);
      }
      return floor(k4 + (baseMinusTMin + 1) * delta / (delta + skew));
    };
    decode = function(input) {
      const output = [];
      const inputLength = input.length;
      let i9 = 0;
      let n7 = initialN;
      let bias = initialBias;
      let basic = input.lastIndexOf(delimiter);
      if (basic < 0) {
        basic = 0;
      }
      for (let j6 = 0; j6 < basic; ++j6) {
        if (input.charCodeAt(j6) >= 128) {
          error("not-basic");
        }
        output.push(input.charCodeAt(j6));
      }
      for (let index2 = basic > 0 ? basic + 1 : 0; index2 < inputLength; ) {
        const oldi = i9;
        for (let w6 = 1, k4 = base; ; k4 += base) {
          if (index2 >= inputLength) {
            error("invalid-input");
          }
          const digit = basicToDigit(input.charCodeAt(index2++));
          if (digit >= base) {
            error("invalid-input");
          }
          if (digit > floor((maxInt - i9) / w6)) {
            error("overflow");
          }
          i9 += digit * w6;
          const t18 = k4 <= bias ? tMin : k4 >= bias + tMax ? tMax : k4 - bias;
          if (digit < t18) {
            break;
          }
          const baseMinusT = base - t18;
          if (w6 > floor(maxInt / baseMinusT)) {
            error("overflow");
          }
          w6 *= baseMinusT;
        }
        const out = output.length + 1;
        bias = adapt(i9 - oldi, out, oldi == 0);
        if (floor(i9 / out) > maxInt - n7) {
          error("overflow");
        }
        n7 += floor(i9 / out);
        i9 %= out;
        output.splice(i9++, 0, n7);
      }
      return String.fromCodePoint(...output);
    };
    encode = function(input) {
      const output = [];
      input = ucs2decode(input);
      const inputLength = input.length;
      let n7 = initialN;
      let delta = 0;
      let bias = initialBias;
      for (const currentValue of input) {
        if (currentValue < 128) {
          output.push(stringFromCharCode(currentValue));
        }
      }
      const basicLength = output.length;
      let handledCPCount = basicLength;
      if (basicLength) {
        output.push(delimiter);
      }
      while (handledCPCount < inputLength) {
        let m13 = maxInt;
        for (const currentValue of input) {
          if (currentValue >= n7 && currentValue < m13) {
            m13 = currentValue;
          }
        }
        const handledCPCountPlusOne = handledCPCount + 1;
        if (m13 - n7 > floor((maxInt - delta) / handledCPCountPlusOne)) {
          error("overflow");
        }
        delta += (m13 - n7) * handledCPCountPlusOne;
        n7 = m13;
        for (const currentValue of input) {
          if (currentValue < n7 && ++delta > maxInt) {
            error("overflow");
          }
          if (currentValue === n7) {
            let q7 = delta;
            for (let k4 = base; ; k4 += base) {
              const t18 = k4 <= bias ? tMin : k4 >= bias + tMax ? tMax : k4 - bias;
              if (q7 < t18) {
                break;
              }
              const qMinusT = q7 - t18;
              const baseMinusT = base - t18;
              output.push(
                stringFromCharCode(digitToBasic(t18 + qMinusT % baseMinusT, 0))
              );
              q7 = floor(qMinusT / baseMinusT);
            }
            output.push(stringFromCharCode(digitToBasic(q7, 0)));
            bias = adapt(delta, handledCPCountPlusOne, handledCPCount === basicLength);
            delta = 0;
            ++handledCPCount;
          }
        }
        ++delta;
        ++n7;
      }
      return output.join("");
    };
    toUnicode = function(input) {
      return mapDomain(input, function(string) {
        return regexPunycode.test(string) ? decode(string.slice(4).toLowerCase()) : string;
      });
    };
    toASCII = function(input) {
      return mapDomain(input, function(string) {
        return regexNonASCII.test(string) ? "xn--" + encode(string) : string;
      });
    };
    punycode = {
      /**
       * A string representing the current Punycode.js version number.
       * @memberOf punycode
       * @type String
       */
      "version": "2.3.1",
      /**
       * An object of methods to convert from JavaScript's internal character
       * representation (UCS-2) to Unicode code points, and back.
       * @see <https://mathiasbynens.be/notes/javascript-encoding>
       * @memberOf punycode
       * @type Object
       */
      "ucs2": {
        "decode": ucs2decode,
        "encode": ucs2encode
      },
      "decode": decode,
      "encode": encode,
      "toASCII": toASCII,
      "toUnicode": toUnicode
    };
    punycode_es6_default = punycode;
  }
});

// node_modules/markdown-it/lib/presets/default.js
var require_default = __commonJS({
  "node_modules/markdown-it/lib/presets/default.js"(exports, module) {
    "use strict";
    module.exports = {
      options: {
        html: false,
        // Enable HTML tags in source
        xhtmlOut: false,
        // Use '/' to close single tags (<br />)
        breaks: false,
        // Convert '\n' in paragraphs into <br>
        langPrefix: "language-",
        // CSS language prefix for fenced blocks
        linkify: false,
        // autoconvert URL-like texts to links
        // Enable some language-neutral replacements + quotes beautification
        typographer: false,
        // Double + single quotes replacement pairs, when typographer enabled,
        // and smartquotes on. Could be either a String or an Array.
        //
        // For example, you can use '«»„“' for Russian, '„“‚‘' for German,
        // and ['«\xA0', '\xA0»', '‹\xA0', '\xA0›'] for French (including nbsp).
        quotes: "“”‘’",
        /* “”‘’ */
        // Highlighter function. Should return escaped HTML,
        // or '' if the source string is not changed and should be escaped externaly.
        // If result starts with <pre... internal wrapper is skipped.
        //
        // function (/*str, lang*/) { return ''; }
        //
        highlight: null,
        maxNesting: 100
        // Internal protection, recursion limit
      },
      components: {
        core: {},
        block: {},
        inline: {}
      }
    };
  }
});

// node_modules/markdown-it/lib/presets/zero.js
var require_zero = __commonJS({
  "node_modules/markdown-it/lib/presets/zero.js"(exports, module) {
    "use strict";
    module.exports = {
      options: {
        html: false,
        // Enable HTML tags in source
        xhtmlOut: false,
        // Use '/' to close single tags (<br />)
        breaks: false,
        // Convert '\n' in paragraphs into <br>
        langPrefix: "language-",
        // CSS language prefix for fenced blocks
        linkify: false,
        // autoconvert URL-like texts to links
        // Enable some language-neutral replacements + quotes beautification
        typographer: false,
        // Double + single quotes replacement pairs, when typographer enabled,
        // and smartquotes on. Could be either a String or an Array.
        //
        // For example, you can use '«»„“' for Russian, '„“‚‘' for German,
        // and ['«\xA0', '\xA0»', '‹\xA0', '\xA0›'] for French (including nbsp).
        quotes: "“”‘’",
        /* “”‘’ */
        // Highlighter function. Should return escaped HTML,
        // or '' if the source string is not changed and should be escaped externaly.
        // If result starts with <pre... internal wrapper is skipped.
        //
        // function (/*str, lang*/) { return ''; }
        //
        highlight: null,
        maxNesting: 20
        // Internal protection, recursion limit
      },
      components: {
        core: {
          rules: [
            "normalize",
            "block",
            "inline"
          ]
        },
        block: {
          rules: [
            "paragraph"
          ]
        },
        inline: {
          rules: [
            "text"
          ],
          rules2: [
            "balance_pairs",
            "text_collapse"
          ]
        }
      }
    };
  }
});

// node_modules/markdown-it/lib/presets/commonmark.js
var require_commonmark = __commonJS({
  "node_modules/markdown-it/lib/presets/commonmark.js"(exports, module) {
    "use strict";
    module.exports = {
      options: {
        html: true,
        // Enable HTML tags in source
        xhtmlOut: true,
        // Use '/' to close single tags (<br />)
        breaks: false,
        // Convert '\n' in paragraphs into <br>
        langPrefix: "language-",
        // CSS language prefix for fenced blocks
        linkify: false,
        // autoconvert URL-like texts to links
        // Enable some language-neutral replacements + quotes beautification
        typographer: false,
        // Double + single quotes replacement pairs, when typographer enabled,
        // and smartquotes on. Could be either a String or an Array.
        //
        // For example, you can use '«»„“' for Russian, '„“‚‘' for German,
        // and ['«\xA0', '\xA0»', '‹\xA0', '\xA0›'] for French (including nbsp).
        quotes: "“”‘’",
        /* “”‘’ */
        // Highlighter function. Should return escaped HTML,
        // or '' if the source string is not changed and should be escaped externaly.
        // If result starts with <pre... internal wrapper is skipped.
        //
        // function (/*str, lang*/) { return ''; }
        //
        highlight: null,
        maxNesting: 20
        // Internal protection, recursion limit
      },
      components: {
        core: {
          rules: [
            "normalize",
            "block",
            "inline"
          ]
        },
        block: {
          rules: [
            "blockquote",
            "code",
            "fence",
            "heading",
            "hr",
            "html_block",
            "lheading",
            "list",
            "reference",
            "paragraph"
          ]
        },
        inline: {
          rules: [
            "autolink",
            "backticks",
            "emphasis",
            "entity",
            "escape",
            "html_inline",
            "image",
            "link",
            "newline",
            "text"
          ],
          rules2: [
            "balance_pairs",
            "emphasis",
            "text_collapse"
          ]
        }
      }
    };
  }
});

// node_modules/markdown-it/lib/index.js
var require_lib = __commonJS({
  "node_modules/markdown-it/lib/index.js"(exports, module) {
    "use strict";
    var utils = require_utils();
    var helpers = require_helpers();
    var Renderer = require_renderer();
    var ParserCore = require_parser_core();
    var ParserBlock = require_parser_block();
    var ParserInline = require_parser_inline();
    var LinkifyIt = require_linkify_it();
    var mdurl = require_mdurl();
    var punycode2 = (init_punycode_es6(), __toCommonJS(punycode_es6_exports));
    var config = {
      default: require_default(),
      zero: require_zero(),
      commonmark: require_commonmark()
    };
    var BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;
    var GOOD_DATA_RE = /^data:image\/(gif|png|jpeg|webp);/;
    function validateLink(url) {
      var str = url.trim().toLowerCase();
      return BAD_PROTO_RE.test(str) ? GOOD_DATA_RE.test(str) ? true : false : true;
    }
    var RECODE_HOSTNAME_FOR = ["http:", "https:", "mailto:"];
    function normalizeLink(url) {
      var parsed = mdurl.parse(url, true);
      if (parsed.hostname) {
        if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {
          try {
            parsed.hostname = punycode2.toASCII(parsed.hostname);
          } catch (er2) {
          }
        }
      }
      return mdurl.encode(mdurl.format(parsed));
    }
    function normalizeLinkText(url) {
      var parsed = mdurl.parse(url, true);
      if (parsed.hostname) {
        if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {
          try {
            parsed.hostname = punycode2.toUnicode(parsed.hostname);
          } catch (er2) {
          }
        }
      }
      return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + "%");
    }
    function MarkdownIt(presetName, options) {
      if (!(this instanceof MarkdownIt)) {
        return new MarkdownIt(presetName, options);
      }
      if (!options) {
        if (!utils.isString(presetName)) {
          options = presetName || {};
          presetName = "default";
        }
      }
      this.inline = new ParserInline();
      this.block = new ParserBlock();
      this.core = new ParserCore();
      this.renderer = new Renderer();
      this.linkify = new LinkifyIt();
      this.validateLink = validateLink;
      this.normalizeLink = normalizeLink;
      this.normalizeLinkText = normalizeLinkText;
      this.utils = utils;
      this.helpers = utils.assign({}, helpers);
      this.options = {};
      this.configure(presetName);
      if (options) {
        this.set(options);
      }
    }
    MarkdownIt.prototype.set = function(options) {
      utils.assign(this.options, options);
      return this;
    };
    MarkdownIt.prototype.configure = function(presets) {
      var self = this, presetName;
      if (utils.isString(presets)) {
        presetName = presets;
        presets = config[presetName];
        if (!presets) {
          throw new Error('Wrong `markdown-it` preset "' + presetName + '", check name');
        }
      }
      if (!presets) {
        throw new Error("Wrong `markdown-it` preset, can't be empty");
      }
      if (presets.options) {
        self.set(presets.options);
      }
      if (presets.components) {
        Object.keys(presets.components).forEach(function(name) {
          if (presets.components[name].rules) {
            self[name].ruler.enableOnly(presets.components[name].rules);
          }
          if (presets.components[name].rules2) {
            self[name].ruler2.enableOnly(presets.components[name].rules2);
          }
        });
      }
      return this;
    };
    MarkdownIt.prototype.enable = function(list, ignoreInvalid) {
      var result = [];
      if (!Array.isArray(list)) {
        list = [list];
      }
      ["core", "block", "inline"].forEach(function(chain) {
        result = result.concat(this[chain].ruler.enable(list, true));
      }, this);
      result = result.concat(this.inline.ruler2.enable(list, true));
      var missed = list.filter(function(name) {
        return result.indexOf(name) < 0;
      });
      if (missed.length && !ignoreInvalid) {
        throw new Error("MarkdownIt. Failed to enable unknown rule(s): " + missed);
      }
      return this;
    };
    MarkdownIt.prototype.disable = function(list, ignoreInvalid) {
      var result = [];
      if (!Array.isArray(list)) {
        list = [list];
      }
      ["core", "block", "inline"].forEach(function(chain) {
        result = result.concat(this[chain].ruler.disable(list, true));
      }, this);
      result = result.concat(this.inline.ruler2.disable(list, true));
      var missed = list.filter(function(name) {
        return result.indexOf(name) < 0;
      });
      if (missed.length && !ignoreInvalid) {
        throw new Error("MarkdownIt. Failed to disable unknown rule(s): " + missed);
      }
      return this;
    };
    MarkdownIt.prototype.use = function(plugin) {
      var args = [this].concat(Array.prototype.slice.call(arguments, 1));
      plugin.apply(plugin, args);
      return this;
    };
    MarkdownIt.prototype.parse = function(src, env2) {
      if (typeof src !== "string") {
        throw new Error("Input data should be a String");
      }
      var state = new this.core.State(src, this, env2);
      this.core.process(state);
      return state.tokens;
    };
    MarkdownIt.prototype.render = function(src, env2) {
      env2 = env2 || {};
      return this.renderer.render(this.parse(src, env2), this.options, env2);
    };
    MarkdownIt.prototype.parseInline = function(src, env2) {
      var state = new this.core.State(src, this, env2);
      state.inlineMode = true;
      this.core.process(state);
      return state.tokens;
    };
    MarkdownIt.prototype.renderInline = function(src, env2) {
      env2 = env2 || {};
      return this.renderer.render(this.parseInline(src, env2), this.options, env2);
    };
    module.exports = MarkdownIt;
  }
});

// node_modules/markdown-it/index.js
var require_markdown_it = __commonJS({
  "node_modules/markdown-it/index.js"(exports, module) {
    "use strict";
    module.exports = require_lib();
  }
});

// node_modules/@emotion/memoize/dist/memoize.browser.esm.js
function memoize(fn) {
  var cache = {};
  return function(arg) {
    if (cache[arg] === void 0)
      cache[arg] = fn(arg);
    return cache[arg];
  };
}
var memoize_browser_esm_default;
var init_memoize_browser_esm = __esm({
  "node_modules/@emotion/memoize/dist/memoize.browser.esm.js"() {
    memoize_browser_esm_default = memoize;
  }
});

// node_modules/@emotion/is-prop-valid/dist/is-prop-valid.browser.esm.js
var is_prop_valid_browser_esm_exports = {};
__export(is_prop_valid_browser_esm_exports, {
  default: () => is_prop_valid_browser_esm_default
});
var reactPropsRegex, index, is_prop_valid_browser_esm_default;
var init_is_prop_valid_browser_esm = __esm({
  "node_modules/@emotion/is-prop-valid/dist/is-prop-valid.browser.esm.js"() {
    init_memoize_browser_esm();
    reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|inert|itemProp|itemScope|itemType|itemID|itemRef|on|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/;
    index = memoize_browser_esm_default(
      function(prop) {
        return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111 && prop.charCodeAt(1) === 110 && prop.charCodeAt(2) < 91;
      }
      /* Z+1 */
    );
    is_prop_valid_browser_esm_default = index;
  }
});

// node_modules/@graphiql/react/dist/index.mjs
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);
var a11 = __toESM(require_react(), 1);
var import_react96 = __toESM(require_react(), 1);
var import_set_value = __toESM(require_set_value(), 1);
var import_copy_to_clipboard = __toESM(require_copy_to_clipboard(), 1);

// node_modules/@radix-ui/react-dialog/dist/index.mjs
var import_react = __toESM(require_react(), 1);
var $5d3850c4d0b4e6c7$var$DIALOG_NAME = "Dialog";
var [$5d3850c4d0b4e6c7$var$createDialogContext, $5d3850c4d0b4e6c7$export$cc702773b8ea3e41] = $c512c27ab02ef895$export$50c7b4e9d9f19c1($5d3850c4d0b4e6c7$var$DIALOG_NAME);
var [$5d3850c4d0b4e6c7$var$DialogProvider, $5d3850c4d0b4e6c7$var$useDialogContext] = $5d3850c4d0b4e6c7$var$createDialogContext($5d3850c4d0b4e6c7$var$DIALOG_NAME);
var $5d3850c4d0b4e6c7$export$3ddf2d174ce01153 = (props) => {
  const { __scopeDialog, children, open: openProp, defaultOpen, onOpenChange, modal = true } = props;
  const triggerRef = (0, import_react.useRef)(null);
  const contentRef = (0, import_react.useRef)(null);
  const [open = false, setOpen] = $71cd76cc60e0454e$export$6f32135080cb4c3({
    prop: openProp,
    defaultProp: defaultOpen,
    onChange: onOpenChange
  });
  return (0, import_react.createElement)($5d3850c4d0b4e6c7$var$DialogProvider, {
    scope: __scopeDialog,
    triggerRef,
    contentRef,
    contentId: $1746a345f3d73bb7$export$f680877a34711e37(),
    titleId: $1746a345f3d73bb7$export$f680877a34711e37(),
    descriptionId: $1746a345f3d73bb7$export$f680877a34711e37(),
    open,
    onOpenChange: setOpen,
    onOpenToggle: (0, import_react.useCallback)(
      () => setOpen(
        (prevOpen) => !prevOpen
      ),
      [
        setOpen
      ]
    ),
    modal
  }, children);
};
Object.assign($5d3850c4d0b4e6c7$export$3ddf2d174ce01153, {
  displayName: $5d3850c4d0b4e6c7$var$DIALOG_NAME
});
var $5d3850c4d0b4e6c7$var$TRIGGER_NAME = "DialogTrigger";
var $5d3850c4d0b4e6c7$export$2e1e1122cf0cba88 = (0, import_react.forwardRef)((props, forwardedRef) => {
  const { __scopeDialog, ...triggerProps } = props;
  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$TRIGGER_NAME, __scopeDialog);
  const composedTriggerRef = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, context.triggerRef);
  return (0, import_react.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.button, _extends({
    type: "button",
    "aria-haspopup": "dialog",
    "aria-expanded": context.open,
    "aria-controls": context.contentId,
    "data-state": $5d3850c4d0b4e6c7$var$getState(context.open)
  }, triggerProps, {
    ref: composedTriggerRef,
    onClick: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onClick, context.onOpenToggle)
  }));
});
Object.assign($5d3850c4d0b4e6c7$export$2e1e1122cf0cba88, {
  displayName: $5d3850c4d0b4e6c7$var$TRIGGER_NAME
});
var $5d3850c4d0b4e6c7$var$PORTAL_NAME = "DialogPortal";
var [$5d3850c4d0b4e6c7$var$PortalProvider, $5d3850c4d0b4e6c7$var$usePortalContext] = $5d3850c4d0b4e6c7$var$createDialogContext($5d3850c4d0b4e6c7$var$PORTAL_NAME, {
  forceMount: void 0
});
var $5d3850c4d0b4e6c7$export$dad7c95542bacce0 = (props) => {
  const { __scopeDialog, forceMount, children, container } = props;
  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$PORTAL_NAME, __scopeDialog);
  return (0, import_react.createElement)($5d3850c4d0b4e6c7$var$PortalProvider, {
    scope: __scopeDialog,
    forceMount
  }, import_react.Children.map(
    children,
    (child) => (0, import_react.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
      present: forceMount || context.open
    }, (0, import_react.createElement)($f1701beae083dbae$export$602eac185826482c, {
      asChild: true,
      container
    }, child))
  ));
};
Object.assign($5d3850c4d0b4e6c7$export$dad7c95542bacce0, {
  displayName: $5d3850c4d0b4e6c7$var$PORTAL_NAME
});
var $5d3850c4d0b4e6c7$var$OVERLAY_NAME = "DialogOverlay";
var $5d3850c4d0b4e6c7$export$bd1d06c79be19e17 = (0, import_react.forwardRef)((props, forwardedRef) => {
  const portalContext = $5d3850c4d0b4e6c7$var$usePortalContext($5d3850c4d0b4e6c7$var$OVERLAY_NAME, props.__scopeDialog);
  const { forceMount = portalContext.forceMount, ...overlayProps } = props;
  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$OVERLAY_NAME, props.__scopeDialog);
  return context.modal ? (0, import_react.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || context.open
  }, (0, import_react.createElement)($5d3850c4d0b4e6c7$var$DialogOverlayImpl, _extends({}, overlayProps, {
    ref: forwardedRef
  }))) : null;
});
Object.assign($5d3850c4d0b4e6c7$export$bd1d06c79be19e17, {
  displayName: $5d3850c4d0b4e6c7$var$OVERLAY_NAME
});
var $5d3850c4d0b4e6c7$var$DialogOverlayImpl = (0, import_react.forwardRef)((props, forwardedRef) => {
  const { __scopeDialog, ...overlayProps } = props;
  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$OVERLAY_NAME, __scopeDialog);
  return (
    // Make sure `Content` is scrollable even when it doesn't live inside `RemoveScroll`
    // ie. when `Overlay` and `Content` are siblings
    (0, import_react.createElement)(Combination_default, {
      as: $5e63c961fc1ce211$export$8c6ed5c666ac1360,
      allowPinchZoom: true,
      shards: [
        context.contentRef
      ]
    }, (0, import_react.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends({
      "data-state": $5d3850c4d0b4e6c7$var$getState(context.open)
    }, overlayProps, {
      ref: forwardedRef,
      style: {
        pointerEvents: "auto",
        ...overlayProps.style
      }
    })))
  );
});
var $5d3850c4d0b4e6c7$var$CONTENT_NAME = "DialogContent";
var $5d3850c4d0b4e6c7$export$b6d9565de1e068cf = (0, import_react.forwardRef)((props, forwardedRef) => {
  const portalContext = $5d3850c4d0b4e6c7$var$usePortalContext($5d3850c4d0b4e6c7$var$CONTENT_NAME, props.__scopeDialog);
  const { forceMount = portalContext.forceMount, ...contentProps } = props;
  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$CONTENT_NAME, props.__scopeDialog);
  return (0, import_react.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || context.open
  }, context.modal ? (0, import_react.createElement)($5d3850c4d0b4e6c7$var$DialogContentModal, _extends({}, contentProps, {
    ref: forwardedRef
  })) : (0, import_react.createElement)($5d3850c4d0b4e6c7$var$DialogContentNonModal, _extends({}, contentProps, {
    ref: forwardedRef
  })));
});
Object.assign($5d3850c4d0b4e6c7$export$b6d9565de1e068cf, {
  displayName: $5d3850c4d0b4e6c7$var$CONTENT_NAME
});
var $5d3850c4d0b4e6c7$var$DialogContentModal = (0, import_react.forwardRef)((props, forwardedRef) => {
  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$CONTENT_NAME, props.__scopeDialog);
  const contentRef = (0, import_react.useRef)(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, context.contentRef, contentRef);
  (0, import_react.useEffect)(() => {
    const content = contentRef.current;
    if (content)
      return hideOthers(content);
  }, []);
  return (0, import_react.createElement)($5d3850c4d0b4e6c7$var$DialogContentImpl, _extends({}, props, {
    ref: composedRefs,
    trapFocus: context.open,
    disableOutsidePointerEvents: true,
    onCloseAutoFocus: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onCloseAutoFocus, (event) => {
      var _context$triggerRef$c;
      event.preventDefault();
      (_context$triggerRef$c = context.triggerRef.current) === null || _context$triggerRef$c === void 0 || _context$triggerRef$c.focus();
    }),
    onPointerDownOutside: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerDownOutside, (event) => {
      const originalEvent = event.detail.originalEvent;
      const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;
      const isRightClick = originalEvent.button === 2 || ctrlLeftClick;
      if (isRightClick)
        event.preventDefault();
    }),
    onFocusOutside: $e42e1063c40fb3ef$export$b9ecd428b558ff10(
      props.onFocusOutside,
      (event) => event.preventDefault()
    )
  }));
});
var $5d3850c4d0b4e6c7$var$DialogContentNonModal = (0, import_react.forwardRef)((props, forwardedRef) => {
  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$CONTENT_NAME, props.__scopeDialog);
  const hasInteractedOutsideRef = (0, import_react.useRef)(false);
  const hasPointerDownOutsideRef = (0, import_react.useRef)(false);
  return (0, import_react.createElement)($5d3850c4d0b4e6c7$var$DialogContentImpl, _extends({}, props, {
    ref: forwardedRef,
    trapFocus: false,
    disableOutsidePointerEvents: false,
    onCloseAutoFocus: (event) => {
      var _props$onCloseAutoFoc;
      (_props$onCloseAutoFoc = props.onCloseAutoFocus) === null || _props$onCloseAutoFoc === void 0 || _props$onCloseAutoFoc.call(props, event);
      if (!event.defaultPrevented) {
        var _context$triggerRef$c2;
        if (!hasInteractedOutsideRef.current)
          (_context$triggerRef$c2 = context.triggerRef.current) === null || _context$triggerRef$c2 === void 0 || _context$triggerRef$c2.focus();
        event.preventDefault();
      }
      hasInteractedOutsideRef.current = false;
      hasPointerDownOutsideRef.current = false;
    },
    onInteractOutside: (event) => {
      var _props$onInteractOuts, _context$triggerRef$c3;
      (_props$onInteractOuts = props.onInteractOutside) === null || _props$onInteractOuts === void 0 || _props$onInteractOuts.call(props, event);
      if (!event.defaultPrevented) {
        hasInteractedOutsideRef.current = true;
        if (event.detail.originalEvent.type === "pointerdown")
          hasPointerDownOutsideRef.current = true;
      }
      const target = event.target;
      const targetIsTrigger = (_context$triggerRef$c3 = context.triggerRef.current) === null || _context$triggerRef$c3 === void 0 ? void 0 : _context$triggerRef$c3.contains(target);
      if (targetIsTrigger)
        event.preventDefault();
      if (event.detail.originalEvent.type === "focusin" && hasPointerDownOutsideRef.current)
        event.preventDefault();
    }
  }));
});
var $5d3850c4d0b4e6c7$var$DialogContentImpl = (0, import_react.forwardRef)((props, forwardedRef) => {
  const { __scopeDialog, trapFocus, onOpenAutoFocus, onCloseAutoFocus, ...contentProps } = props;
  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$CONTENT_NAME, __scopeDialog);
  const contentRef = (0, import_react.useRef)(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, contentRef);
  $3db38b7d1fb3fe6a$export$b7ece24a22aeda8c();
  return (0, import_react.createElement)(import_react.Fragment, null, (0, import_react.createElement)($d3863c46a17e8a28$export$20e40289641fbbb6, {
    asChild: true,
    loop: true,
    trapped: trapFocus,
    onMountAutoFocus: onOpenAutoFocus,
    onUnmountAutoFocus: onCloseAutoFocus
  }, (0, import_react.createElement)($5cb92bef7577960e$export$177fb62ff3ec1f22, _extends({
    role: "dialog",
    id: context.contentId,
    "aria-describedby": context.descriptionId,
    "aria-labelledby": context.titleId,
    "data-state": $5d3850c4d0b4e6c7$var$getState(context.open)
  }, contentProps, {
    ref: composedRefs,
    onDismiss: () => context.onOpenChange(false)
  }))), false);
});
var $5d3850c4d0b4e6c7$var$TITLE_NAME = "DialogTitle";
var $5d3850c4d0b4e6c7$export$16f7638e4a34b909 = (0, import_react.forwardRef)((props, forwardedRef) => {
  const { __scopeDialog, ...titleProps } = props;
  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$TITLE_NAME, __scopeDialog);
  return (0, import_react.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.h2, _extends({
    id: context.titleId
  }, titleProps, {
    ref: forwardedRef
  }));
});
Object.assign($5d3850c4d0b4e6c7$export$16f7638e4a34b909, {
  displayName: $5d3850c4d0b4e6c7$var$TITLE_NAME
});
var $5d3850c4d0b4e6c7$var$DESCRIPTION_NAME = "DialogDescription";
var $5d3850c4d0b4e6c7$export$94e94c2ec2c954d5 = (0, import_react.forwardRef)((props, forwardedRef) => {
  const { __scopeDialog, ...descriptionProps } = props;
  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$DESCRIPTION_NAME, __scopeDialog);
  return (0, import_react.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.p, _extends({
    id: context.descriptionId
  }, descriptionProps, {
    ref: forwardedRef
  }));
});
Object.assign($5d3850c4d0b4e6c7$export$94e94c2ec2c954d5, {
  displayName: $5d3850c4d0b4e6c7$var$DESCRIPTION_NAME
});
var $5d3850c4d0b4e6c7$var$CLOSE_NAME = "DialogClose";
var $5d3850c4d0b4e6c7$export$fba2fb7cd781b7ac = (0, import_react.forwardRef)((props, forwardedRef) => {
  const { __scopeDialog, ...closeProps } = props;
  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$CLOSE_NAME, __scopeDialog);
  return (0, import_react.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.button, _extends({
    type: "button"
  }, closeProps, {
    ref: forwardedRef,
    onClick: $e42e1063c40fb3ef$export$b9ecd428b558ff10(
      props.onClick,
      () => context.onOpenChange(false)
    )
  }));
});
Object.assign($5d3850c4d0b4e6c7$export$fba2fb7cd781b7ac, {
  displayName: $5d3850c4d0b4e6c7$var$CLOSE_NAME
});
function $5d3850c4d0b4e6c7$var$getState(open) {
  return open ? "open" : "closed";
}
var $5d3850c4d0b4e6c7$var$TITLE_WARNING_NAME = "DialogTitleWarning";
var [$5d3850c4d0b4e6c7$export$69b62a49393917d6, $5d3850c4d0b4e6c7$var$useWarningContext] = $c512c27ab02ef895$export$fd42f52fd3ae1109($5d3850c4d0b4e6c7$var$TITLE_WARNING_NAME, {
  contentName: $5d3850c4d0b4e6c7$var$CONTENT_NAME,
  titleName: $5d3850c4d0b4e6c7$var$TITLE_NAME,
  docsSlug: "dialog"
});
var $5d3850c4d0b4e6c7$export$be92b6f5f03c0fe9 = $5d3850c4d0b4e6c7$export$3ddf2d174ce01153;
var $5d3850c4d0b4e6c7$export$41fb9f06171c75f4 = $5d3850c4d0b4e6c7$export$2e1e1122cf0cba88;
var $5d3850c4d0b4e6c7$export$602eac185826482c = $5d3850c4d0b4e6c7$export$dad7c95542bacce0;
var $5d3850c4d0b4e6c7$export$c6fdb837b070b4ff = $5d3850c4d0b4e6c7$export$bd1d06c79be19e17;
var $5d3850c4d0b4e6c7$export$7c6e2c02157bb7d2 = $5d3850c4d0b4e6c7$export$b6d9565de1e068cf;
var $5d3850c4d0b4e6c7$export$f99233281efd08a0 = $5d3850c4d0b4e6c7$export$16f7638e4a34b909;
var $5d3850c4d0b4e6c7$export$393edc798c47379d = $5d3850c4d0b4e6c7$export$94e94c2ec2c954d5;
var $5d3850c4d0b4e6c7$export$f39c2d165cd861fe = $5d3850c4d0b4e6c7$export$fba2fb7cd781b7ac;

// node_modules/@radix-ui/react-visually-hidden/dist/index.mjs
var import_react2 = __toESM(require_react(), 1);
var $ea1ef594cf570d83$var$NAME = "VisuallyHidden";
var $ea1ef594cf570d83$export$439d29a4e110a164 = (0, import_react2.forwardRef)((props, forwardedRef) => {
  return (0, import_react2.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.span, _extends({}, props, {
    ref: forwardedRef,
    style: {
      // See: https://github.com/twbs/bootstrap/blob/master/scss/mixins/_screen-reader.scss
      position: "absolute",
      border: 0,
      width: 1,
      height: 1,
      padding: 0,
      margin: -1,
      overflow: "hidden",
      clip: "rect(0, 0, 0, 0)",
      whiteSpace: "nowrap",
      wordWrap: "normal",
      ...props.style
    }
  }));
});
Object.assign($ea1ef594cf570d83$export$439d29a4e110a164, {
  displayName: $ea1ef594cf570d83$var$NAME
});
var $ea1ef594cf570d83$export$be92b6f5f03c0fe9 = $ea1ef594cf570d83$export$439d29a4e110a164;

// node_modules/@graphiql/react/dist/index.mjs
var import_markdown_it = __toESM(require_markdown_it(), 1);

// node_modules/framer-motion/dist/es/motion/index.mjs
var React2 = __toESM(require_react(), 1);
var import_react18 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/motion/features/use-features.mjs
var React = __toESM(require_react(), 1);
var import_react4 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/utils/process.mjs
var defaultEnvironment = "production";
var env = typeof process === "undefined" || process.env === void 0 ? defaultEnvironment : "development";

// node_modules/framer-motion/dist/es/motion/features/definitions.mjs
var createDefinition = function(propNames) {
  return {
    isEnabled: function(props) {
      return propNames.some(function(name) {
        return !!props[name];
      });
    }
  };
};
var featureDefinitions = {
  measureLayout: createDefinition(["layout", "layoutId", "drag"]),
  animation: createDefinition([
    "animate",
    "exit",
    "variants",
    "whileHover",
    "whileTap",
    "whileFocus",
    "whileDrag",
    "whileInView"
  ]),
  exit: createDefinition(["exit"]),
  drag: createDefinition(["drag", "dragControls"]),
  focus: createDefinition(["whileFocus"]),
  hover: createDefinition(["whileHover", "onHoverStart", "onHoverEnd"]),
  tap: createDefinition(["whileTap", "onTap", "onTapStart", "onTapCancel"]),
  pan: createDefinition([
    "onPan",
    "onPanStart",
    "onPanSessionStart",
    "onPanEnd"
  ]),
  inView: createDefinition([
    "whileInView",
    "onViewportEnter",
    "onViewportLeave"
  ])
};
function loadFeatures(features) {
  for (var key in features) {
    if (features[key] === null)
      continue;
    if (key === "projectionNodeConstructor") {
      featureDefinitions.projectionNodeConstructor = features[key];
    } else {
      featureDefinitions[key].Component = features[key];
    }
  }
}

// node_modules/hey-listen/dist/hey-listen.es.js
var warning = function() {
};
var invariant = function() {
};
if (true) {
  warning = function(check, message) {
    if (!check && typeof console !== "undefined") {
      console.warn(message);
    }
  };
  invariant = function(check, message) {
    if (!check) {
      throw new Error(message);
    }
  };
}

// node_modules/framer-motion/dist/es/context/LazyContext.mjs
var import_react3 = __toESM(require_react(), 1);
var LazyContext = (0, import_react3.createContext)({ strict: false });

// node_modules/framer-motion/dist/es/motion/features/use-features.mjs
var featureNames = Object.keys(featureDefinitions);
var numFeatures = featureNames.length;
function useFeatures(props, visualElement2, preloadedFeatures) {
  var features = [];
  var lazyContext = (0, import_react4.useContext)(LazyContext);
  if (!visualElement2)
    return null;
  if (env !== "production" && preloadedFeatures && lazyContext.strict) {
    invariant(false, "You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.");
  }
  for (var i9 = 0; i9 < numFeatures; i9++) {
    var name_1 = featureNames[i9];
    var _a = featureDefinitions[name_1], isEnabled = _a.isEnabled, Component = _a.Component;
    if (isEnabled(props) && Component) {
      features.push(React.createElement(Component, __assign({ key: name_1 }, props, { visualElement: visualElement2 })));
    }
  }
  return features;
}

// node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs
var import_react5 = __toESM(require_react(), 1);
var MotionConfigContext = (0, import_react5.createContext)({
  transformPagePoint: function(p7) {
    return p7;
  },
  isStatic: false,
  reducedMotion: "never"
});

// node_modules/framer-motion/dist/es/context/MotionContext/index.mjs
var import_react6 = __toESM(require_react(), 1);
var MotionContext = (0, import_react6.createContext)({});
function useVisualElementContext() {
  return (0, import_react6.useContext)(MotionContext).visualElement;
}

// node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs
var import_react10 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/context/PresenceContext.mjs
var import_react7 = __toESM(require_react(), 1);
var PresenceContext = (0, import_react7.createContext)(null);

// node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs
var import_react8 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/utils/is-browser.mjs
var isBrowser = typeof document !== "undefined";

// node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs
var useIsomorphicLayoutEffect = isBrowser ? import_react8.useLayoutEffect : import_react8.useEffect;

// node_modules/framer-motion/dist/es/utils/use-reduced-motion.mjs
var import_react9 = __toESM(require_react(), 1);
var prefersReducedMotion = { current: null };
var hasDetected = false;
function initPrefersReducedMotion() {
  hasDetected = true;
  if (!isBrowser)
    return;
  if (window.matchMedia) {
    var motionMediaQuery_1 = window.matchMedia("(prefers-reduced-motion)");
    var setReducedMotionPreferences = function() {
      return prefersReducedMotion.current = motionMediaQuery_1.matches;
    };
    motionMediaQuery_1.addListener(setReducedMotionPreferences);
    setReducedMotionPreferences();
  } else {
    prefersReducedMotion.current = false;
  }
}
function useReducedMotion() {
  !hasDetected && initPrefersReducedMotion();
  var _a = __read((0, import_react9.useState)(prefersReducedMotion.current), 1), shouldReduceMotion = _a[0];
  return shouldReduceMotion;
}
function useReducedMotionConfig() {
  var reducedMotionPreference = useReducedMotion();
  var reducedMotion = (0, import_react9.useContext)(MotionConfigContext).reducedMotion;
  if (reducedMotion === "never") {
    return false;
  } else if (reducedMotion === "always") {
    return true;
  } else {
    return reducedMotionPreference;
  }
}

// node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs
function useVisualElement(Component, visualState, props, createVisualElement) {
  var lazyContext = (0, import_react10.useContext)(LazyContext);
  var parent = useVisualElementContext();
  var presenceContext = (0, import_react10.useContext)(PresenceContext);
  var shouldReduceMotion = useReducedMotionConfig();
  var visualElementRef = (0, import_react10.useRef)(void 0);
  if (!createVisualElement)
    createVisualElement = lazyContext.renderer;
  if (!visualElementRef.current && createVisualElement) {
    visualElementRef.current = createVisualElement(Component, {
      visualState,
      parent,
      props,
      presenceId: presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.id,
      blockInitialAnimation: (presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.initial) === false,
      shouldReduceMotion
    });
  }
  var visualElement2 = visualElementRef.current;
  useIsomorphicLayoutEffect(function() {
    visualElement2 === null || visualElement2 === void 0 ? void 0 : visualElement2.syncRender();
  });
  (0, import_react10.useEffect)(function() {
    var _a;
    (_a = visualElement2 === null || visualElement2 === void 0 ? void 0 : visualElement2.animationState) === null || _a === void 0 ? void 0 : _a.animateChanges();
  });
  useIsomorphicLayoutEffect(function() {
    return function() {
      return visualElement2 === null || visualElement2 === void 0 ? void 0 : visualElement2.notifyUnmount();
    };
  }, []);
  return visualElement2;
}

// node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs
var import_react11 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/utils/is-ref-object.mjs
function isRefObject(ref) {
  return typeof ref === "object" && Object.prototype.hasOwnProperty.call(ref, "current");
}

// node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs
function useMotionRef(visualState, visualElement2, externalRef) {
  return (0, import_react11.useCallback)(
    function(instance) {
      var _a;
      instance && ((_a = visualState.mount) === null || _a === void 0 ? void 0 : _a.call(visualState, instance));
      if (visualElement2) {
        instance ? visualElement2.mount(instance) : visualElement2.unmount();
      }
      if (externalRef) {
        if (typeof externalRef === "function") {
          externalRef(instance);
        } else if (isRefObject(externalRef)) {
          externalRef.current = instance;
        }
      }
    },
    /**
     * Only pass a new ref callback to React if we've received a visual element
     * factory. Otherwise we'll be mounting/remounting every time externalRef
     * or other dependencies change.
     */
    [visualElement2]
  );
}

// node_modules/framer-motion/dist/es/context/MotionContext/create.mjs
var import_react12 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/render/utils/variants.mjs
function isVariantLabels(v6) {
  return Array.isArray(v6);
}
function isVariantLabel(v6) {
  return typeof v6 === "string" || isVariantLabels(v6);
}
function getCurrent(visualElement2) {
  var current = {};
  visualElement2.forEachValue(function(value, key) {
    return current[key] = value.get();
  });
  return current;
}
function getVelocity(visualElement2) {
  var velocity = {};
  visualElement2.forEachValue(function(value, key) {
    return velocity[key] = value.getVelocity();
  });
  return velocity;
}
function resolveVariantFromProps(props, definition, custom, currentValues, currentVelocity) {
  var _a;
  if (currentValues === void 0) {
    currentValues = {};
  }
  if (currentVelocity === void 0) {
    currentVelocity = {};
  }
  if (typeof definition === "function") {
    definition = definition(custom !== null && custom !== void 0 ? custom : props.custom, currentValues, currentVelocity);
  }
  if (typeof definition === "string") {
    definition = (_a = props.variants) === null || _a === void 0 ? void 0 : _a[definition];
  }
  if (typeof definition === "function") {
    definition = definition(custom !== null && custom !== void 0 ? custom : props.custom, currentValues, currentVelocity);
  }
  return definition;
}
function resolveVariant(visualElement2, definition, custom) {
  var props = visualElement2.getProps();
  return resolveVariantFromProps(props, definition, custom !== null && custom !== void 0 ? custom : props.custom, getCurrent(visualElement2), getVelocity(visualElement2));
}
function checkIfControllingVariants(props) {
  var _a;
  return typeof ((_a = props.animate) === null || _a === void 0 ? void 0 : _a.start) === "function" || isVariantLabel(props.initial) || isVariantLabel(props.animate) || isVariantLabel(props.whileHover) || isVariantLabel(props.whileDrag) || isVariantLabel(props.whileTap) || isVariantLabel(props.whileFocus) || isVariantLabel(props.exit);
}
function checkIfVariantNode(props) {
  return Boolean(checkIfControllingVariants(props) || props.variants);
}

// node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs
function getCurrentTreeVariants(props, context) {
  if (checkIfControllingVariants(props)) {
    var initial = props.initial, animate4 = props.animate;
    return {
      initial: initial === false || isVariantLabel(initial) ? initial : void 0,
      animate: isVariantLabel(animate4) ? animate4 : void 0
    };
  }
  return props.inherit !== false ? context : {};
}

// node_modules/framer-motion/dist/es/context/MotionContext/create.mjs
function useCreateMotionContext(props) {
  var _a = getCurrentTreeVariants(props, (0, import_react12.useContext)(MotionContext)), initial = _a.initial, animate4 = _a.animate;
  return (0, import_react12.useMemo)(function() {
    return { initial, animate: animate4 };
  }, [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate4)]);
}
function variantLabelsAsDependency(prop) {
  return Array.isArray(prop) ? prop.join(" ") : prop;
}

// node_modules/framer-motion/dist/es/utils/use-constant.mjs
var import_react13 = __toESM(require_react(), 1);
function useConstant(init) {
  var ref = (0, import_react13.useRef)(null);
  if (ref.current === null) {
    ref.current = init();
  }
  return ref.current;
}

// node_modules/framer-motion/dist/es/projection/node/state.mjs
var globalProjectionState = {
  /**
   * Global flag as to whether the tree has animated since the last time
   * we resized the window
   */
  hasAnimatedSinceResize: true,
  /**
   * We set this to true once, on the first update. Any nodes added to the tree beyond that
   * update will be given a `data-projection-id` attribute.
   */
  hasEverUpdated: false
};

// node_modules/framer-motion/dist/es/projection/node/id.mjs
var id = 1;
function useProjectionId() {
  return useConstant(function() {
    if (globalProjectionState.hasEverUpdated) {
      return id++;
    }
  });
}

// node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs
var import_react14 = __toESM(require_react(), 1);
var LayoutGroupContext = (0, import_react14.createContext)({});

// node_modules/framer-motion/dist/es/motion/features/use-projection.mjs
var import_react16 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs
var import_react15 = __toESM(require_react(), 1);
var SwitchLayoutGroupContext = (0, import_react15.createContext)({});

// node_modules/framer-motion/dist/es/motion/features/use-projection.mjs
function useProjection(projectionId, _a, visualElement2, ProjectionNodeConstructor) {
  var _b;
  var layoutId = _a.layoutId, layout = _a.layout, drag2 = _a.drag, dragConstraints = _a.dragConstraints, layoutScroll = _a.layoutScroll;
  var initialPromotionConfig = (0, import_react16.useContext)(SwitchLayoutGroupContext);
  if (!ProjectionNodeConstructor || !visualElement2 || (visualElement2 === null || visualElement2 === void 0 ? void 0 : visualElement2.projection)) {
    return;
  }
  visualElement2.projection = new ProjectionNodeConstructor(projectionId, visualElement2.getLatestValues(), (_b = visualElement2.parent) === null || _b === void 0 ? void 0 : _b.projection);
  visualElement2.projection.setOptions({
    layoutId,
    layout,
    alwaysMeasureLayout: Boolean(drag2) || dragConstraints && isRefObject(dragConstraints),
    visualElement: visualElement2,
    scheduleRender: function() {
      return visualElement2.scheduleRender();
    },
    /**
     * TODO: Update options in an effect. This could be tricky as it'll be too late
     * to update by the time layout animations run.
     * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,
     * ensuring it gets called if there's no potential layout animations.
     *
     */
    animationType: typeof layout === "string" ? layout : "both",
    initialPromotionConfig,
    layoutScroll
  });
}

// node_modules/framer-motion/dist/es/motion/utils/VisualElementHandler.mjs
var import_react17 = __toESM(require_react(), 1);
var VisualElementHandler = (
  /** @class */
  function(_super) {
    __extends(VisualElementHandler2, _super);
    function VisualElementHandler2() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    VisualElementHandler2.prototype.getSnapshotBeforeUpdate = function() {
      this.updateProps();
      return null;
    };
    VisualElementHandler2.prototype.componentDidUpdate = function() {
    };
    VisualElementHandler2.prototype.updateProps = function() {
      var _a = this.props, visualElement2 = _a.visualElement, props = _a.props;
      if (visualElement2)
        visualElement2.setProps(props);
    };
    VisualElementHandler2.prototype.render = function() {
      return this.props.children;
    };
    return VisualElementHandler2;
  }(import_react17.default.Component)
);

// node_modules/framer-motion/dist/es/motion/index.mjs
function createMotionComponent(_a) {
  var preloadedFeatures = _a.preloadedFeatures, createVisualElement = _a.createVisualElement, projectionNodeConstructor = _a.projectionNodeConstructor, useRender = _a.useRender, useVisualState2 = _a.useVisualState, Component = _a.Component;
  preloadedFeatures && loadFeatures(preloadedFeatures);
  function MotionComponent(props, externalRef) {
    var layoutId = useLayoutId(props);
    props = __assign(__assign({}, props), { layoutId });
    var config = (0, import_react18.useContext)(MotionConfigContext);
    var features = null;
    var context = useCreateMotionContext(props);
    var projectionId = config.isStatic ? void 0 : useProjectionId();
    var visualState = useVisualState2(props, config.isStatic);
    if (!config.isStatic && isBrowser) {
      context.visualElement = useVisualElement(Component, visualState, __assign(__assign({}, config), props), createVisualElement);
      useProjection(projectionId, props, context.visualElement, projectionNodeConstructor || featureDefinitions.projectionNodeConstructor);
      features = useFeatures(props, context.visualElement, preloadedFeatures);
    }
    return React2.createElement(
      VisualElementHandler,
      { visualElement: context.visualElement, props: __assign(__assign({}, config), props) },
      features,
      React2.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, config.isStatic, context.visualElement))
    );
  }
  return (0, import_react18.forwardRef)(MotionComponent);
}
function useLayoutId(_a) {
  var _b;
  var layoutId = _a.layoutId;
  var layoutGroupId = (_b = (0, import_react18.useContext)(LayoutGroupContext)) === null || _b === void 0 ? void 0 : _b.id;
  return layoutGroupId && layoutId !== void 0 ? layoutGroupId + "-" + layoutId : layoutId;
}

// node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs
function createMotionProxy(createConfig) {
  function custom(Component, customMotionComponentConfig) {
    if (customMotionComponentConfig === void 0) {
      customMotionComponentConfig = {};
    }
    return createMotionComponent(createConfig(Component, customMotionComponentConfig));
  }
  if (typeof Proxy === "undefined") {
    return custom;
  }
  var componentCache = /* @__PURE__ */ new Map();
  return new Proxy(custom, {
    /**
     * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.
     * The prop name is passed through as `key` and we can use that to generate a `motion`
     * DOM component with that name.
     */
    get: function(_target, key) {
      if (!componentCache.has(key)) {
        componentCache.set(key, custom(key));
      }
      return componentCache.get(key);
    }
  });
}

// node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs
var lowercaseSVGElements = [
  "animate",
  "circle",
  "defs",
  "desc",
  "ellipse",
  "g",
  "image",
  "line",
  "filter",
  "marker",
  "mask",
  "metadata",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "rect",
  "stop",
  "svg",
  "switch",
  "symbol",
  "text",
  "tspan",
  "use",
  "view"
];

// node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs
function isSVGComponent(Component) {
  if (
    /**
     * If it's not a string, it's a custom React component. Currently we only support
     * HTML custom React components.
     */
    typeof Component !== "string" || /**
     * If it contains a dash, the element is a custom HTML webcomponent.
     */
    Component.includes("-")
  ) {
    return false;
  } else if (
    /**
     * If it's in our list of lowercase SVG tags, it's an SVG component
     */
    lowercaseSVGElements.indexOf(Component) > -1 || /**
     * If it contains a capital letter, it's an SVG component
     */
    /[A-Z]/.test(Component)
  ) {
    return true;
  }
  return false;
}

// node_modules/framer-motion/dist/es/render/dom/use-render.mjs
var import_react21 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/render/html/use-props.mjs
var import_react19 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs
var scaleCorrectors = {};
function addScaleCorrector(correctors) {
  Object.assign(scaleCorrectors, correctors);
}

// node_modules/framer-motion/dist/es/render/html/utils/transform.mjs
var transformAxes = ["", "X", "Y", "Z"];
var order = ["translate", "scale", "rotate", "skew"];
var transformProps = ["transformPerspective", "x", "y", "z"];
order.forEach(function(operationKey) {
  return transformAxes.forEach(function(axesKey) {
    return transformProps.push(operationKey + axesKey);
  });
});
function sortTransformProps(a12, b9) {
  return transformProps.indexOf(a12) - transformProps.indexOf(b9);
}
var transformPropSet = new Set(transformProps);
function isTransformProp(key) {
  return transformPropSet.has(key);
}
var transformOriginProps = /* @__PURE__ */ new Set(["originX", "originY", "originZ"]);
function isTransformOriginProp(key) {
  return transformOriginProps.has(key);
}

// node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs
function isForcedMotionValue(key, _a) {
  var layout = _a.layout, layoutId = _a.layoutId;
  return isTransformProp(key) || isTransformOriginProp(key) || (layout || layoutId !== void 0) && (!!scaleCorrectors[key] || key === "opacity");
}

// node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs
var isMotionValue = function(value) {
  return Boolean(value !== null && typeof value === "object" && value.getVelocity);
};

// node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs
var translateAlias = {
  x: "translateX",
  y: "translateY",
  z: "translateZ",
  transformPerspective: "perspective"
};
function buildTransform(_a, _b, transformIsDefault, transformTemplate) {
  var transform2 = _a.transform, transformKeys2 = _a.transformKeys;
  var _c = _b.enableHardwareAcceleration, enableHardwareAcceleration = _c === void 0 ? true : _c, _d = _b.allowTransformNone, allowTransformNone = _d === void 0 ? true : _d;
  var transformString = "";
  transformKeys2.sort(sortTransformProps);
  var transformHasZ = false;
  var numTransformKeys = transformKeys2.length;
  for (var i9 = 0; i9 < numTransformKeys; i9++) {
    var key = transformKeys2[i9];
    transformString += "".concat(translateAlias[key] || key, "(").concat(transform2[key], ") ");
    if (key === "z")
      transformHasZ = true;
  }
  if (!transformHasZ && enableHardwareAcceleration) {
    transformString += "translateZ(0)";
  } else {
    transformString = transformString.trim();
  }
  if (transformTemplate) {
    transformString = transformTemplate(transform2, transformIsDefault ? "" : transformString);
  } else if (allowTransformNone && transformIsDefault) {
    transformString = "none";
  }
  return transformString;
}
function buildTransformOrigin(_a) {
  var _b = _a.originX, originX = _b === void 0 ? "50%" : _b, _c = _a.originY, originY = _c === void 0 ? "50%" : _c, _d = _a.originZ, originZ = _d === void 0 ? 0 : _d;
  return "".concat(originX, " ").concat(originY, " ").concat(originZ);
}

// node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs
function isCSSVariable(key) {
  return key.startsWith("--");
}

// node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs
var getValueAsType = function(value, type) {
  return type && typeof value === "number" ? type.transform(value) : value;
};

// node_modules/style-value-types/dist/es/utils.mjs
var clamp = (min, max) => (v6) => Math.max(Math.min(v6, max), min);
var sanitize = (v6) => v6 % 1 ? Number(v6.toFixed(5)) : v6;
var floatRegex = /(-)?([\d]*\.?[\d])+/g;
var colorRegex = /(#[0-9a-f]{6}|#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\((-?[\d\.]+%?[,\s]+){2,3}\s*\/*\s*[\d\.]+%?\))/gi;
var singleColorRegex = /^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\((-?[\d\.]+%?[,\s]+){2,3}\s*\/*\s*[\d\.]+%?\))$/i;
function isString(v6) {
  return typeof v6 === "string";
}

// node_modules/style-value-types/dist/es/numbers/index.mjs
var number = {
  test: (v6) => typeof v6 === "number",
  parse: parseFloat,
  transform: (v6) => v6
};
var alpha = Object.assign(Object.assign({}, number), { transform: clamp(0, 1) });
var scale = Object.assign(Object.assign({}, number), { default: 1 });

// node_modules/style-value-types/dist/es/numbers/units.mjs
var createUnitType = (unit) => ({
  test: (v6) => isString(v6) && v6.endsWith(unit) && v6.split(" ").length === 1,
  parse: parseFloat,
  transform: (v6) => `${v6}${unit}`
});
var degrees = createUnitType("deg");
var percent = createUnitType("%");
var px = createUnitType("px");
var vh = createUnitType("vh");
var vw = createUnitType("vw");
var progressPercentage = Object.assign(Object.assign({}, percent), { parse: (v6) => percent.parse(v6) / 100, transform: (v6) => percent.transform(v6 * 100) });

// node_modules/style-value-types/dist/es/color/utils.mjs
var isColorString = (type, testProp) => (v6) => {
  return Boolean(isString(v6) && singleColorRegex.test(v6) && v6.startsWith(type) || testProp && Object.prototype.hasOwnProperty.call(v6, testProp));
};
var splitColor = (aName, bName, cName) => (v6) => {
  if (!isString(v6))
    return v6;
  const [a12, b9, c14, alpha2] = v6.match(floatRegex);
  return {
    [aName]: parseFloat(a12),
    [bName]: parseFloat(b9),
    [cName]: parseFloat(c14),
    alpha: alpha2 !== void 0 ? parseFloat(alpha2) : 1
  };
};

// node_modules/style-value-types/dist/es/color/hsla.mjs
var hsla = {
  test: isColorString("hsl", "hue"),
  parse: splitColor("hue", "saturation", "lightness"),
  transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {
    return "hsla(" + Math.round(hue) + ", " + percent.transform(sanitize(saturation)) + ", " + percent.transform(sanitize(lightness)) + ", " + sanitize(alpha.transform(alpha$1)) + ")";
  }
};

// node_modules/style-value-types/dist/es/color/rgba.mjs
var clampRgbUnit = clamp(0, 255);
var rgbUnit = Object.assign(Object.assign({}, number), { transform: (v6) => Math.round(clampRgbUnit(v6)) });
var rgba = {
  test: isColorString("rgb", "red"),
  parse: splitColor("red", "green", "blue"),
  transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => "rgba(" + rgbUnit.transform(red) + ", " + rgbUnit.transform(green) + ", " + rgbUnit.transform(blue) + ", " + sanitize(alpha.transform(alpha$1)) + ")"
};

// node_modules/style-value-types/dist/es/color/hex.mjs
function parseHex(v6) {
  let r9 = "";
  let g5 = "";
  let b9 = "";
  let a12 = "";
  if (v6.length > 5) {
    r9 = v6.substr(1, 2);
    g5 = v6.substr(3, 2);
    b9 = v6.substr(5, 2);
    a12 = v6.substr(7, 2);
  } else {
    r9 = v6.substr(1, 1);
    g5 = v6.substr(2, 1);
    b9 = v6.substr(3, 1);
    a12 = v6.substr(4, 1);
    r9 += r9;
    g5 += g5;
    b9 += b9;
    a12 += a12;
  }
  return {
    red: parseInt(r9, 16),
    green: parseInt(g5, 16),
    blue: parseInt(b9, 16),
    alpha: a12 ? parseInt(a12, 16) / 255 : 1
  };
}
var hex = {
  test: isColorString("#"),
  parse: parseHex,
  transform: rgba.transform
};

// node_modules/style-value-types/dist/es/color/index.mjs
var color = {
  test: (v6) => rgba.test(v6) || hex.test(v6) || hsla.test(v6),
  parse: (v6) => {
    if (rgba.test(v6)) {
      return rgba.parse(v6);
    } else if (hsla.test(v6)) {
      return hsla.parse(v6);
    } else {
      return hex.parse(v6);
    }
  },
  transform: (v6) => {
    return isString(v6) ? v6 : v6.hasOwnProperty("red") ? rgba.transform(v6) : hsla.transform(v6);
  }
};

// node_modules/style-value-types/dist/es/complex/index.mjs
var colorToken = "${c}";
var numberToken = "${n}";
function test(v6) {
  var _a, _b, _c, _d;
  return isNaN(v6) && isString(v6) && ((_b = (_a = v6.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0) + ((_d = (_c = v6.match(colorRegex)) === null || _c === void 0 ? void 0 : _c.length) !== null && _d !== void 0 ? _d : 0) > 0;
}
function analyse(v6) {
  if (typeof v6 === "number")
    v6 = `${v6}`;
  const values = [];
  let numColors = 0;
  const colors = v6.match(colorRegex);
  if (colors) {
    numColors = colors.length;
    v6 = v6.replace(colorRegex, colorToken);
    values.push(...colors.map(color.parse));
  }
  const numbers = v6.match(floatRegex);
  if (numbers) {
    v6 = v6.replace(floatRegex, numberToken);
    values.push(...numbers.map(number.parse));
  }
  return { values, numColors, tokenised: v6 };
}
function parse2(v6) {
  return analyse(v6).values;
}
function createTransformer(v6) {
  const { values, numColors, tokenised } = analyse(v6);
  const numValues = values.length;
  return (v7) => {
    let output = tokenised;
    for (let i9 = 0; i9 < numValues; i9++) {
      output = output.replace(i9 < numColors ? colorToken : numberToken, i9 < numColors ? color.transform(v7[i9]) : sanitize(v7[i9]));
    }
    return output;
  };
}
var convertNumbersToZero = (v6) => typeof v6 === "number" ? 0 : v6;
function getAnimatableNone(v6) {
  const parsed = parse2(v6);
  const transformer = createTransformer(v6);
  return transformer(parsed.map(convertNumbersToZero));
}
var complex = { test, parse: parse2, createTransformer, getAnimatableNone };

// node_modules/style-value-types/dist/es/complex/filter.mjs
var maxDefaults = /* @__PURE__ */ new Set(["brightness", "contrast", "saturate", "opacity"]);
function applyDefaultFilter(v6) {
  let [name, value] = v6.slice(0, -1).split("(");
  if (name === "drop-shadow")
    return v6;
  const [number2] = value.match(floatRegex) || [];
  if (!number2)
    return v6;
  const unit = value.replace(number2, "");
  let defaultValue = maxDefaults.has(name) ? 1 : 0;
  if (number2 !== value)
    defaultValue *= 100;
  return name + "(" + defaultValue + unit + ")";
}
var functionRegex = /([a-z-]*)\(.*?\)/g;
var filter = Object.assign(Object.assign({}, complex), { getAnimatableNone: (v6) => {
  const functions = v6.match(functionRegex);
  return functions ? functions.map(applyDefaultFilter).join(" ") : v6;
} });

// node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs
var int = __assign(__assign({}, number), { transform: Math.round });

// node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs
var numberValueTypes = {
  // Border props
  borderWidth: px,
  borderTopWidth: px,
  borderRightWidth: px,
  borderBottomWidth: px,
  borderLeftWidth: px,
  borderRadius: px,
  radius: px,
  borderTopLeftRadius: px,
  borderTopRightRadius: px,
  borderBottomRightRadius: px,
  borderBottomLeftRadius: px,
  // Positioning props
  width: px,
  maxWidth: px,
  height: px,
  maxHeight: px,
  size: px,
  top: px,
  right: px,
  bottom: px,
  left: px,
  // Spacing props
  padding: px,
  paddingTop: px,
  paddingRight: px,
  paddingBottom: px,
  paddingLeft: px,
  margin: px,
  marginTop: px,
  marginRight: px,
  marginBottom: px,
  marginLeft: px,
  // Transform props
  rotate: degrees,
  rotateX: degrees,
  rotateY: degrees,
  rotateZ: degrees,
  scale,
  scaleX: scale,
  scaleY: scale,
  scaleZ: scale,
  skew: degrees,
  skewX: degrees,
  skewY: degrees,
  distance: px,
  translateX: px,
  translateY: px,
  translateZ: px,
  x: px,
  y: px,
  z: px,
  perspective: px,
  transformPerspective: px,
  opacity: alpha,
  originX: progressPercentage,
  originY: progressPercentage,
  originZ: px,
  // Misc
  zIndex: int,
  // SVG
  fillOpacity: alpha,
  strokeOpacity: alpha,
  numOctaves: int
};

// node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs
function buildHTMLStyles(state, latestValues, options, transformTemplate) {
  var _a;
  var style2 = state.style, vars = state.vars, transform2 = state.transform, transformKeys2 = state.transformKeys, transformOrigin = state.transformOrigin;
  transformKeys2.length = 0;
  var hasTransform2 = false;
  var hasTransformOrigin = false;
  var transformIsNone = true;
  for (var key in latestValues) {
    var value = latestValues[key];
    if (isCSSVariable(key)) {
      vars[key] = value;
      continue;
    }
    var valueType = numberValueTypes[key];
    var valueAsType = getValueAsType(value, valueType);
    if (isTransformProp(key)) {
      hasTransform2 = true;
      transform2[key] = valueAsType;
      transformKeys2.push(key);
      if (!transformIsNone)
        continue;
      if (value !== ((_a = valueType.default) !== null && _a !== void 0 ? _a : 0))
        transformIsNone = false;
    } else if (isTransformOriginProp(key)) {
      transformOrigin[key] = valueAsType;
      hasTransformOrigin = true;
    } else {
      style2[key] = valueAsType;
    }
  }
  if (hasTransform2) {
    style2.transform = buildTransform(state, options, transformIsNone, transformTemplate);
  } else if (transformTemplate) {
    style2.transform = transformTemplate({}, "");
  } else if (!latestValues.transform && style2.transform) {
    style2.transform = "none";
  }
  if (hasTransformOrigin) {
    style2.transformOrigin = buildTransformOrigin(transformOrigin);
  }
}

// node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs
var createHtmlRenderState = function() {
  return {
    style: {},
    transform: {},
    transformKeys: [],
    transformOrigin: {},
    vars: {}
  };
};

// node_modules/framer-motion/dist/es/render/html/use-props.mjs
function copyRawValuesOnly(target, source, props) {
  for (var key in source) {
    if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {
      target[key] = source[key];
    }
  }
}
function useInitialMotionValues(_a, visualState, isStatic) {
  var transformTemplate = _a.transformTemplate;
  return (0, import_react19.useMemo)(function() {
    var state = createHtmlRenderState();
    buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);
    var vars = state.vars, style2 = state.style;
    return __assign(__assign({}, vars), style2);
  }, [visualState]);
}
function useStyle(props, visualState, isStatic) {
  var styleProp = props.style || {};
  var style2 = {};
  copyRawValuesOnly(style2, styleProp, props);
  Object.assign(style2, useInitialMotionValues(props, visualState, isStatic));
  if (props.transformValues) {
    style2 = props.transformValues(style2);
  }
  return style2;
}
function useHTMLProps(props, visualState, isStatic) {
  var htmlProps = {};
  var style2 = useStyle(props, visualState, isStatic);
  if (Boolean(props.drag) && props.dragListener !== false) {
    htmlProps.draggable = false;
    style2.userSelect = style2.WebkitUserSelect = style2.WebkitTouchCallout = "none";
    style2.touchAction = props.drag === true ? "none" : "pan-".concat(props.drag === "x" ? "y" : "x");
  }
  htmlProps.style = style2;
  return htmlProps;
}

// node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs
var validMotionProps = /* @__PURE__ */ new Set([
  "initial",
  "animate",
  "exit",
  "style",
  "variants",
  "transition",
  "transformTemplate",
  "transformValues",
  "custom",
  "inherit",
  "layout",
  "layoutId",
  "layoutDependency",
  "onLayoutAnimationStart",
  "onLayoutAnimationComplete",
  "onLayoutMeasure",
  "onBeforeLayoutMeasure",
  "onAnimationStart",
  "onAnimationComplete",
  "onUpdate",
  "onDragStart",
  "onDrag",
  "onDragEnd",
  "onMeasureDragConstraints",
  "onDirectionLock",
  "onDragTransitionEnd",
  "drag",
  "dragControls",
  "dragListener",
  "dragConstraints",
  "dragDirectionLock",
  "dragSnapToOrigin",
  "_dragX",
  "_dragY",
  "dragElastic",
  "dragMomentum",
  "dragPropagation",
  "dragTransition",
  "whileDrag",
  "onPan",
  "onPanStart",
  "onPanEnd",
  "onPanSessionStart",
  "onTap",
  "onTapStart",
  "onTapCancel",
  "onHoverStart",
  "onHoverEnd",
  "whileFocus",
  "whileTap",
  "whileHover",
  "whileInView",
  "onViewportEnter",
  "onViewportLeave",
  "viewport",
  "layoutScroll"
]);
function isValidMotionProp(key) {
  return validMotionProps.has(key);
}

// node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs
var shouldForward = function(key) {
  return !isValidMotionProp(key);
};
function loadExternalIsValidProp(isValidProp) {
  if (!isValidProp)
    return;
  shouldForward = function(key) {
    return key.startsWith("on") ? !isValidMotionProp(key) : isValidProp(key);
  };
}
try {
  loadExternalIsValidProp((init_is_prop_valid_browser_esm(), __toCommonJS(is_prop_valid_browser_esm_exports)).default);
} catch (_a) {
}
function filterProps(props, isDom, forwardMotionProps) {
  var filteredProps = {};
  for (var key in props) {
    if (shouldForward(key) || forwardMotionProps === true && isValidMotionProp(key) || !isDom && !isValidMotionProp(key) || // If trying to use native HTML drag events, forward drag listeners
    props["draggable"] && key.startsWith("onDrag")) {
      filteredProps[key] = props[key];
    }
  }
  return filteredProps;
}

// node_modules/framer-motion/dist/es/render/svg/use-props.mjs
var import_react20 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs
function calcOrigin(origin, offset, size) {
  return typeof origin === "string" ? origin : px.transform(offset + size * origin);
}
function calcSVGTransformOrigin(dimensions, originX, originY) {
  var pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);
  var pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);
  return "".concat(pxOriginX, " ").concat(pxOriginY);
}

// node_modules/framer-motion/dist/es/render/svg/utils/path.mjs
var dashKeys = {
  offset: "stroke-dashoffset",
  array: "stroke-dasharray"
};
var camelKeys = {
  offset: "strokeDashoffset",
  array: "strokeDasharray"
};
function buildSVGPath(attrs, length2, spacing, offset, useDashCase) {
  if (spacing === void 0) {
    spacing = 1;
  }
  if (offset === void 0) {
    offset = 0;
  }
  if (useDashCase === void 0) {
    useDashCase = true;
  }
  attrs.pathLength = 1;
  var keys = useDashCase ? dashKeys : camelKeys;
  attrs[keys.offset] = px.transform(-offset);
  var pathLength = px.transform(length2);
  var pathSpacing = px.transform(spacing);
  attrs[keys.array] = "".concat(pathLength, " ").concat(pathSpacing);
}

// node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs
function buildSVGAttrs(state, _a, options, transformTemplate) {
  var attrX = _a.attrX, attrY = _a.attrY, originX = _a.originX, originY = _a.originY, pathLength = _a.pathLength, _b = _a.pathSpacing, pathSpacing = _b === void 0 ? 1 : _b, _c = _a.pathOffset, pathOffset = _c === void 0 ? 0 : _c, latest = __rest(_a, ["attrX", "attrY", "originX", "originY", "pathLength", "pathSpacing", "pathOffset"]);
  buildHTMLStyles(state, latest, options, transformTemplate);
  state.attrs = state.style;
  state.style = {};
  var attrs = state.attrs, style2 = state.style, dimensions = state.dimensions;
  if (attrs.transform) {
    if (dimensions)
      style2.transform = attrs.transform;
    delete attrs.transform;
  }
  if (dimensions && (originX !== void 0 || originY !== void 0 || style2.transform)) {
    style2.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== void 0 ? originX : 0.5, originY !== void 0 ? originY : 0.5);
  }
  if (attrX !== void 0)
    attrs.x = attrX;
  if (attrY !== void 0)
    attrs.y = attrY;
  if (pathLength !== void 0) {
    buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);
  }
}

// node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs
var createSvgRenderState = function() {
  return __assign(__assign({}, createHtmlRenderState()), { attrs: {} });
};

// node_modules/framer-motion/dist/es/render/svg/use-props.mjs
function useSVGProps(props, visualState) {
  var visualProps = (0, import_react20.useMemo)(function() {
    var state = createSvgRenderState();
    buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, props.transformTemplate);
    return __assign(__assign({}, state.attrs), { style: __assign({}, state.style) });
  }, [visualState]);
  if (props.style) {
    var rawStyles = {};
    copyRawValuesOnly(rawStyles, props.style, props);
    visualProps.style = __assign(__assign({}, rawStyles), visualProps.style);
  }
  return visualProps;
}

// node_modules/framer-motion/dist/es/render/dom/use-render.mjs
function createUseRender(forwardMotionProps) {
  if (forwardMotionProps === void 0) {
    forwardMotionProps = false;
  }
  var useRender = function(Component, props, projectionId, ref, _a, isStatic) {
    var latestValues = _a.latestValues;
    var useVisualProps = isSVGComponent(Component) ? useSVGProps : useHTMLProps;
    var visualProps = useVisualProps(props, latestValues, isStatic);
    var filteredProps = filterProps(props, typeof Component === "string", forwardMotionProps);
    var elementProps = __assign(__assign(__assign({}, filteredProps), visualProps), { ref });
    if (projectionId) {
      elementProps["data-projection-id"] = projectionId;
    }
    return (0, import_react21.createElement)(Component, elementProps);
  };
  return useRender;
}

// node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs
var CAMEL_CASE_PATTERN = /([a-z])([A-Z])/g;
var REPLACE_TEMPLATE = "$1-$2";
var camelToDash = function(str) {
  return str.replace(CAMEL_CASE_PATTERN, REPLACE_TEMPLATE).toLowerCase();
};

// node_modules/framer-motion/dist/es/render/html/utils/render.mjs
function renderHTML(element, _a, styleProp, projection) {
  var style2 = _a.style, vars = _a.vars;
  Object.assign(element.style, style2, projection && projection.getProjectionStyles(styleProp));
  for (var key in vars) {
    element.style.setProperty(key, vars[key]);
  }
}

// node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs
var camelCaseAttributes = /* @__PURE__ */ new Set([
  "baseFrequency",
  "diffuseConstant",
  "kernelMatrix",
  "kernelUnitLength",
  "keySplines",
  "keyTimes",
  "limitingConeAngle",
  "markerHeight",
  "markerWidth",
  "numOctaves",
  "targetX",
  "targetY",
  "surfaceScale",
  "specularConstant",
  "specularExponent",
  "stdDeviation",
  "tableValues",
  "viewBox",
  "gradientTransform",
  "pathLength"
]);

// node_modules/framer-motion/dist/es/render/svg/utils/render.mjs
function renderSVG(element, renderState, _styleProp, projection) {
  renderHTML(element, renderState, void 0, projection);
  for (var key in renderState.attrs) {
    element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);
  }
}

// node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs
function scrapeMotionValuesFromProps(props) {
  var style2 = props.style;
  var newValues = {};
  for (var key in style2) {
    if (isMotionValue(style2[key]) || isForcedMotionValue(key, props)) {
      newValues[key] = style2[key];
    }
  }
  return newValues;
}

// node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs
function scrapeMotionValuesFromProps2(props) {
  var newValues = scrapeMotionValuesFromProps(props);
  for (var key in props) {
    if (isMotionValue(props[key])) {
      var targetKey = key === "x" || key === "y" ? "attr" + key.toUpperCase() : key;
      newValues[targetKey] = props[key];
    }
  }
  return newValues;
}

// node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs
var import_react22 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs
function isAnimationControls(v6) {
  return typeof v6 === "object" && typeof v6.start === "function";
}

// node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs
var isKeyframesTarget = function(v6) {
  return Array.isArray(v6);
};

// node_modules/framer-motion/dist/es/utils/resolve-value.mjs
var isCustomValue = function(v6) {
  return Boolean(v6 && typeof v6 === "object" && v6.mix && v6.toValue);
};
var resolveFinalValueInKeyframes = function(v6) {
  return isKeyframesTarget(v6) ? v6[v6.length - 1] || 0 : v6;
};

// node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs
function resolveMotionValue(value) {
  var unwrappedValue = isMotionValue(value) ? value.get() : value;
  return isCustomValue(unwrappedValue) ? unwrappedValue.toValue() : unwrappedValue;
}

// node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs
function makeState(_a, props, context, presenceContext) {
  var scrapeMotionValuesFromProps3 = _a.scrapeMotionValuesFromProps, createRenderState = _a.createRenderState, onMount = _a.onMount;
  var state = {
    latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps3),
    renderState: createRenderState()
  };
  if (onMount) {
    state.mount = function(instance) {
      return onMount(props, instance, state);
    };
  }
  return state;
}
var makeUseVisualState = function(config) {
  return function(props, isStatic) {
    var context = (0, import_react22.useContext)(MotionContext);
    var presenceContext = (0, import_react22.useContext)(PresenceContext);
    return isStatic ? makeState(config, props, context, presenceContext) : useConstant(function() {
      return makeState(config, props, context, presenceContext);
    });
  };
};
function makeLatestValues(props, context, presenceContext, scrapeMotionValues) {
  var values = {};
  var blockInitialAnimation = (presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.initial) === false;
  var motionValues = scrapeMotionValues(props);
  for (var key in motionValues) {
    values[key] = resolveMotionValue(motionValues[key]);
  }
  var initial = props.initial, animate4 = props.animate;
  var isControllingVariants = checkIfControllingVariants(props);
  var isVariantNode = checkIfVariantNode(props);
  if (context && isVariantNode && !isControllingVariants && props.inherit !== false) {
    initial !== null && initial !== void 0 ? initial : initial = context.initial;
    animate4 !== null && animate4 !== void 0 ? animate4 : animate4 = context.animate;
  }
  var initialAnimationIsBlocked = blockInitialAnimation || initial === false;
  var variantToSet = initialAnimationIsBlocked ? animate4 : initial;
  if (variantToSet && typeof variantToSet !== "boolean" && !isAnimationControls(variantToSet)) {
    var list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];
    list.forEach(function(definition) {
      var resolved = resolveVariantFromProps(props, definition);
      if (!resolved)
        return;
      var transitionEnd = resolved.transitionEnd;
      resolved.transition;
      var target = __rest(resolved, ["transitionEnd", "transition"]);
      for (var key2 in target) {
        var valueTarget = target[key2];
        if (Array.isArray(valueTarget)) {
          var index2 = initialAnimationIsBlocked ? valueTarget.length - 1 : 0;
          valueTarget = valueTarget[index2];
        }
        if (valueTarget !== null) {
          values[key2] = valueTarget;
        }
      }
      for (var key2 in transitionEnd)
        values[key2] = transitionEnd[key2];
    });
  }
  return values;
}

// node_modules/framer-motion/dist/es/render/svg/config-motion.mjs
var svgMotionConfig = {
  useVisualState: makeUseVisualState({
    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps2,
    createRenderState: createSvgRenderState,
    onMount: function(props, instance, _a) {
      var renderState = _a.renderState, latestValues = _a.latestValues;
      try {
        renderState.dimensions = typeof instance.getBBox === "function" ? instance.getBBox() : instance.getBoundingClientRect();
      } catch (e4) {
        renderState.dimensions = {
          x: 0,
          y: 0,
          width: 0,
          height: 0
        };
      }
      buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, props.transformTemplate);
      renderSVG(instance, renderState);
    }
  })
};

// node_modules/framer-motion/dist/es/render/html/config-motion.mjs
var htmlMotionConfig = {
  useVisualState: makeUseVisualState({
    scrapeMotionValuesFromProps,
    createRenderState: createHtmlRenderState
  })
};

// node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs
function createDomMotionConfig(Component, _a, preloadedFeatures, createVisualElement, projectionNodeConstructor) {
  var _b = _a.forwardMotionProps, forwardMotionProps = _b === void 0 ? false : _b;
  var baseConfig = isSVGComponent(Component) ? svgMotionConfig : htmlMotionConfig;
  return __assign(__assign({}, baseConfig), { preloadedFeatures, useRender: createUseRender(forwardMotionProps), createVisualElement, projectionNodeConstructor, Component });
}

// node_modules/framer-motion/dist/es/render/utils/types.mjs
var AnimationType;
(function(AnimationType2) {
  AnimationType2["Animate"] = "animate";
  AnimationType2["Hover"] = "whileHover";
  AnimationType2["Tap"] = "whileTap";
  AnimationType2["Drag"] = "whileDrag";
  AnimationType2["Focus"] = "whileFocus";
  AnimationType2["InView"] = "whileInView";
  AnimationType2["Exit"] = "exit";
})(AnimationType || (AnimationType = {}));

// node_modules/framer-motion/dist/es/events/use-dom-event.mjs
var import_react23 = __toESM(require_react(), 1);
function addDomEvent(target, eventName, handler, options) {
  if (options === void 0) {
    options = { passive: true };
  }
  target.addEventListener(eventName, handler, options);
  return function() {
    return target.removeEventListener(eventName, handler);
  };
}
function useDomEvent(ref, eventName, handler, options) {
  (0, import_react23.useEffect)(function() {
    var element = ref.current;
    if (handler && element) {
      return addDomEvent(element, eventName, handler, options);
    }
  }, [ref, eventName, handler, options]);
}

// node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs
function useFocusGesture(_a) {
  var whileFocus = _a.whileFocus, visualElement2 = _a.visualElement;
  var onFocus = function() {
    var _a2;
    (_a2 = visualElement2.animationState) === null || _a2 === void 0 ? void 0 : _a2.setActive(AnimationType.Focus, true);
  };
  var onBlur = function() {
    var _a2;
    (_a2 = visualElement2.animationState) === null || _a2 === void 0 ? void 0 : _a2.setActive(AnimationType.Focus, false);
  };
  useDomEvent(visualElement2, "focus", whileFocus ? onFocus : void 0);
  useDomEvent(visualElement2, "blur", whileFocus ? onBlur : void 0);
}

// node_modules/framer-motion/dist/es/gestures/utils/event-type.mjs
function isMouseEvent(event) {
  if (typeof PointerEvent !== "undefined" && event instanceof PointerEvent) {
    return !!(event.pointerType === "mouse");
  }
  return event instanceof MouseEvent;
}
function isTouchEvent(event) {
  var hasTouches = !!event.touches;
  return hasTouches;
}

// node_modules/framer-motion/dist/es/events/event-info.mjs
function filterPrimaryPointer(eventHandler) {
  return function(event) {
    var isMouseEvent2 = event instanceof MouseEvent;
    var isPrimaryPointer = !isMouseEvent2 || isMouseEvent2 && event.button === 0;
    if (isPrimaryPointer) {
      eventHandler(event);
    }
  };
}
var defaultPagePoint = { pageX: 0, pageY: 0 };
function pointFromTouch(e4, pointType) {
  if (pointType === void 0) {
    pointType = "page";
  }
  var primaryTouch = e4.touches[0] || e4.changedTouches[0];
  var point = primaryTouch || defaultPagePoint;
  return {
    x: point[pointType + "X"],
    y: point[pointType + "Y"]
  };
}
function pointFromMouse(point, pointType) {
  if (pointType === void 0) {
    pointType = "page";
  }
  return {
    x: point[pointType + "X"],
    y: point[pointType + "Y"]
  };
}
function extractEventInfo(event, pointType) {
  if (pointType === void 0) {
    pointType = "page";
  }
  return {
    point: isTouchEvent(event) ? pointFromTouch(event, pointType) : pointFromMouse(event, pointType)
  };
}
var wrapHandler = function(handler, shouldFilterPrimaryPointer) {
  if (shouldFilterPrimaryPointer === void 0) {
    shouldFilterPrimaryPointer = false;
  }
  var listener = function(event) {
    return handler(event, extractEventInfo(event));
  };
  return shouldFilterPrimaryPointer ? filterPrimaryPointer(listener) : listener;
};

// node_modules/framer-motion/dist/es/events/utils.mjs
var supportsPointerEvents = function() {
  return isBrowser && window.onpointerdown === null;
};
var supportsTouchEvents = function() {
  return isBrowser && window.ontouchstart === null;
};
var supportsMouseEvents = function() {
  return isBrowser && window.onmousedown === null;
};

// node_modules/framer-motion/dist/es/events/use-pointer-event.mjs
var mouseEventNames = {
  pointerdown: "mousedown",
  pointermove: "mousemove",
  pointerup: "mouseup",
  pointercancel: "mousecancel",
  pointerover: "mouseover",
  pointerout: "mouseout",
  pointerenter: "mouseenter",
  pointerleave: "mouseleave"
};
var touchEventNames = {
  pointerdown: "touchstart",
  pointermove: "touchmove",
  pointerup: "touchend",
  pointercancel: "touchcancel"
};
function getPointerEventName(name) {
  if (supportsPointerEvents()) {
    return name;
  } else if (supportsTouchEvents()) {
    return touchEventNames[name];
  } else if (supportsMouseEvents()) {
    return mouseEventNames[name];
  }
  return name;
}
function addPointerEvent(target, eventName, handler, options) {
  return addDomEvent(target, getPointerEventName(eventName), wrapHandler(handler, eventName === "pointerdown"), options);
}
function usePointerEvent(ref, eventName, handler, options) {
  return useDomEvent(ref, getPointerEventName(eventName), handler && wrapHandler(handler, eventName === "pointerdown"), options);
}

// node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs
function createLock(name) {
  var lock = null;
  return function() {
    var openLock = function() {
      lock = null;
    };
    if (lock === null) {
      lock = name;
      return openLock;
    }
    return false;
  };
}
var globalHorizontalLock = createLock("dragHorizontal");
var globalVerticalLock = createLock("dragVertical");
function getGlobalLock(drag2) {
  var lock = false;
  if (drag2 === "y") {
    lock = globalVerticalLock();
  } else if (drag2 === "x") {
    lock = globalHorizontalLock();
  } else {
    var openHorizontal_1 = globalHorizontalLock();
    var openVertical_1 = globalVerticalLock();
    if (openHorizontal_1 && openVertical_1) {
      lock = function() {
        openHorizontal_1();
        openVertical_1();
      };
    } else {
      if (openHorizontal_1)
        openHorizontal_1();
      if (openVertical_1)
        openVertical_1();
    }
  }
  return lock;
}
function isDragActive() {
  var openGestureLock = getGlobalLock(true);
  if (!openGestureLock)
    return true;
  openGestureLock();
  return false;
}

// node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs
function createHoverEvent(visualElement2, isActive, callback) {
  return function(event, info) {
    var _a;
    if (!isMouseEvent(event) || isDragActive())
      return;
    (_a = visualElement2.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Hover, isActive);
    callback === null || callback === void 0 ? void 0 : callback(event, info);
  };
}
function useHoverGesture(_a) {
  var onHoverStart = _a.onHoverStart, onHoverEnd = _a.onHoverEnd, whileHover = _a.whileHover, visualElement2 = _a.visualElement;
  usePointerEvent(visualElement2, "pointerenter", onHoverStart || whileHover ? createHoverEvent(visualElement2, true, onHoverStart) : void 0, { passive: !onHoverStart });
  usePointerEvent(visualElement2, "pointerleave", onHoverEnd || whileHover ? createHoverEvent(visualElement2, false, onHoverEnd) : void 0, { passive: !onHoverEnd });
}

// node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs
var import_react25 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs
var isNodeOrChild = function(parent, child) {
  if (!child) {
    return false;
  } else if (parent === child) {
    return true;
  } else {
    return isNodeOrChild(parent, child.parentElement);
  }
};

// node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs
var import_react24 = __toESM(require_react(), 1);
function useUnmountEffect(callback) {
  return (0, import_react24.useEffect)(function() {
    return function() {
      return callback();
    };
  }, []);
}

// node_modules/popmotion/dist/es/utils/clamp.mjs
var clamp2 = (min, max, v6) => Math.min(Math.max(v6, min), max);

// node_modules/popmotion/dist/es/animations/utils/find-spring.mjs
var safeMin = 1e-3;
var minDuration = 0.01;
var maxDuration = 10;
var minDamping = 0.05;
var maxDamping = 1;
function findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1 }) {
  let envelope;
  let derivative;
  warning(duration <= maxDuration * 1e3, "Spring duration must be 10 seconds or less");
  let dampingRatio = 1 - bounce;
  dampingRatio = clamp2(minDamping, maxDamping, dampingRatio);
  duration = clamp2(minDuration, maxDuration, duration / 1e3);
  if (dampingRatio < 1) {
    envelope = (undampedFreq2) => {
      const exponentialDecay = undampedFreq2 * dampingRatio;
      const delta = exponentialDecay * duration;
      const a12 = exponentialDecay - velocity;
      const b9 = calcAngularFreq(undampedFreq2, dampingRatio);
      const c14 = Math.exp(-delta);
      return safeMin - a12 / b9 * c14;
    };
    derivative = (undampedFreq2) => {
      const exponentialDecay = undampedFreq2 * dampingRatio;
      const delta = exponentialDecay * duration;
      const d16 = delta * velocity + velocity;
      const e4 = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq2, 2) * duration;
      const f15 = Math.exp(-delta);
      const g5 = calcAngularFreq(Math.pow(undampedFreq2, 2), dampingRatio);
      const factor = -envelope(undampedFreq2) + safeMin > 0 ? -1 : 1;
      return factor * ((d16 - e4) * f15) / g5;
    };
  } else {
    envelope = (undampedFreq2) => {
      const a12 = Math.exp(-undampedFreq2 * duration);
      const b9 = (undampedFreq2 - velocity) * duration + 1;
      return -safeMin + a12 * b9;
    };
    derivative = (undampedFreq2) => {
      const a12 = Math.exp(-undampedFreq2 * duration);
      const b9 = (velocity - undampedFreq2) * (duration * duration);
      return a12 * b9;
    };
  }
  const initialGuess = 5 / duration;
  const undampedFreq = approximateRoot(envelope, derivative, initialGuess);
  duration = duration * 1e3;
  if (isNaN(undampedFreq)) {
    return {
      stiffness: 100,
      damping: 10,
      duration
    };
  } else {
    const stiffness = Math.pow(undampedFreq, 2) * mass;
    return {
      stiffness,
      damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),
      duration
    };
  }
}
var rootIterations = 12;
function approximateRoot(envelope, derivative, initialGuess) {
  let result = initialGuess;
  for (let i9 = 1; i9 < rootIterations; i9++) {
    result = result - envelope(result) / derivative(result);
  }
  return result;
}
function calcAngularFreq(undampedFreq, dampingRatio) {
  return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);
}

// node_modules/popmotion/dist/es/animations/generators/spring.mjs
var durationKeys = ["duration", "bounce"];
var physicsKeys = ["stiffness", "damping", "mass"];
function isSpringType(options, keys) {
  return keys.some((key) => options[key] !== void 0);
}
function getSpringOptions(options) {
  let springOptions = Object.assign({ velocity: 0, stiffness: 100, damping: 10, mass: 1, isResolvedFromDuration: false }, options);
  if (!isSpringType(options, physicsKeys) && isSpringType(options, durationKeys)) {
    const derived = findSpring(options);
    springOptions = Object.assign(Object.assign(Object.assign({}, springOptions), derived), { velocity: 0, mass: 1 });
    springOptions.isResolvedFromDuration = true;
  }
  return springOptions;
}
function spring(_a) {
  var { from = 0, to: to2 = 1, restSpeed = 2, restDelta } = _a, options = __rest(_a, ["from", "to", "restSpeed", "restDelta"]);
  const state = { done: false, value: from };
  let { stiffness, damping, mass, velocity, duration, isResolvedFromDuration } = getSpringOptions(options);
  let resolveSpring = zero;
  let resolveVelocity = zero;
  function createSpring() {
    const initialVelocity = velocity ? -(velocity / 1e3) : 0;
    const initialDelta = to2 - from;
    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));
    const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1e3;
    if (restDelta === void 0) {
      restDelta = Math.min(Math.abs(to2 - from) / 100, 0.4);
    }
    if (dampingRatio < 1) {
      const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);
      resolveSpring = (t18) => {
        const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t18);
        return to2 - envelope * ((initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) / angularFreq * Math.sin(angularFreq * t18) + initialDelta * Math.cos(angularFreq * t18));
      };
      resolveVelocity = (t18) => {
        const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t18);
        return dampingRatio * undampedAngularFreq * envelope * (Math.sin(angularFreq * t18) * (initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) / angularFreq + initialDelta * Math.cos(angularFreq * t18)) - envelope * (Math.cos(angularFreq * t18) * (initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) - angularFreq * initialDelta * Math.sin(angularFreq * t18));
      };
    } else if (dampingRatio === 1) {
      resolveSpring = (t18) => to2 - Math.exp(-undampedAngularFreq * t18) * (initialDelta + (initialVelocity + undampedAngularFreq * initialDelta) * t18);
    } else {
      const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);
      resolveSpring = (t18) => {
        const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t18);
        const freqForT = Math.min(dampedAngularFreq * t18, 300);
        return to2 - envelope * ((initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) * Math.sinh(freqForT) + dampedAngularFreq * initialDelta * Math.cosh(freqForT)) / dampedAngularFreq;
      };
    }
  }
  createSpring();
  return {
    next: (t18) => {
      const current = resolveSpring(t18);
      if (!isResolvedFromDuration) {
        const currentVelocity = resolveVelocity(t18) * 1e3;
        const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;
        const isBelowDisplacementThreshold = Math.abs(to2 - current) <= restDelta;
        state.done = isBelowVelocityThreshold && isBelowDisplacementThreshold;
      } else {
        state.done = t18 >= duration;
      }
      state.value = state.done ? to2 : current;
      return state;
    },
    flipTarget: () => {
      velocity = -velocity;
      [from, to2] = [to2, from];
      createSpring();
    }
  };
}
spring.needsInterpolation = (a12, b9) => typeof a12 === "string" || typeof b9 === "string";
var zero = (_t3) => 0;

// node_modules/popmotion/dist/es/utils/progress.mjs
var progress = (from, to2, value) => {
  const toFromDifference = to2 - from;
  return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;
};

// node_modules/popmotion/dist/es/utils/mix.mjs
var mix = (from, to2, progress3) => -progress3 * from + progress3 * to2 + from;

// node_modules/popmotion/dist/es/utils/hsla-to-rgba.mjs
function hueToRgb(p7, q7, t18) {
  if (t18 < 0)
    t18 += 1;
  if (t18 > 1)
    t18 -= 1;
  if (t18 < 1 / 6)
    return p7 + (q7 - p7) * 6 * t18;
  if (t18 < 1 / 2)
    return q7;
  if (t18 < 2 / 3)
    return p7 + (q7 - p7) * (2 / 3 - t18) * 6;
  return p7;
}
function hslaToRgba({ hue, saturation, lightness, alpha: alpha2 }) {
  hue /= 360;
  saturation /= 100;
  lightness /= 100;
  let red = 0;
  let green = 0;
  let blue = 0;
  if (!saturation) {
    red = green = blue = lightness;
  } else {
    const q7 = lightness < 0.5 ? lightness * (1 + saturation) : lightness + saturation - lightness * saturation;
    const p7 = 2 * lightness - q7;
    red = hueToRgb(p7, q7, hue + 1 / 3);
    green = hueToRgb(p7, q7, hue);
    blue = hueToRgb(p7, q7, hue - 1 / 3);
  }
  return {
    red: Math.round(red * 255),
    green: Math.round(green * 255),
    blue: Math.round(blue * 255),
    alpha: alpha2
  };
}

// node_modules/popmotion/dist/es/utils/mix-color.mjs
var mixLinearColor = (from, to2, v6) => {
  const fromExpo = from * from;
  const toExpo = to2 * to2;
  return Math.sqrt(Math.max(0, v6 * (toExpo - fromExpo) + fromExpo));
};
var colorTypes = [hex, rgba, hsla];
var getColorType = (v6) => colorTypes.find((type) => type.test(v6));
var notAnimatable = (color2) => `'${color2}' is not an animatable color. Use the equivalent color code instead.`;
var mixColor = (from, to2) => {
  let fromColorType = getColorType(from);
  let toColorType = getColorType(to2);
  invariant(!!fromColorType, notAnimatable(from));
  invariant(!!toColorType, notAnimatable(to2));
  let fromColor = fromColorType.parse(from);
  let toColor = toColorType.parse(to2);
  if (fromColorType === hsla) {
    fromColor = hslaToRgba(fromColor);
    fromColorType = rgba;
  }
  if (toColorType === hsla) {
    toColor = hslaToRgba(toColor);
    toColorType = rgba;
  }
  const blended = Object.assign({}, fromColor);
  return (v6) => {
    for (const key in blended) {
      if (key !== "alpha") {
        blended[key] = mixLinearColor(fromColor[key], toColor[key], v6);
      }
    }
    blended.alpha = mix(fromColor.alpha, toColor.alpha, v6);
    return fromColorType.transform(blended);
  };
};

// node_modules/popmotion/dist/es/utils/inc.mjs
var isNum = (v6) => typeof v6 === "number";

// node_modules/popmotion/dist/es/utils/pipe.mjs
var combineFunctions = (a12, b9) => (v6) => b9(a12(v6));
var pipe = (...transformers) => transformers.reduce(combineFunctions);

// node_modules/popmotion/dist/es/utils/mix-complex.mjs
function getMixer(origin, target) {
  if (isNum(origin)) {
    return (v6) => mix(origin, target, v6);
  } else if (color.test(origin)) {
    return mixColor(origin, target);
  } else {
    return mixComplex(origin, target);
  }
}
var mixArray = (from, to2) => {
  const output = [...from];
  const numValues = output.length;
  const blendValue = from.map((fromThis, i9) => getMixer(fromThis, to2[i9]));
  return (v6) => {
    for (let i9 = 0; i9 < numValues; i9++) {
      output[i9] = blendValue[i9](v6);
    }
    return output;
  };
};
var mixObject = (origin, target) => {
  const output = Object.assign(Object.assign({}, origin), target);
  const blendValue = {};
  for (const key in output) {
    if (origin[key] !== void 0 && target[key] !== void 0) {
      blendValue[key] = getMixer(origin[key], target[key]);
    }
  }
  return (v6) => {
    for (const key in blendValue) {
      output[key] = blendValue[key](v6);
    }
    return output;
  };
};
function analyse2(value) {
  const parsed = complex.parse(value);
  const numValues = parsed.length;
  let numNumbers = 0;
  let numRGB = 0;
  let numHSL = 0;
  for (let i9 = 0; i9 < numValues; i9++) {
    if (numNumbers || typeof parsed[i9] === "number") {
      numNumbers++;
    } else {
      if (parsed[i9].hue !== void 0) {
        numHSL++;
      } else {
        numRGB++;
      }
    }
  }
  return { parsed, numNumbers, numRGB, numHSL };
}
var mixComplex = (origin, target) => {
  const template = complex.createTransformer(target);
  const originStats = analyse2(origin);
  const targetStats = analyse2(target);
  const canInterpolate = originStats.numHSL === targetStats.numHSL && originStats.numRGB === targetStats.numRGB && originStats.numNumbers >= targetStats.numNumbers;
  if (canInterpolate) {
    return pipe(mixArray(originStats.parsed, targetStats.parsed), template);
  } else {
    warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);
    return (p7) => `${p7 > 0 ? target : origin}`;
  }
};

// node_modules/popmotion/dist/es/utils/interpolate.mjs
var mixNumber = (from, to2) => (p7) => mix(from, to2, p7);
function detectMixerFactory(v6) {
  if (typeof v6 === "number") {
    return mixNumber;
  } else if (typeof v6 === "string") {
    if (color.test(v6)) {
      return mixColor;
    } else {
      return mixComplex;
    }
  } else if (Array.isArray(v6)) {
    return mixArray;
  } else if (typeof v6 === "object") {
    return mixObject;
  }
}
function createMixers(output, ease, customMixer) {
  const mixers = [];
  const mixerFactory = customMixer || detectMixerFactory(output[0]);
  const numMixers = output.length - 1;
  for (let i9 = 0; i9 < numMixers; i9++) {
    let mixer = mixerFactory(output[i9], output[i9 + 1]);
    if (ease) {
      const easingFunction = Array.isArray(ease) ? ease[i9] : ease;
      mixer = pipe(easingFunction, mixer);
    }
    mixers.push(mixer);
  }
  return mixers;
}
function fastInterpolate([from, to2], [mixer]) {
  return (v6) => mixer(progress(from, to2, v6));
}
function slowInterpolate(input, mixers) {
  const inputLength = input.length;
  const lastInputIndex = inputLength - 1;
  return (v6) => {
    let mixerIndex = 0;
    let foundMixerIndex = false;
    if (v6 <= input[0]) {
      foundMixerIndex = true;
    } else if (v6 >= input[lastInputIndex]) {
      mixerIndex = lastInputIndex - 1;
      foundMixerIndex = true;
    }
    if (!foundMixerIndex) {
      let i9 = 1;
      for (; i9 < inputLength; i9++) {
        if (input[i9] > v6 || i9 === lastInputIndex) {
          break;
        }
      }
      mixerIndex = i9 - 1;
    }
    const progressInRange = progress(input[mixerIndex], input[mixerIndex + 1], v6);
    return mixers[mixerIndex](progressInRange);
  };
}
function interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {
  const inputLength = input.length;
  invariant(inputLength === output.length, "Both input and output ranges must be the same length");
  invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, "Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.");
  if (input[0] > input[inputLength - 1]) {
    input = [].concat(input);
    output = [].concat(output);
    input.reverse();
    output.reverse();
  }
  const mixers = createMixers(output, ease, mixer);
  const interpolator = inputLength === 2 ? fastInterpolate(input, mixers) : slowInterpolate(input, mixers);
  return isClamp ? (v6) => interpolator(clamp2(input[0], input[inputLength - 1], v6)) : interpolator;
}

// node_modules/popmotion/dist/es/easing/utils.mjs
var reverseEasing = (easing) => (p7) => 1 - easing(1 - p7);
var mirrorEasing = (easing) => (p7) => p7 <= 0.5 ? easing(2 * p7) / 2 : (2 - easing(2 * (1 - p7))) / 2;
var createExpoIn = (power) => (p7) => Math.pow(p7, power);
var createBackIn = (power) => (p7) => p7 * p7 * ((power + 1) * p7 - power);
var createAnticipate = (power) => {
  const backEasing = createBackIn(power);
  return (p7) => (p7 *= 2) < 1 ? 0.5 * backEasing(p7) : 0.5 * (2 - Math.pow(2, -10 * (p7 - 1)));
};

// node_modules/popmotion/dist/es/easing/index.mjs
var DEFAULT_OVERSHOOT_STRENGTH = 1.525;
var BOUNCE_FIRST_THRESHOLD = 4 / 11;
var BOUNCE_SECOND_THRESHOLD = 8 / 11;
var BOUNCE_THIRD_THRESHOLD = 9 / 10;
var linear = (p7) => p7;
var easeIn = createExpoIn(2);
var easeOut = reverseEasing(easeIn);
var easeInOut = mirrorEasing(easeIn);
var circIn = (p7) => 1 - Math.sin(Math.acos(p7));
var circOut = reverseEasing(circIn);
var circInOut = mirrorEasing(circOut);
var backIn = createBackIn(DEFAULT_OVERSHOOT_STRENGTH);
var backOut = reverseEasing(backIn);
var backInOut = mirrorEasing(backIn);
var anticipate = createAnticipate(DEFAULT_OVERSHOOT_STRENGTH);
var ca = 4356 / 361;
var cb = 35442 / 1805;
var cc = 16061 / 1805;
var bounceOut = (p7) => {
  if (p7 === 1 || p7 === 0)
    return p7;
  const p22 = p7 * p7;
  return p7 < BOUNCE_FIRST_THRESHOLD ? 7.5625 * p22 : p7 < BOUNCE_SECOND_THRESHOLD ? 9.075 * p22 - 9.9 * p7 + 3.4 : p7 < BOUNCE_THIRD_THRESHOLD ? ca * p22 - cb * p7 + cc : 10.8 * p7 * p7 - 20.52 * p7 + 10.72;
};
var bounceIn = reverseEasing(bounceOut);
var bounceInOut = (p7) => p7 < 0.5 ? 0.5 * (1 - bounceOut(1 - p7 * 2)) : 0.5 * bounceOut(p7 * 2 - 1) + 0.5;

// node_modules/popmotion/dist/es/animations/generators/keyframes.mjs
function defaultEasing(values, easing) {
  return values.map(() => easing || easeInOut).splice(0, values.length - 1);
}
function defaultOffset(values) {
  const numValues = values.length;
  return values.map((_value, i9) => i9 !== 0 ? i9 / (numValues - 1) : 0);
}
function convertOffsetToTimes(offset, duration) {
  return offset.map((o14) => o14 * duration);
}
function keyframes({ from = 0, to: to2 = 1, ease, offset, duration = 300 }) {
  const state = { done: false, value: from };
  const values = Array.isArray(to2) ? to2 : [from, to2];
  const times = convertOffsetToTimes(offset && offset.length === values.length ? offset : defaultOffset(values), duration);
  function createInterpolator() {
    return interpolate(times, values, {
      ease: Array.isArray(ease) ? ease : defaultEasing(values, ease)
    });
  }
  let interpolator = createInterpolator();
  return {
    next: (t18) => {
      state.value = interpolator(t18);
      state.done = t18 >= duration;
      return state;
    },
    flipTarget: () => {
      values.reverse();
      interpolator = createInterpolator();
    }
  };
}

// node_modules/popmotion/dist/es/animations/generators/decay.mjs
function decay({ velocity = 0, from = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget }) {
  const state = { done: false, value: from };
  let amplitude = power * velocity;
  const ideal = from + amplitude;
  const target = modifyTarget === void 0 ? ideal : modifyTarget(ideal);
  if (target !== ideal)
    amplitude = target - from;
  return {
    next: (t18) => {
      const delta = -amplitude * Math.exp(-t18 / timeConstant);
      state.done = !(delta > restDelta || delta < -restDelta);
      state.value = state.done ? target : target + delta;
      return state;
    },
    flipTarget: () => {
    }
  };
}

// node_modules/popmotion/dist/es/animations/utils/detect-animation-from-options.mjs
var types = { keyframes, spring, decay };
function detectAnimationFromOptions(config) {
  if (Array.isArray(config.to)) {
    return keyframes;
  } else if (types[config.type]) {
    return types[config.type];
  }
  const keys = new Set(Object.keys(config));
  if (keys.has("ease") || keys.has("duration") && !keys.has("dampingRatio")) {
    return keyframes;
  } else if (keys.has("dampingRatio") || keys.has("stiffness") || keys.has("mass") || keys.has("damping") || keys.has("restSpeed") || keys.has("restDelta")) {
    return spring;
  }
  return keyframes;
}

// node_modules/framesync/dist/es/on-next-frame.mjs
var defaultTimestep = 1 / 60 * 1e3;
var getCurrentTime = typeof performance !== "undefined" ? () => performance.now() : () => Date.now();
var onNextFrame = typeof window !== "undefined" ? (callback) => window.requestAnimationFrame(callback) : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);

// node_modules/framesync/dist/es/create-render-step.mjs
function createRenderStep(runNextFrame2) {
  let toRun = [];
  let toRunNextFrame = [];
  let numToRun = 0;
  let isProcessing2 = false;
  let flushNextFrame = false;
  const toKeepAlive = /* @__PURE__ */ new WeakSet();
  const step = {
    schedule: (callback, keepAlive = false, immediate = false) => {
      const addToCurrentFrame = immediate && isProcessing2;
      const buffer = addToCurrentFrame ? toRun : toRunNextFrame;
      if (keepAlive)
        toKeepAlive.add(callback);
      if (buffer.indexOf(callback) === -1) {
        buffer.push(callback);
        if (addToCurrentFrame && isProcessing2)
          numToRun = toRun.length;
      }
      return callback;
    },
    cancel: (callback) => {
      const index2 = toRunNextFrame.indexOf(callback);
      if (index2 !== -1)
        toRunNextFrame.splice(index2, 1);
      toKeepAlive.delete(callback);
    },
    process: (frameData) => {
      if (isProcessing2) {
        flushNextFrame = true;
        return;
      }
      isProcessing2 = true;
      [toRun, toRunNextFrame] = [toRunNextFrame, toRun];
      toRunNextFrame.length = 0;
      numToRun = toRun.length;
      if (numToRun) {
        for (let i9 = 0; i9 < numToRun; i9++) {
          const callback = toRun[i9];
          callback(frameData);
          if (toKeepAlive.has(callback)) {
            step.schedule(callback);
            runNextFrame2();
          }
        }
      }
      isProcessing2 = false;
      if (flushNextFrame) {
        flushNextFrame = false;
        step.process(frameData);
      }
    }
  };
  return step;
}

// node_modules/framesync/dist/es/index.mjs
var maxElapsed = 40;
var useDefaultElapsed = true;
var runNextFrame = false;
var isProcessing = false;
var frame = {
  delta: 0,
  timestamp: 0
};
var stepsOrder = [
  "read",
  "update",
  "preRender",
  "render",
  "postRender"
];
var steps = stepsOrder.reduce((acc, key) => {
  acc[key] = createRenderStep(() => runNextFrame = true);
  return acc;
}, {});
var sync = stepsOrder.reduce((acc, key) => {
  const step = steps[key];
  acc[key] = (process2, keepAlive = false, immediate = false) => {
    if (!runNextFrame)
      startLoop();
    return step.schedule(process2, keepAlive, immediate);
  };
  return acc;
}, {});
var cancelSync = stepsOrder.reduce((acc, key) => {
  acc[key] = steps[key].cancel;
  return acc;
}, {});
var flushSync = stepsOrder.reduce((acc, key) => {
  acc[key] = () => steps[key].process(frame);
  return acc;
}, {});
var processStep = (stepId) => steps[stepId].process(frame);
var processFrame = (timestamp) => {
  runNextFrame = false;
  frame.delta = useDefaultElapsed ? defaultTimestep : Math.max(Math.min(timestamp - frame.timestamp, maxElapsed), 1);
  frame.timestamp = timestamp;
  isProcessing = true;
  stepsOrder.forEach(processStep);
  isProcessing = false;
  if (runNextFrame) {
    useDefaultElapsed = false;
    onNextFrame(processFrame);
  }
};
var startLoop = () => {
  runNextFrame = true;
  useDefaultElapsed = true;
  if (!isProcessing)
    onNextFrame(processFrame);
};
var getFrameData = () => frame;
var es_default = sync;

// node_modules/popmotion/dist/es/animations/utils/elapsed.mjs
function loopElapsed(elapsed, duration, delay = 0) {
  return elapsed - duration - delay;
}
function reverseElapsed(elapsed, duration, delay = 0, isForwardPlayback = true) {
  return isForwardPlayback ? loopElapsed(duration + -elapsed, duration, delay) : duration - (elapsed - duration) + delay;
}
function hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {
  return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;
}

// node_modules/popmotion/dist/es/animations/index.mjs
var framesync = (update) => {
  const passTimestamp = ({ delta }) => update(delta);
  return {
    start: () => es_default.update(passTimestamp, true),
    stop: () => cancelSync.update(passTimestamp)
  };
};
function animate(_a) {
  var _b, _c;
  var { from, autoplay = true, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = "loop", repeatDelay = 0, onPlay, onStop, onComplete, onRepeat, onUpdate } = _a, options = __rest(_a, ["from", "autoplay", "driver", "elapsed", "repeat", "repeatType", "repeatDelay", "onPlay", "onStop", "onComplete", "onRepeat", "onUpdate"]);
  let { to: to2 } = options;
  let driverControls;
  let repeatCount = 0;
  let computedDuration = options.duration;
  let latest;
  let isComplete = false;
  let isForwardPlayback = true;
  let interpolateFromNumber;
  const animator = detectAnimationFromOptions(options);
  if ((_c = (_b = animator).needsInterpolation) === null || _c === void 0 ? void 0 : _c.call(_b, from, to2)) {
    interpolateFromNumber = interpolate([0, 100], [from, to2], {
      clamp: false
    });
    from = 0;
    to2 = 100;
  }
  const animation = animator(Object.assign(Object.assign({}, options), { from, to: to2 }));
  function repeat() {
    repeatCount++;
    if (repeatType === "reverse") {
      isForwardPlayback = repeatCount % 2 === 0;
      elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);
    } else {
      elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);
      if (repeatType === "mirror")
        animation.flipTarget();
    }
    isComplete = false;
    onRepeat && onRepeat();
  }
  function complete() {
    driverControls.stop();
    onComplete && onComplete();
  }
  function update(delta) {
    if (!isForwardPlayback)
      delta = -delta;
    elapsed += delta;
    if (!isComplete) {
      const state = animation.next(Math.max(0, elapsed));
      latest = state.value;
      if (interpolateFromNumber)
        latest = interpolateFromNumber(latest);
      isComplete = isForwardPlayback ? state.done : elapsed <= 0;
    }
    onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(latest);
    if (isComplete) {
      if (repeatCount === 0)
        computedDuration !== null && computedDuration !== void 0 ? computedDuration : computedDuration = elapsed;
      if (repeatCount < repeatMax) {
        hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();
      } else {
        complete();
      }
    }
  }
  function play() {
    onPlay === null || onPlay === void 0 ? void 0 : onPlay();
    driverControls = driver(update);
    driverControls.start();
  }
  autoplay && play();
  return {
    stop: () => {
      onStop === null || onStop === void 0 ? void 0 : onStop();
      driverControls.stop();
    }
  };
}

// node_modules/popmotion/dist/es/utils/velocity-per-second.mjs
function velocityPerSecond(velocity, frameDuration) {
  return frameDuration ? velocity * (1e3 / frameDuration) : 0;
}

// node_modules/popmotion/dist/es/animations/inertia.mjs
function inertia({ from = 0, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop }) {
  let currentAnimation;
  function isOutOfBounds(v6) {
    return min !== void 0 && v6 < min || max !== void 0 && v6 > max;
  }
  function boundaryNearest(v6) {
    if (min === void 0)
      return max;
    if (max === void 0)
      return min;
    return Math.abs(min - v6) < Math.abs(max - v6) ? min : max;
  }
  function startAnimation2(options) {
    currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();
    currentAnimation = animate(Object.assign(Object.assign({}, options), {
      driver,
      onUpdate: (v6) => {
        var _a;
        onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v6);
        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v6);
      },
      onComplete,
      onStop
    }));
  }
  function startSpring(options) {
    startAnimation2(Object.assign({ type: "spring", stiffness: bounceStiffness, damping: bounceDamping, restDelta }, options));
  }
  if (isOutOfBounds(from)) {
    startSpring({ from, velocity, to: boundaryNearest(from) });
  } else {
    let target = power * velocity + from;
    if (typeof modifyTarget !== "undefined")
      target = modifyTarget(target);
    const boundary = boundaryNearest(target);
    const heading = boundary === min ? -1 : 1;
    let prev;
    let current;
    const checkBoundary = (v6) => {
      prev = current;
      current = v6;
      velocity = velocityPerSecond(v6 - prev, getFrameData().delta);
      if (heading === 1 && v6 > boundary || heading === -1 && v6 < boundary) {
        startSpring({ from: v6, to: boundary, velocity });
      }
    };
    startAnimation2({
      type: "decay",
      from,
      velocity,
      timeConstant,
      power,
      restDelta,
      modifyTarget,
      onUpdate: isOutOfBounds(target) ? checkBoundary : void 0
    });
  }
  return {
    stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop()
  };
}

// node_modules/popmotion/dist/es/utils/attract.mjs
var identity = (v6) => v6;
var createAttractor = (alterDisplacement = identity) => (constant, origin, v6) => {
  const displacement = origin - v6;
  const springModifiedDisplacement = -(0 - constant + 1) * (0 - alterDisplacement(Math.abs(displacement)));
  return displacement <= 0 ? origin + springModifiedDisplacement : origin - springModifiedDisplacement;
};
var attract = createAttractor();
var attractExpo = createAttractor(Math.sqrt);

// node_modules/popmotion/dist/es/utils/is-point.mjs
var isPoint = (point) => point.hasOwnProperty("x") && point.hasOwnProperty("y");

// node_modules/popmotion/dist/es/utils/is-point-3d.mjs
var isPoint3D = (point) => isPoint(point) && point.hasOwnProperty("z");

// node_modules/popmotion/dist/es/utils/distance.mjs
var distance1D = (a12, b9) => Math.abs(a12 - b9);
function distance(a12, b9) {
  if (isNum(a12) && isNum(b9)) {
    return distance1D(a12, b9);
  } else if (isPoint(a12) && isPoint(b9)) {
    const xDelta = distance1D(a12.x, b9.x);
    const yDelta = distance1D(a12.y, b9.y);
    const zDelta = isPoint3D(a12) && isPoint3D(b9) ? distance1D(a12.z, b9.z) : 0;
    return Math.sqrt(Math.pow(xDelta, 2) + Math.pow(yDelta, 2) + Math.pow(zDelta, 2));
  }
}

// node_modules/popmotion/dist/es/easing/cubic-bezier.mjs
var a = (a1, a22) => 1 - 3 * a22 + 3 * a1;
var b = (a1, a22) => 3 * a22 - 6 * a1;
var c = (a1) => 3 * a1;
var calcBezier = (t18, a1, a22) => ((a(a1, a22) * t18 + b(a1, a22)) * t18 + c(a1)) * t18;
var getSlope = (t18, a1, a22) => 3 * a(a1, a22) * t18 * t18 + 2 * b(a1, a22) * t18 + c(a1);
var subdivisionPrecision = 1e-7;
var subdivisionMaxIterations = 10;
function binarySubdivide(aX, aA, aB, mX1, mX2) {
  let currentX;
  let currentT;
  let i9 = 0;
  do {
    currentT = aA + (aB - aA) / 2;
    currentX = calcBezier(currentT, mX1, mX2) - aX;
    if (currentX > 0) {
      aB = currentT;
    } else {
      aA = currentT;
    }
  } while (Math.abs(currentX) > subdivisionPrecision && ++i9 < subdivisionMaxIterations);
  return currentT;
}
var newtonIterations = 8;
var newtonMinSlope = 1e-3;
function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {
  for (let i9 = 0; i9 < newtonIterations; ++i9) {
    const currentSlope = getSlope(aGuessT, mX1, mX2);
    if (currentSlope === 0) {
      return aGuessT;
    }
    const currentX = calcBezier(aGuessT, mX1, mX2) - aX;
    aGuessT -= currentX / currentSlope;
  }
  return aGuessT;
}
var kSplineTableSize = 11;
var kSampleStepSize = 1 / (kSplineTableSize - 1);
function cubicBezier(mX1, mY1, mX2, mY2) {
  if (mX1 === mY1 && mX2 === mY2)
    return linear;
  const sampleValues = new Float32Array(kSplineTableSize);
  for (let i9 = 0; i9 < kSplineTableSize; ++i9) {
    sampleValues[i9] = calcBezier(i9 * kSampleStepSize, mX1, mX2);
  }
  function getTForX(aX) {
    let intervalStart = 0;
    let currentSample = 1;
    const lastSample = kSplineTableSize - 1;
    for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {
      intervalStart += kSampleStepSize;
    }
    --currentSample;
    const dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);
    const guessForT = intervalStart + dist * kSampleStepSize;
    const initialSlope = getSlope(guessForT, mX1, mX2);
    if (initialSlope >= newtonMinSlope) {
      return newtonRaphsonIterate(aX, guessForT, mX1, mX2);
    } else if (initialSlope === 0) {
      return guessForT;
    } else {
      return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);
    }
  }
  return (t18) => t18 === 0 || t18 === 1 ? t18 : calcBezier(getTForX(t18), mY1, mY2);
}

// node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs
function useTapGesture(_a) {
  var onTap = _a.onTap, onTapStart = _a.onTapStart, onTapCancel = _a.onTapCancel, whileTap = _a.whileTap, visualElement2 = _a.visualElement;
  var hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;
  var isPressing = (0, import_react25.useRef)(false);
  var cancelPointerEndListeners = (0, import_react25.useRef)(null);
  var eventOptions = {
    passive: !(onTapStart || onTap || onTapCancel || onPointerDown)
  };
  function removePointerEndListener() {
    var _a2;
    (_a2 = cancelPointerEndListeners.current) === null || _a2 === void 0 ? void 0 : _a2.call(cancelPointerEndListeners);
    cancelPointerEndListeners.current = null;
  }
  function checkPointerEnd() {
    var _a2;
    removePointerEndListener();
    isPressing.current = false;
    (_a2 = visualElement2.animationState) === null || _a2 === void 0 ? void 0 : _a2.setActive(AnimationType.Tap, false);
    return !isDragActive();
  }
  function onPointerUp(event, info) {
    if (!checkPointerEnd())
      return;
    !isNodeOrChild(visualElement2.getInstance(), event.target) ? onTapCancel === null || onTapCancel === void 0 ? void 0 : onTapCancel(event, info) : onTap === null || onTap === void 0 ? void 0 : onTap(event, info);
  }
  function onPointerCancel(event, info) {
    if (!checkPointerEnd())
      return;
    onTapCancel === null || onTapCancel === void 0 ? void 0 : onTapCancel(event, info);
  }
  function onPointerDown(event, info) {
    var _a2;
    removePointerEndListener();
    if (isPressing.current)
      return;
    isPressing.current = true;
    cancelPointerEndListeners.current = pipe(addPointerEvent(window, "pointerup", onPointerUp, eventOptions), addPointerEvent(window, "pointercancel", onPointerCancel, eventOptions));
    (_a2 = visualElement2.animationState) === null || _a2 === void 0 ? void 0 : _a2.setActive(AnimationType.Tap, true);
    onTapStart === null || onTapStart === void 0 ? void 0 : onTapStart(event, info);
  }
  usePointerEvent(visualElement2, "pointerdown", hasPressListeners ? onPointerDown : void 0, eventOptions);
  useUnmountEffect(removePointerEndListener);
}

// node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs
var import_react26 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/utils/warn-once.mjs
var warned = /* @__PURE__ */ new Set();
function warnOnce(condition, message, element) {
  if (condition || warned.has(message))
    return;
  console.warn(message);
  if (element)
    console.warn(element);
  warned.add(message);
}

// node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs
var observerCallbacks = /* @__PURE__ */ new WeakMap();
var observers = /* @__PURE__ */ new WeakMap();
var fireObserverCallback = function(entry) {
  var _a;
  (_a = observerCallbacks.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry);
};
var fireAllObserverCallbacks = function(entries) {
  entries.forEach(fireObserverCallback);
};
function initIntersectionObserver(_a) {
  var root = _a.root, options = __rest(_a, ["root"]);
  var lookupRoot = root || document;
  if (!observers.has(lookupRoot)) {
    observers.set(lookupRoot, {});
  }
  var rootObservers = observers.get(lookupRoot);
  var key = JSON.stringify(options);
  if (!rootObservers[key]) {
    rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, __assign({ root }, options));
  }
  return rootObservers[key];
}
function observeIntersection(element, options, callback) {
  var rootInteresectionObserver = initIntersectionObserver(options);
  observerCallbacks.set(element, callback);
  rootInteresectionObserver.observe(element);
  return function() {
    observerCallbacks.delete(element);
    rootInteresectionObserver.unobserve(element);
  };
}

// node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs
function useViewport(_a) {
  var visualElement2 = _a.visualElement, whileInView = _a.whileInView, onViewportEnter = _a.onViewportEnter, onViewportLeave = _a.onViewportLeave, _b = _a.viewport, viewport = _b === void 0 ? {} : _b;
  var state = (0, import_react26.useRef)({
    hasEnteredView: false,
    isInView: false
  });
  var shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);
  if (viewport.once && state.current.hasEnteredView)
    shouldObserve = false;
  var useObserver = typeof IntersectionObserver === "undefined" ? useMissingIntersectionObserver : useIntersectionObserver;
  useObserver(shouldObserve, state.current, visualElement2, viewport);
}
var thresholdNames = {
  some: 0,
  all: 1
};
function useIntersectionObserver(shouldObserve, state, visualElement2, _a) {
  var root = _a.root, rootMargin = _a.margin, _b = _a.amount, amount = _b === void 0 ? "some" : _b, once = _a.once;
  (0, import_react26.useEffect)(function() {
    if (!shouldObserve)
      return;
    var options = {
      root: root === null || root === void 0 ? void 0 : root.current,
      rootMargin,
      threshold: typeof amount === "number" ? amount : thresholdNames[amount]
    };
    var intersectionCallback = function(entry) {
      var _a2;
      var isIntersecting = entry.isIntersecting;
      if (state.isInView === isIntersecting)
        return;
      state.isInView = isIntersecting;
      if (once && !isIntersecting && state.hasEnteredView) {
        return;
      } else if (isIntersecting) {
        state.hasEnteredView = true;
      }
      (_a2 = visualElement2.animationState) === null || _a2 === void 0 ? void 0 : _a2.setActive(AnimationType.InView, isIntersecting);
      var props = visualElement2.getProps();
      var callback = isIntersecting ? props.onViewportEnter : props.onViewportLeave;
      callback === null || callback === void 0 ? void 0 : callback(entry);
    };
    return observeIntersection(visualElement2.getInstance(), options, intersectionCallback);
  }, [shouldObserve, root, rootMargin, amount]);
}
function useMissingIntersectionObserver(shouldObserve, state, visualElement2, _a) {
  var _b = _a.fallback, fallback = _b === void 0 ? true : _b;
  (0, import_react26.useEffect)(function() {
    if (!shouldObserve || !fallback)
      return;
    if (env !== "production") {
      warnOnce(false, "IntersectionObserver not available on this device. whileInView animations will trigger on mount.");
    }
    requestAnimationFrame(function() {
      var _a2;
      state.hasEnteredView = true;
      var onViewportEnter = visualElement2.getProps().onViewportEnter;
      onViewportEnter === null || onViewportEnter === void 0 ? void 0 : onViewportEnter(null);
      (_a2 = visualElement2.animationState) === null || _a2 === void 0 ? void 0 : _a2.setActive(AnimationType.InView, true);
    });
  }, [shouldObserve]);
}

// node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs
var makeRenderlessComponent = function(hook) {
  return function(props) {
    hook(props);
    return null;
  };
};

// node_modules/framer-motion/dist/es/motion/features/gestures.mjs
var gestureAnimations = {
  inView: makeRenderlessComponent(useViewport),
  tap: makeRenderlessComponent(useTapGesture),
  focus: makeRenderlessComponent(useFocusGesture),
  hover: makeRenderlessComponent(useHoverGesture)
};

// node_modules/framer-motion/dist/es/motion/features/animations.mjs
var import_react28 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs
var import_react27 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/utils/use-id.mjs
var counter = 0;
var incrementId = function() {
  return counter++;
};
var useId = function() {
  return useConstant(incrementId);
};

// node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs
function usePresence() {
  var context = (0, import_react27.useContext)(PresenceContext);
  if (context === null)
    return [true, null];
  var isPresent = context.isPresent, onExitComplete = context.onExitComplete, register = context.register;
  var id2 = useId();
  (0, import_react27.useEffect)(function() {
    return register(id2);
  }, []);
  var safeToRemove = function() {
    return onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete(id2);
  };
  return !isPresent && onExitComplete ? [false, safeToRemove] : [true];
}

// node_modules/framer-motion/dist/es/utils/shallow-compare.mjs
function shallowCompare(next, prev) {
  if (!Array.isArray(prev))
    return false;
  var prevLength = prev.length;
  if (prevLength !== next.length)
    return false;
  for (var i9 = 0; i9 < prevLength; i9++) {
    if (prev[i9] !== next[i9])
      return false;
  }
  return true;
}

// node_modules/framer-motion/dist/es/utils/time-conversion.mjs
var secondsToMilliseconds = function(seconds) {
  return seconds * 1e3;
};

// node_modules/framer-motion/dist/es/animation/utils/easing.mjs
var easingLookup = {
  linear,
  easeIn,
  easeInOut,
  easeOut,
  circIn,
  circInOut,
  circOut,
  backIn,
  backInOut,
  backOut,
  anticipate,
  bounceIn,
  bounceInOut,
  bounceOut
};
var easingDefinitionToFunction = function(definition) {
  if (Array.isArray(definition)) {
    invariant(definition.length === 4, "Cubic bezier arrays must contain four numerical values.");
    var _a = __read(definition, 4), x1 = _a[0], y1 = _a[1], x22 = _a[2], y22 = _a[3];
    return cubicBezier(x1, y1, x22, y22);
  } else if (typeof definition === "string") {
    invariant(easingLookup[definition] !== void 0, "Invalid easing type '".concat(definition, "'"));
    return easingLookup[definition];
  }
  return definition;
};
var isEasingArray = function(ease) {
  return Array.isArray(ease) && typeof ease[0] !== "number";
};

// node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs
var isAnimatable = function(key, value) {
  if (key === "zIndex")
    return false;
  if (typeof value === "number" || Array.isArray(value))
    return true;
  if (typeof value === "string" && // It's animatable if we have a string
  complex.test(value) && // And it contains numbers and/or colors
  !value.startsWith("url(")) {
    return true;
  }
  return false;
};

// node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs
var underDampedSpring = function() {
  return {
    type: "spring",
    stiffness: 500,
    damping: 25,
    restSpeed: 10
  };
};
var criticallyDampedSpring = function(to2) {
  return {
    type: "spring",
    stiffness: 550,
    damping: to2 === 0 ? 2 * Math.sqrt(550) : 30,
    restSpeed: 10
  };
};
var linearTween = function() {
  return {
    type: "keyframes",
    ease: "linear",
    duration: 0.3
  };
};
var keyframes2 = function(values) {
  return {
    type: "keyframes",
    duration: 0.8,
    values
  };
};
var defaultTransitions = {
  x: underDampedSpring,
  y: underDampedSpring,
  z: underDampedSpring,
  rotate: underDampedSpring,
  rotateX: underDampedSpring,
  rotateY: underDampedSpring,
  rotateZ: underDampedSpring,
  scaleX: criticallyDampedSpring,
  scaleY: criticallyDampedSpring,
  scale: criticallyDampedSpring,
  opacity: linearTween,
  backgroundColor: linearTween,
  color: linearTween,
  default: criticallyDampedSpring
};
var getDefaultTransition = function(valueKey, to2) {
  var transitionFactory;
  if (isKeyframesTarget(to2)) {
    transitionFactory = keyframes2;
  } else {
    transitionFactory = defaultTransitions[valueKey] || defaultTransitions.default;
  }
  return __assign({ to: to2 }, transitionFactory(to2));
};

// node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs
var defaultValueTypes = __assign(__assign({}, numberValueTypes), {
  // Color props
  color,
  backgroundColor: color,
  outlineColor: color,
  fill: color,
  stroke: color,
  // Border props
  borderColor: color,
  borderTopColor: color,
  borderRightColor: color,
  borderBottomColor: color,
  borderLeftColor: color,
  filter,
  WebkitFilter: filter
});
var getDefaultValueType = function(key) {
  return defaultValueTypes[key];
};

// node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs
function getAnimatableNone2(key, value) {
  var _a;
  var defaultValueType = getDefaultValueType(key);
  if (defaultValueType !== filter)
    defaultValueType = complex;
  return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);
}

// node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs
var instantAnimationState = {
  current: false
};

// node_modules/framer-motion/dist/es/animation/utils/transitions.mjs
function isTransitionDefined(_a) {
  _a.when;
  _a.delay;
  _a.delayChildren;
  _a.staggerChildren;
  _a.staggerDirection;
  _a.repeat;
  _a.repeatType;
  _a.repeatDelay;
  _a.from;
  var transition = __rest(_a, ["when", "delay", "delayChildren", "staggerChildren", "staggerDirection", "repeat", "repeatType", "repeatDelay", "from"]);
  return !!Object.keys(transition).length;
}
var legacyRepeatWarning = false;
function convertTransitionToAnimationOptions(_a) {
  var ease = _a.ease, times = _a.times, yoyo = _a.yoyo, flip = _a.flip, loop = _a.loop, transition = __rest(_a, ["ease", "times", "yoyo", "flip", "loop"]);
  var options = __assign({}, transition);
  if (times)
    options["offset"] = times;
  if (transition.duration)
    options["duration"] = secondsToMilliseconds(transition.duration);
  if (transition.repeatDelay)
    options.repeatDelay = secondsToMilliseconds(transition.repeatDelay);
  if (ease) {
    options["ease"] = isEasingArray(ease) ? ease.map(easingDefinitionToFunction) : easingDefinitionToFunction(ease);
  }
  if (transition.type === "tween")
    options.type = "keyframes";
  if (yoyo || loop || flip) {
    warning(!legacyRepeatWarning, "yoyo, loop and flip have been removed from the API. Replace with repeat and repeatType options.");
    legacyRepeatWarning = true;
    if (yoyo) {
      options.repeatType = "reverse";
    } else if (loop) {
      options.repeatType = "loop";
    } else if (flip) {
      options.repeatType = "mirror";
    }
    options.repeat = loop || yoyo || flip || transition.repeat;
  }
  if (transition.type !== "spring")
    options.type = "keyframes";
  return options;
}
function getDelayFromTransition(transition, key) {
  var _a, _b;
  var valueTransition = getValueTransition(transition, key) || {};
  return (_b = (_a = valueTransition.delay) !== null && _a !== void 0 ? _a : transition.delay) !== null && _b !== void 0 ? _b : 0;
}
function hydrateKeyframes(options) {
  if (Array.isArray(options.to) && options.to[0] === null) {
    options.to = __spreadArray([], __read(options.to), false);
    options.to[0] = options.from;
  }
  return options;
}
function getPopmotionAnimationOptions(transition, options, key) {
  var _a;
  if (Array.isArray(options.to)) {
    (_a = transition.duration) !== null && _a !== void 0 ? _a : transition.duration = 0.8;
  }
  hydrateKeyframes(options);
  if (!isTransitionDefined(transition)) {
    transition = __assign(__assign({}, transition), getDefaultTransition(key, options.to));
  }
  return __assign(__assign({}, options), convertTransitionToAnimationOptions(transition));
}
function getAnimation(key, value, target, transition, onComplete) {
  var _a;
  var valueTransition = getValueTransition(transition, key);
  var origin = (_a = valueTransition.from) !== null && _a !== void 0 ? _a : value.get();
  var isTargetAnimatable = isAnimatable(key, target);
  if (origin === "none" && isTargetAnimatable && typeof target === "string") {
    origin = getAnimatableNone2(key, target);
  } else if (isZero(origin) && typeof target === "string") {
    origin = getZeroUnit(target);
  } else if (!Array.isArray(target) && isZero(target) && typeof origin === "string") {
    target = getZeroUnit(origin);
  }
  var isOriginAnimatable = isAnimatable(key, origin);
  warning(isOriginAnimatable === isTargetAnimatable, "You are trying to animate ".concat(key, ' from "').concat(origin, '" to "').concat(target, '". ').concat(origin, " is not an animatable value - to enable this animation set ").concat(origin, " to a value animatable to ").concat(target, " via the `style` property."));
  function start() {
    var options = {
      from: origin,
      to: target,
      velocity: value.getVelocity(),
      onComplete,
      onUpdate: function(v6) {
        return value.set(v6);
      }
    };
    return valueTransition.type === "inertia" || valueTransition.type === "decay" ? inertia(__assign(__assign({}, options), valueTransition)) : animate(__assign(__assign({}, getPopmotionAnimationOptions(valueTransition, options, key)), { onUpdate: function(v6) {
      var _a2;
      options.onUpdate(v6);
      (_a2 = valueTransition.onUpdate) === null || _a2 === void 0 ? void 0 : _a2.call(valueTransition, v6);
    }, onComplete: function() {
      var _a2;
      options.onComplete();
      (_a2 = valueTransition.onComplete) === null || _a2 === void 0 ? void 0 : _a2.call(valueTransition);
    } }));
  }
  function set() {
    var _a2, _b;
    var finalTarget = resolveFinalValueInKeyframes(target);
    value.set(finalTarget);
    onComplete();
    (_a2 = valueTransition === null || valueTransition === void 0 ? void 0 : valueTransition.onUpdate) === null || _a2 === void 0 ? void 0 : _a2.call(valueTransition, finalTarget);
    (_b = valueTransition === null || valueTransition === void 0 ? void 0 : valueTransition.onComplete) === null || _b === void 0 ? void 0 : _b.call(valueTransition);
    return { stop: function() {
    } };
  }
  return !isOriginAnimatable || !isTargetAnimatable || valueTransition.type === false ? set : start;
}
function isZero(value) {
  return value === 0 || typeof value === "string" && parseFloat(value) === 0 && value.indexOf(" ") === -1;
}
function getZeroUnit(potentialUnitType) {
  return typeof potentialUnitType === "number" ? 0 : getAnimatableNone2("", potentialUnitType);
}
function getValueTransition(transition, key) {
  return transition[key] || transition["default"] || transition;
}
function startAnimation(key, value, target, transition) {
  if (transition === void 0) {
    transition = {};
  }
  if (instantAnimationState.current) {
    transition = { type: false };
  }
  return value.start(function(onComplete) {
    var delayTimer;
    var controls;
    var animation = getAnimation(key, value, target, transition, onComplete);
    var delay = getDelayFromTransition(transition, key);
    var start = function() {
      return controls = animation();
    };
    if (delay) {
      delayTimer = window.setTimeout(start, secondsToMilliseconds(delay));
    } else {
      start();
    }
    return function() {
      clearTimeout(delayTimer);
      controls === null || controls === void 0 ? void 0 : controls.stop();
    };
  });
}

// node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs
var isNumericalString = function(v6) {
  return /^\-?\d*\.?\d+$/.test(v6);
};

// node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs
var isZeroValueString = function(v6) {
  return /^0[^.\s]+$/.test(v6);
};

// node_modules/framer-motion/dist/es/utils/array.mjs
function addUniqueItem(arr, item) {
  arr.indexOf(item) === -1 && arr.push(item);
}
function removeItem(arr, item) {
  var index2 = arr.indexOf(item);
  index2 > -1 && arr.splice(index2, 1);
}
function moveItem(_a, fromIndex, toIndex) {
  var _b = __read(_a), arr = _b.slice(0);
  var startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;
  if (startIndex >= 0 && startIndex < arr.length) {
    var endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;
    var _c = __read(arr.splice(fromIndex, 1), 1), item = _c[0];
    arr.splice(endIndex, 0, item);
  }
  return arr;
}

// node_modules/framer-motion/dist/es/utils/subscription-manager.mjs
var SubscriptionManager = (
  /** @class */
  function() {
    function SubscriptionManager2() {
      this.subscriptions = [];
    }
    SubscriptionManager2.prototype.add = function(handler) {
      var _this = this;
      addUniqueItem(this.subscriptions, handler);
      return function() {
        return removeItem(_this.subscriptions, handler);
      };
    };
    SubscriptionManager2.prototype.notify = function(a12, b9, c14) {
      var numSubscriptions = this.subscriptions.length;
      if (!numSubscriptions)
        return;
      if (numSubscriptions === 1) {
        this.subscriptions[0](a12, b9, c14);
      } else {
        for (var i9 = 0; i9 < numSubscriptions; i9++) {
          var handler = this.subscriptions[i9];
          handler && handler(a12, b9, c14);
        }
      }
    };
    SubscriptionManager2.prototype.getSize = function() {
      return this.subscriptions.length;
    };
    SubscriptionManager2.prototype.clear = function() {
      this.subscriptions.length = 0;
    };
    return SubscriptionManager2;
  }()
);

// node_modules/framer-motion/dist/es/value/index.mjs
var isFloat = function(value) {
  return !isNaN(parseFloat(value));
};
var MotionValue = (
  /** @class */
  function() {
    function MotionValue3(init) {
      var _this = this;
      this.version = "6.5.1";
      this.timeDelta = 0;
      this.lastUpdated = 0;
      this.updateSubscribers = new SubscriptionManager();
      this.velocityUpdateSubscribers = new SubscriptionManager();
      this.renderSubscribers = new SubscriptionManager();
      this.canTrackVelocity = false;
      this.updateAndNotify = function(v6, render) {
        if (render === void 0) {
          render = true;
        }
        _this.prev = _this.current;
        _this.current = v6;
        var _a = getFrameData(), delta = _a.delta, timestamp = _a.timestamp;
        if (_this.lastUpdated !== timestamp) {
          _this.timeDelta = delta;
          _this.lastUpdated = timestamp;
          es_default.postRender(_this.scheduleVelocityCheck);
        }
        if (_this.prev !== _this.current) {
          _this.updateSubscribers.notify(_this.current);
        }
        if (_this.velocityUpdateSubscribers.getSize()) {
          _this.velocityUpdateSubscribers.notify(_this.getVelocity());
        }
        if (render) {
          _this.renderSubscribers.notify(_this.current);
        }
      };
      this.scheduleVelocityCheck = function() {
        return es_default.postRender(_this.velocityCheck);
      };
      this.velocityCheck = function(_a) {
        var timestamp = _a.timestamp;
        if (timestamp !== _this.lastUpdated) {
          _this.prev = _this.current;
          _this.velocityUpdateSubscribers.notify(_this.getVelocity());
        }
      };
      this.hasAnimated = false;
      this.prev = this.current = init;
      this.canTrackVelocity = isFloat(this.current);
    }
    MotionValue3.prototype.onChange = function(subscription) {
      return this.updateSubscribers.add(subscription);
    };
    MotionValue3.prototype.clearListeners = function() {
      this.updateSubscribers.clear();
    };
    MotionValue3.prototype.onRenderRequest = function(subscription) {
      subscription(this.get());
      return this.renderSubscribers.add(subscription);
    };
    MotionValue3.prototype.attach = function(passiveEffect) {
      this.passiveEffect = passiveEffect;
    };
    MotionValue3.prototype.set = function(v6, render) {
      if (render === void 0) {
        render = true;
      }
      if (!render || !this.passiveEffect) {
        this.updateAndNotify(v6, render);
      } else {
        this.passiveEffect(v6, this.updateAndNotify);
      }
    };
    MotionValue3.prototype.get = function() {
      return this.current;
    };
    MotionValue3.prototype.getPrevious = function() {
      return this.prev;
    };
    MotionValue3.prototype.getVelocity = function() {
      return this.canTrackVelocity ? (
        // These casts could be avoided if parseFloat would be typed better
        velocityPerSecond(parseFloat(this.current) - parseFloat(this.prev), this.timeDelta)
      ) : 0;
    };
    MotionValue3.prototype.start = function(animation) {
      var _this = this;
      this.stop();
      return new Promise(function(resolve) {
        _this.hasAnimated = true;
        _this.stopAnimation = animation(resolve);
      }).then(function() {
        return _this.clearAnimation();
      });
    };
    MotionValue3.prototype.stop = function() {
      if (this.stopAnimation)
        this.stopAnimation();
      this.clearAnimation();
    };
    MotionValue3.prototype.isAnimating = function() {
      return !!this.stopAnimation;
    };
    MotionValue3.prototype.clearAnimation = function() {
      this.stopAnimation = null;
    };
    MotionValue3.prototype.destroy = function() {
      this.updateSubscribers.clear();
      this.renderSubscribers.clear();
      this.stop();
    };
    return MotionValue3;
  }()
);
function motionValue(init) {
  return new MotionValue(init);
}

// node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs
var testValueType = function(v6) {
  return function(type) {
    return type.test(v6);
  };
};

// node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs
var auto = {
  test: function(v6) {
    return v6 === "auto";
  },
  parse: function(v6) {
    return v6;
  }
};

// node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs
var dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];
var findDimensionValueType = function(v6) {
  return dimensionValueTypes.find(testValueType(v6));
};

// node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs
var valueTypes = __spreadArray(__spreadArray([], __read(dimensionValueTypes), false), [color, complex], false);
var findValueType = function(v6) {
  return valueTypes.find(testValueType(v6));
};

// node_modules/framer-motion/dist/es/render/utils/setters.mjs
function setMotionValue(visualElement2, key, value) {
  if (visualElement2.hasValue(key)) {
    visualElement2.getValue(key).set(value);
  } else {
    visualElement2.addValue(key, motionValue(value));
  }
}
function setTarget(visualElement2, definition) {
  var resolved = resolveVariant(visualElement2, definition);
  var _a = resolved ? visualElement2.makeTargetAnimatable(resolved, false) : {}, _b = _a.transitionEnd, transitionEnd = _b === void 0 ? {} : _b;
  _a.transition;
  var target = __rest(_a, ["transitionEnd", "transition"]);
  target = __assign(__assign({}, target), transitionEnd);
  for (var key in target) {
    var value = resolveFinalValueInKeyframes(target[key]);
    setMotionValue(visualElement2, key, value);
  }
}
function checkTargetForNewValues(visualElement2, target, origin) {
  var _a, _b, _c;
  var _d;
  var newValueKeys = Object.keys(target).filter(function(key2) {
    return !visualElement2.hasValue(key2);
  });
  var numNewValues = newValueKeys.length;
  if (!numNewValues)
    return;
  for (var i9 = 0; i9 < numNewValues; i9++) {
    var key = newValueKeys[i9];
    var targetValue = target[key];
    var value = null;
    if (Array.isArray(targetValue)) {
      value = targetValue[0];
    }
    if (value === null) {
      value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement2.readValue(key)) !== null && _b !== void 0 ? _b : target[key];
    }
    if (value === void 0 || value === null)
      continue;
    if (typeof value === "string" && (isNumericalString(value) || isZeroValueString(value))) {
      value = parseFloat(value);
    } else if (!findValueType(value) && complex.test(targetValue)) {
      value = getAnimatableNone2(key, targetValue);
    }
    visualElement2.addValue(key, motionValue(value));
    (_c = (_d = origin)[key]) !== null && _c !== void 0 ? _c : _d[key] = value;
    visualElement2.setBaseTarget(key, value);
  }
}
function getOriginFromTransition(key, transition) {
  if (!transition)
    return;
  var valueTransition = transition[key] || transition["default"] || transition;
  return valueTransition.from;
}
function getOrigin(target, transition, visualElement2) {
  var _a, _b;
  var origin = {};
  for (var key in target) {
    origin[key] = (_a = getOriginFromTransition(key, transition)) !== null && _a !== void 0 ? _a : (_b = visualElement2.getValue(key)) === null || _b === void 0 ? void 0 : _b.get();
  }
  return origin;
}

// node_modules/framer-motion/dist/es/render/utils/animation.mjs
function animateVisualElement(visualElement2, definition, options) {
  if (options === void 0) {
    options = {};
  }
  visualElement2.notifyAnimationStart(definition);
  var animation;
  if (Array.isArray(definition)) {
    var animations2 = definition.map(function(variant) {
      return animateVariant(visualElement2, variant, options);
    });
    animation = Promise.all(animations2);
  } else if (typeof definition === "string") {
    animation = animateVariant(visualElement2, definition, options);
  } else {
    var resolvedDefinition = typeof definition === "function" ? resolveVariant(visualElement2, definition, options.custom) : definition;
    animation = animateTarget(visualElement2, resolvedDefinition, options);
  }
  return animation.then(function() {
    return visualElement2.notifyAnimationComplete(definition);
  });
}
function animateVariant(visualElement2, variant, options) {
  var _a;
  if (options === void 0) {
    options = {};
  }
  var resolved = resolveVariant(visualElement2, variant, options.custom);
  var _b = (resolved || {}).transition, transition = _b === void 0 ? visualElement2.getDefaultTransition() || {} : _b;
  if (options.transitionOverride) {
    transition = options.transitionOverride;
  }
  var getAnimation2 = resolved ? function() {
    return animateTarget(visualElement2, resolved, options);
  } : function() {
    return Promise.resolve();
  };
  var getChildAnimations = ((_a = visualElement2.variantChildren) === null || _a === void 0 ? void 0 : _a.size) ? function(forwardDelay) {
    if (forwardDelay === void 0) {
      forwardDelay = 0;
    }
    var _a2 = transition.delayChildren, delayChildren = _a2 === void 0 ? 0 : _a2, staggerChildren = transition.staggerChildren, staggerDirection = transition.staggerDirection;
    return animateChildren(visualElement2, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);
  } : function() {
    return Promise.resolve();
  };
  var when = transition.when;
  if (when) {
    var _c = __read(when === "beforeChildren" ? [getAnimation2, getChildAnimations] : [getChildAnimations, getAnimation2], 2), first = _c[0], last = _c[1];
    return first().then(last);
  } else {
    return Promise.all([getAnimation2(), getChildAnimations(options.delay)]);
  }
}
function animateTarget(visualElement2, definition, _a) {
  var _b;
  var _c = _a === void 0 ? {} : _a, _d = _c.delay, delay = _d === void 0 ? 0 : _d, transitionOverride = _c.transitionOverride, type = _c.type;
  var _e5 = visualElement2.makeTargetAnimatable(definition), _f = _e5.transition, transition = _f === void 0 ? visualElement2.getDefaultTransition() : _f, transitionEnd = _e5.transitionEnd, target = __rest(_e5, ["transition", "transitionEnd"]);
  if (transitionOverride)
    transition = transitionOverride;
  var animations2 = [];
  var animationTypeState = type && ((_b = visualElement2.animationState) === null || _b === void 0 ? void 0 : _b.getState()[type]);
  for (var key in target) {
    var value = visualElement2.getValue(key);
    var valueTarget = target[key];
    if (!value || valueTarget === void 0 || animationTypeState && shouldBlockAnimation(animationTypeState, key)) {
      continue;
    }
    var valueTransition = __assign({ delay }, transition);
    if (visualElement2.shouldReduceMotion && isTransformProp(key)) {
      valueTransition = __assign(__assign({}, valueTransition), { type: false, delay: 0 });
    }
    var animation = startAnimation(key, value, valueTarget, valueTransition);
    animations2.push(animation);
  }
  return Promise.all(animations2).then(function() {
    transitionEnd && setTarget(visualElement2, transitionEnd);
  });
}
function animateChildren(visualElement2, variant, delayChildren, staggerChildren, staggerDirection, options) {
  if (delayChildren === void 0) {
    delayChildren = 0;
  }
  if (staggerChildren === void 0) {
    staggerChildren = 0;
  }
  if (staggerDirection === void 0) {
    staggerDirection = 1;
  }
  var animations2 = [];
  var maxStaggerDuration = (visualElement2.variantChildren.size - 1) * staggerChildren;
  var generateStaggerDuration = staggerDirection === 1 ? function(i9) {
    if (i9 === void 0) {
      i9 = 0;
    }
    return i9 * staggerChildren;
  } : function(i9) {
    if (i9 === void 0) {
      i9 = 0;
    }
    return maxStaggerDuration - i9 * staggerChildren;
  };
  Array.from(visualElement2.variantChildren).sort(sortByTreeOrder).forEach(function(child, i9) {
    animations2.push(animateVariant(child, variant, __assign(__assign({}, options), { delay: delayChildren + generateStaggerDuration(i9) })).then(function() {
      return child.notifyAnimationComplete(variant);
    }));
  });
  return Promise.all(animations2);
}
function sortByTreeOrder(a12, b9) {
  return a12.sortNodePosition(b9);
}
function shouldBlockAnimation(_a, key) {
  var protectedKeys = _a.protectedKeys, needsAnimating = _a.needsAnimating;
  var shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;
  needsAnimating[key] = false;
  return shouldBlock;
}

// node_modules/framer-motion/dist/es/render/utils/animation-state.mjs
var variantPriorityOrder = [
  AnimationType.Animate,
  AnimationType.InView,
  AnimationType.Focus,
  AnimationType.Hover,
  AnimationType.Tap,
  AnimationType.Drag,
  AnimationType.Exit
];
var reversePriorityOrder = __spreadArray([], __read(variantPriorityOrder), false).reverse();
var numAnimationTypes = variantPriorityOrder.length;
function animateList(visualElement2) {
  return function(animations2) {
    return Promise.all(animations2.map(function(_a) {
      var animation = _a.animation, options = _a.options;
      return animateVisualElement(visualElement2, animation, options);
    }));
  };
}
function createAnimationState(visualElement2) {
  var animate4 = animateList(visualElement2);
  var state = createState();
  var allAnimatedKeys = {};
  var isInitialRender = true;
  var buildResolvedTypeValues = function(acc, definition) {
    var resolved = resolveVariant(visualElement2, definition);
    if (resolved) {
      resolved.transition;
      var transitionEnd = resolved.transitionEnd, target = __rest(resolved, ["transition", "transitionEnd"]);
      acc = __assign(__assign(__assign({}, acc), target), transitionEnd);
    }
    return acc;
  };
  function isAnimated(key) {
    return allAnimatedKeys[key] !== void 0;
  }
  function setAnimateFunction(makeAnimator) {
    animate4 = makeAnimator(visualElement2);
  }
  function animateChanges(options, changedActiveType) {
    var _a;
    var props = visualElement2.getProps();
    var context = visualElement2.getVariantContext(true) || {};
    var animations2 = [];
    var removedKeys = /* @__PURE__ */ new Set();
    var encounteredKeys = {};
    var removedVariantIndex = Infinity;
    var _loop_1 = function(i10) {
      var type = reversePriorityOrder[i10];
      var typeState = state[type];
      var prop = (_a = props[type]) !== null && _a !== void 0 ? _a : context[type];
      var propIsVariant = isVariantLabel(prop);
      var activeDelta = type === changedActiveType ? typeState.isActive : null;
      if (activeDelta === false)
        removedVariantIndex = i10;
      var isInherited = prop === context[type] && prop !== props[type] && propIsVariant;
      if (isInherited && isInitialRender && visualElement2.manuallyAnimateOnMount) {
        isInherited = false;
      }
      typeState.protectedKeys = __assign({}, encounteredKeys);
      if (
        // If it isn't active and hasn't *just* been set as inactive
        !typeState.isActive && activeDelta === null || // If we didn't and don't have any defined prop for this animation type
        !prop && !typeState.prevProp || // Or if the prop doesn't define an animation
        isAnimationControls(prop) || typeof prop === "boolean"
      ) {
        return "continue";
      }
      var variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);
      var shouldAnimateType = variantDidChange || // If we're making this variant active, we want to always make it active
      type === changedActiveType && typeState.isActive && !isInherited && propIsVariant || // If we removed a higher-priority variant (i is in reverse order)
      i10 > removedVariantIndex && propIsVariant;
      var definitionList = Array.isArray(prop) ? prop : [prop];
      var resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});
      if (activeDelta === false)
        resolvedValues = {};
      var _b = typeState.prevResolvedValues, prevResolvedValues = _b === void 0 ? {} : _b;
      var allKeys = __assign(__assign({}, prevResolvedValues), resolvedValues);
      var markToAnimate = function(key2) {
        shouldAnimateType = true;
        removedKeys.delete(key2);
        typeState.needsAnimating[key2] = true;
      };
      for (var key in allKeys) {
        var next = resolvedValues[key];
        var prev = prevResolvedValues[key];
        if (encounteredKeys.hasOwnProperty(key))
          continue;
        if (next !== prev) {
          if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {
            if (!shallowCompare(next, prev) || variantDidChange) {
              markToAnimate(key);
            } else {
              typeState.protectedKeys[key] = true;
            }
          } else if (next !== void 0) {
            markToAnimate(key);
          } else {
            removedKeys.add(key);
          }
        } else if (next !== void 0 && removedKeys.has(key)) {
          markToAnimate(key);
        } else {
          typeState.protectedKeys[key] = true;
        }
      }
      typeState.prevProp = prop;
      typeState.prevResolvedValues = resolvedValues;
      if (typeState.isActive) {
        encounteredKeys = __assign(__assign({}, encounteredKeys), resolvedValues);
      }
      if (isInitialRender && visualElement2.blockInitialAnimation) {
        shouldAnimateType = false;
      }
      if (shouldAnimateType && !isInherited) {
        animations2.push.apply(animations2, __spreadArray([], __read(definitionList.map(function(animation) {
          return {
            animation,
            options: __assign({ type }, options)
          };
        })), false));
      }
    };
    for (var i9 = 0; i9 < numAnimationTypes; i9++) {
      _loop_1(i9);
    }
    allAnimatedKeys = __assign({}, encounteredKeys);
    if (removedKeys.size) {
      var fallbackAnimation_1 = {};
      removedKeys.forEach(function(key) {
        var fallbackTarget = visualElement2.getBaseTarget(key);
        if (fallbackTarget !== void 0) {
          fallbackAnimation_1[key] = fallbackTarget;
        }
      });
      animations2.push({ animation: fallbackAnimation_1 });
    }
    var shouldAnimate = Boolean(animations2.length);
    if (isInitialRender && props.initial === false && !visualElement2.manuallyAnimateOnMount) {
      shouldAnimate = false;
    }
    isInitialRender = false;
    return shouldAnimate ? animate4(animations2) : Promise.resolve();
  }
  function setActive(type, isActive, options) {
    var _a;
    if (state[type].isActive === isActive)
      return Promise.resolve();
    (_a = visualElement2.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach(function(child) {
      var _a2;
      return (_a2 = child.animationState) === null || _a2 === void 0 ? void 0 : _a2.setActive(type, isActive);
    });
    state[type].isActive = isActive;
    var animations2 = animateChanges(options, type);
    for (var key in state) {
      state[key].protectedKeys = {};
    }
    return animations2;
  }
  return {
    isAnimated,
    animateChanges,
    setActive,
    setAnimateFunction,
    getState: function() {
      return state;
    }
  };
}
function checkVariantsDidChange(prev, next) {
  if (typeof next === "string") {
    return next !== prev;
  } else if (isVariantLabels(next)) {
    return !shallowCompare(next, prev);
  }
  return false;
}
function createTypeState(isActive) {
  if (isActive === void 0) {
    isActive = false;
  }
  return {
    isActive,
    protectedKeys: {},
    needsAnimating: {},
    prevResolvedValues: {}
  };
}
function createState() {
  var _a;
  return _a = {}, _a[AnimationType.Animate] = createTypeState(true), _a[AnimationType.InView] = createTypeState(), _a[AnimationType.Hover] = createTypeState(), _a[AnimationType.Tap] = createTypeState(), _a[AnimationType.Drag] = createTypeState(), _a[AnimationType.Focus] = createTypeState(), _a[AnimationType.Exit] = createTypeState(), _a;
}

// node_modules/framer-motion/dist/es/motion/features/animations.mjs
var animations = {
  animation: makeRenderlessComponent(function(_a) {
    var visualElement2 = _a.visualElement, animate4 = _a.animate;
    visualElement2.animationState || (visualElement2.animationState = createAnimationState(visualElement2));
    if (isAnimationControls(animate4)) {
      (0, import_react28.useEffect)(function() {
        return animate4.subscribe(visualElement2);
      }, [animate4]);
    }
  }),
  exit: makeRenderlessComponent(function(props) {
    var custom = props.custom, visualElement2 = props.visualElement;
    var _a = __read(usePresence(), 2), isPresent = _a[0], safeToRemove = _a[1];
    var presenceContext = (0, import_react28.useContext)(PresenceContext);
    (0, import_react28.useEffect)(function() {
      var _a2, _b;
      visualElement2.isPresent = isPresent;
      var animation = (_a2 = visualElement2.animationState) === null || _a2 === void 0 ? void 0 : _a2.setActive(AnimationType.Exit, !isPresent, { custom: (_b = presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.custom) !== null && _b !== void 0 ? _b : custom });
      !isPresent && (animation === null || animation === void 0 ? void 0 : animation.then(safeToRemove));
    }, [isPresent]);
  })
};

// node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs
var import_react29 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/gestures/PanSession.mjs
var PanSession = (
  /** @class */
  function() {
    function PanSession2(event, handlers, _a) {
      var _this = this;
      var _b = _a === void 0 ? {} : _a, transformPagePoint = _b.transformPagePoint;
      this.startEvent = null;
      this.lastMoveEvent = null;
      this.lastMoveEventInfo = null;
      this.handlers = {};
      this.updatePoint = function() {
        if (!(_this.lastMoveEvent && _this.lastMoveEventInfo))
          return;
        var info2 = getPanInfo(_this.lastMoveEventInfo, _this.history);
        var isPanStarted = _this.startEvent !== null;
        var isDistancePastThreshold = distance(info2.offset, { x: 0, y: 0 }) >= 3;
        if (!isPanStarted && !isDistancePastThreshold)
          return;
        var point2 = info2.point;
        var timestamp2 = getFrameData().timestamp;
        _this.history.push(__assign(__assign({}, point2), { timestamp: timestamp2 }));
        var _a2 = _this.handlers, onStart = _a2.onStart, onMove = _a2.onMove;
        if (!isPanStarted) {
          onStart && onStart(_this.lastMoveEvent, info2);
          _this.startEvent = _this.lastMoveEvent;
        }
        onMove && onMove(_this.lastMoveEvent, info2);
      };
      this.handlePointerMove = function(event2, info2) {
        _this.lastMoveEvent = event2;
        _this.lastMoveEventInfo = transformPoint(info2, _this.transformPagePoint);
        if (isMouseEvent(event2) && event2.buttons === 0) {
          _this.handlePointerUp(event2, info2);
          return;
        }
        es_default.update(_this.updatePoint, true);
      };
      this.handlePointerUp = function(event2, info2) {
        _this.end();
        var _a2 = _this.handlers, onEnd = _a2.onEnd, onSessionEnd = _a2.onSessionEnd;
        var panInfo = getPanInfo(transformPoint(info2, _this.transformPagePoint), _this.history);
        if (_this.startEvent && onEnd) {
          onEnd(event2, panInfo);
        }
        onSessionEnd && onSessionEnd(event2, panInfo);
      };
      if (isTouchEvent(event) && event.touches.length > 1)
        return;
      this.handlers = handlers;
      this.transformPagePoint = transformPagePoint;
      var info = extractEventInfo(event);
      var initialInfo = transformPoint(info, this.transformPagePoint);
      var point = initialInfo.point;
      var timestamp = getFrameData().timestamp;
      this.history = [__assign(__assign({}, point), { timestamp })];
      var onSessionStart = handlers.onSessionStart;
      onSessionStart && onSessionStart(event, getPanInfo(initialInfo, this.history));
      this.removeListeners = pipe(addPointerEvent(window, "pointermove", this.handlePointerMove), addPointerEvent(window, "pointerup", this.handlePointerUp), addPointerEvent(window, "pointercancel", this.handlePointerUp));
    }
    PanSession2.prototype.updateHandlers = function(handlers) {
      this.handlers = handlers;
    };
    PanSession2.prototype.end = function() {
      this.removeListeners && this.removeListeners();
      cancelSync.update(this.updatePoint);
    };
    return PanSession2;
  }()
);
function transformPoint(info, transformPagePoint) {
  return transformPagePoint ? { point: transformPagePoint(info.point) } : info;
}
function subtractPoint(a12, b9) {
  return { x: a12.x - b9.x, y: a12.y - b9.y };
}
function getPanInfo(_a, history) {
  var point = _a.point;
  return {
    point,
    delta: subtractPoint(point, lastDevicePoint(history)),
    offset: subtractPoint(point, startDevicePoint(history)),
    velocity: getVelocity2(history, 0.1)
  };
}
function startDevicePoint(history) {
  return history[0];
}
function lastDevicePoint(history) {
  return history[history.length - 1];
}
function getVelocity2(history, timeDelta) {
  if (history.length < 2) {
    return { x: 0, y: 0 };
  }
  var i9 = history.length - 1;
  var timestampedPoint = null;
  var lastPoint = lastDevicePoint(history);
  while (i9 >= 0) {
    timestampedPoint = history[i9];
    if (lastPoint.timestamp - timestampedPoint.timestamp > secondsToMilliseconds(timeDelta)) {
      break;
    }
    i9--;
  }
  if (!timestampedPoint) {
    return { x: 0, y: 0 };
  }
  var time2 = (lastPoint.timestamp - timestampedPoint.timestamp) / 1e3;
  if (time2 === 0) {
    return { x: 0, y: 0 };
  }
  var currentVelocity = {
    x: (lastPoint.x - timestampedPoint.x) / time2,
    y: (lastPoint.y - timestampedPoint.y) / time2
  };
  if (currentVelocity.x === Infinity) {
    currentVelocity.x = 0;
  }
  if (currentVelocity.y === Infinity) {
    currentVelocity.y = 0;
  }
  return currentVelocity;
}

// node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs
function calcLength(axis) {
  return axis.max - axis.min;
}
function isNear(value, target, maxDistance) {
  if (target === void 0) {
    target = 0;
  }
  if (maxDistance === void 0) {
    maxDistance = 0.01;
  }
  return distance(value, target) < maxDistance;
}
function calcAxisDelta(delta, source, target, origin) {
  if (origin === void 0) {
    origin = 0.5;
  }
  delta.origin = origin;
  delta.originPoint = mix(source.min, source.max, delta.origin);
  delta.scale = calcLength(target) / calcLength(source);
  if (isNear(delta.scale, 1, 1e-4) || isNaN(delta.scale))
    delta.scale = 1;
  delta.translate = mix(target.min, target.max, delta.origin) - delta.originPoint;
  if (isNear(delta.translate) || isNaN(delta.translate))
    delta.translate = 0;
}
function calcBoxDelta(delta, source, target, origin) {
  calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);
  calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);
}
function calcRelativeAxis(target, relative, parent) {
  target.min = parent.min + relative.min;
  target.max = target.min + calcLength(relative);
}
function calcRelativeBox(target, relative, parent) {
  calcRelativeAxis(target.x, relative.x, parent.x);
  calcRelativeAxis(target.y, relative.y, parent.y);
}
function calcRelativeAxisPosition(target, layout, parent) {
  target.min = layout.min - parent.min;
  target.max = target.min + calcLength(layout);
}
function calcRelativePosition(target, layout, parent) {
  calcRelativeAxisPosition(target.x, layout.x, parent.x);
  calcRelativeAxisPosition(target.y, layout.y, parent.y);
}

// node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs
function applyConstraints(point, _a, elastic) {
  var min = _a.min, max = _a.max;
  if (min !== void 0 && point < min) {
    point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);
  } else if (max !== void 0 && point > max) {
    point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);
  }
  return point;
}
function calcRelativeAxisConstraints(axis, min, max) {
  return {
    min: min !== void 0 ? axis.min + min : void 0,
    max: max !== void 0 ? axis.max + max - (axis.max - axis.min) : void 0
  };
}
function calcRelativeConstraints(layoutBox, _a) {
  var top = _a.top, left = _a.left, bottom = _a.bottom, right = _a.right;
  return {
    x: calcRelativeAxisConstraints(layoutBox.x, left, right),
    y: calcRelativeAxisConstraints(layoutBox.y, top, bottom)
  };
}
function calcViewportAxisConstraints(layoutAxis, constraintsAxis) {
  var _a;
  var min = constraintsAxis.min - layoutAxis.min;
  var max = constraintsAxis.max - layoutAxis.max;
  if (constraintsAxis.max - constraintsAxis.min < layoutAxis.max - layoutAxis.min) {
    _a = __read([max, min], 2), min = _a[0], max = _a[1];
  }
  return { min, max };
}
function calcViewportConstraints(layoutBox, constraintsBox) {
  return {
    x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),
    y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y)
  };
}
function calcOrigin2(source, target) {
  var origin = 0.5;
  var sourceLength = calcLength(source);
  var targetLength = calcLength(target);
  if (targetLength > sourceLength) {
    origin = progress(target.min, target.max - sourceLength, source.min);
  } else if (sourceLength > targetLength) {
    origin = progress(source.min, source.max - targetLength, target.min);
  }
  return clamp2(0, 1, origin);
}
function rebaseAxisConstraints(layout, constraints) {
  var relativeConstraints = {};
  if (constraints.min !== void 0) {
    relativeConstraints.min = constraints.min - layout.min;
  }
  if (constraints.max !== void 0) {
    relativeConstraints.max = constraints.max - layout.min;
  }
  return relativeConstraints;
}
var defaultElastic = 0.35;
function resolveDragElastic(dragElastic) {
  if (dragElastic === void 0) {
    dragElastic = defaultElastic;
  }
  if (dragElastic === false) {
    dragElastic = 0;
  } else if (dragElastic === true) {
    dragElastic = defaultElastic;
  }
  return {
    x: resolveAxisElastic(dragElastic, "left", "right"),
    y: resolveAxisElastic(dragElastic, "top", "bottom")
  };
}
function resolveAxisElastic(dragElastic, minLabel, maxLabel) {
  return {
    min: resolvePointElastic(dragElastic, minLabel),
    max: resolvePointElastic(dragElastic, maxLabel)
  };
}
function resolvePointElastic(dragElastic, label) {
  var _a;
  return typeof dragElastic === "number" ? dragElastic : (_a = dragElastic[label]) !== null && _a !== void 0 ? _a : 0;
}

// node_modules/framer-motion/dist/es/projection/geometry/models.mjs
var createAxisDelta = function() {
  return {
    translate: 0,
    scale: 1,
    origin: 0,
    originPoint: 0
  };
};
var createDelta = function() {
  return {
    x: createAxisDelta(),
    y: createAxisDelta()
  };
};
var createAxis = function() {
  return { min: 0, max: 0 };
};
var createBox = function() {
  return {
    x: createAxis(),
    y: createAxis()
  };
};

// node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs
function eachAxis(callback) {
  return [callback("x"), callback("y")];
}

// node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs
function convertBoundingBoxToBox(_a) {
  var top = _a.top, left = _a.left, right = _a.right, bottom = _a.bottom;
  return {
    x: { min: left, max: right },
    y: { min: top, max: bottom }
  };
}
function convertBoxToBoundingBox(_a) {
  var x4 = _a.x, y7 = _a.y;
  return { top: y7.min, right: x4.max, bottom: y7.max, left: x4.min };
}
function transformBoxPoints(point, transformPoint2) {
  if (!transformPoint2)
    return point;
  var topLeft = transformPoint2({ x: point.left, y: point.top });
  var bottomRight = transformPoint2({ x: point.right, y: point.bottom });
  return {
    top: topLeft.y,
    left: topLeft.x,
    bottom: bottomRight.y,
    right: bottomRight.x
  };
}

// node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs
function isIdentityScale(scale2) {
  return scale2 === void 0 || scale2 === 1;
}
function hasScale(_a) {
  var scale2 = _a.scale, scaleX = _a.scaleX, scaleY = _a.scaleY;
  return !isIdentityScale(scale2) || !isIdentityScale(scaleX) || !isIdentityScale(scaleY);
}
function hasTransform(values) {
  return hasScale(values) || hasTranslate(values.x) || hasTranslate(values.y) || values.z || values.rotate || values.rotateX || values.rotateY;
}
function hasTranslate(value) {
  return value && value !== "0%";
}

// node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs
function scalePoint(point, scale2, originPoint) {
  var distanceFromOrigin = point - originPoint;
  var scaled = scale2 * distanceFromOrigin;
  return originPoint + scaled;
}
function applyPointDelta(point, translate, scale2, originPoint, boxScale) {
  if (boxScale !== void 0) {
    point = scalePoint(point, boxScale, originPoint);
  }
  return scalePoint(point, scale2, originPoint) + translate;
}
function applyAxisDelta(axis, translate, scale2, originPoint, boxScale) {
  if (translate === void 0) {
    translate = 0;
  }
  if (scale2 === void 0) {
    scale2 = 1;
  }
  axis.min = applyPointDelta(axis.min, translate, scale2, originPoint, boxScale);
  axis.max = applyPointDelta(axis.max, translate, scale2, originPoint, boxScale);
}
function applyBoxDelta(box, _a) {
  var x4 = _a.x, y7 = _a.y;
  applyAxisDelta(box.x, x4.translate, x4.scale, x4.originPoint);
  applyAxisDelta(box.y, y7.translate, y7.scale, y7.originPoint);
}
function applyTreeDeltas(box, treeScale, treePath, isSharedTransition) {
  var _a, _b;
  if (isSharedTransition === void 0) {
    isSharedTransition = false;
  }
  var treeLength = treePath.length;
  if (!treeLength)
    return;
  treeScale.x = treeScale.y = 1;
  var node;
  var delta;
  for (var i9 = 0; i9 < treeLength; i9++) {
    node = treePath[i9];
    delta = node.projectionDelta;
    if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === "contents")
      continue;
    if (isSharedTransition && node.options.layoutScroll && node.scroll && node !== node.root) {
      transformBox(box, { x: -node.scroll.x, y: -node.scroll.y });
    }
    if (delta) {
      treeScale.x *= delta.x.scale;
      treeScale.y *= delta.y.scale;
      applyBoxDelta(box, delta);
    }
    if (isSharedTransition && hasTransform(node.latestValues)) {
      transformBox(box, node.latestValues);
    }
  }
}
function translateAxis(axis, distance2) {
  axis.min = axis.min + distance2;
  axis.max = axis.max + distance2;
}
function transformAxis(axis, transforms2, _a) {
  var _b = __read(_a, 3), key = _b[0], scaleKey = _b[1], originKey = _b[2];
  var axisOrigin = transforms2[originKey] !== void 0 ? transforms2[originKey] : 0.5;
  var originPoint = mix(axis.min, axis.max, axisOrigin);
  applyAxisDelta(axis, transforms2[key], transforms2[scaleKey], originPoint, transforms2.scale);
}
var xKeys = ["x", "scaleX", "originX"];
var yKeys = ["y", "scaleY", "originY"];
function transformBox(box, transform2) {
  transformAxis(box.x, transform2, xKeys);
  transformAxis(box.y, transform2, yKeys);
}

// node_modules/framer-motion/dist/es/projection/utils/measure.mjs
function measureViewportBox(instance, transformPoint2) {
  return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint2));
}
function measurePageBox(element, rootProjectionNode2, transformPagePoint) {
  var viewportBox = measureViewportBox(element, transformPagePoint);
  var scroll2 = rootProjectionNode2.scroll;
  if (scroll2) {
    translateAxis(viewportBox.x, scroll2.x);
    translateAxis(viewportBox.y, scroll2.y);
  }
  return viewportBox;
}

// node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs
var elementDragControls = /* @__PURE__ */ new WeakMap();
var VisualElementDragControls = (
  /** @class */
  function() {
    function VisualElementDragControls2(visualElement2) {
      this.openGlobalLock = null;
      this.isDragging = false;
      this.currentDirection = null;
      this.originPoint = { x: 0, y: 0 };
      this.constraints = false;
      this.hasMutatedConstraints = false;
      this.elastic = createBox();
      this.visualElement = visualElement2;
    }
    VisualElementDragControls2.prototype.start = function(originEvent, _a) {
      var _this = this;
      var _b = _a === void 0 ? {} : _a, _c = _b.snapToCursor, snapToCursor = _c === void 0 ? false : _c;
      if (this.visualElement.isPresent === false)
        return;
      var onSessionStart = function(event) {
        _this.stopAnimation();
        if (snapToCursor) {
          _this.snapToCursor(extractEventInfo(event, "page").point);
        }
      };
      var onStart = function(event, info) {
        var _a2;
        var _b2 = _this.getProps(), drag2 = _b2.drag, dragPropagation = _b2.dragPropagation, onDragStart = _b2.onDragStart;
        if (drag2 && !dragPropagation) {
          if (_this.openGlobalLock)
            _this.openGlobalLock();
          _this.openGlobalLock = getGlobalLock(drag2);
          if (!_this.openGlobalLock)
            return;
        }
        _this.isDragging = true;
        _this.currentDirection = null;
        _this.resolveConstraints();
        if (_this.visualElement.projection) {
          _this.visualElement.projection.isAnimationBlocked = true;
          _this.visualElement.projection.target = void 0;
        }
        eachAxis(function(axis) {
          var _a3, _b3;
          var current = _this.getAxisMotionValue(axis).get() || 0;
          if (percent.test(current)) {
            var measuredAxis = (_b3 = (_a3 = _this.visualElement.projection) === null || _a3 === void 0 ? void 0 : _a3.layout) === null || _b3 === void 0 ? void 0 : _b3.actual[axis];
            if (measuredAxis) {
              var length_1 = calcLength(measuredAxis);
              current = length_1 * (parseFloat(current) / 100);
            }
          }
          _this.originPoint[axis] = current;
        });
        onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);
        (_a2 = _this.visualElement.animationState) === null || _a2 === void 0 ? void 0 : _a2.setActive(AnimationType.Drag, true);
      };
      var onMove = function(event, info) {
        var _a2 = _this.getProps(), dragPropagation = _a2.dragPropagation, dragDirectionLock = _a2.dragDirectionLock, onDirectionLock = _a2.onDirectionLock, onDrag = _a2.onDrag;
        if (!dragPropagation && !_this.openGlobalLock)
          return;
        var offset = info.offset;
        if (dragDirectionLock && _this.currentDirection === null) {
          _this.currentDirection = getCurrentDirection(offset);
          if (_this.currentDirection !== null) {
            onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(_this.currentDirection);
          }
          return;
        }
        _this.updateAxis("x", info.point, offset);
        _this.updateAxis("y", info.point, offset);
        _this.visualElement.syncRender();
        onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);
      };
      var onSessionEnd = function(event, info) {
        return _this.stop(event, info);
      };
      this.panSession = new PanSession(originEvent, {
        onSessionStart,
        onStart,
        onMove,
        onSessionEnd
      }, { transformPagePoint: this.visualElement.getTransformPagePoint() });
    };
    VisualElementDragControls2.prototype.stop = function(event, info) {
      var isDragging = this.isDragging;
      this.cancel();
      if (!isDragging)
        return;
      var velocity = info.velocity;
      this.startAnimation(velocity);
      var onDragEnd = this.getProps().onDragEnd;
      onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);
    };
    VisualElementDragControls2.prototype.cancel = function() {
      var _a, _b;
      this.isDragging = false;
      if (this.visualElement.projection) {
        this.visualElement.projection.isAnimationBlocked = false;
      }
      (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();
      this.panSession = void 0;
      var dragPropagation = this.getProps().dragPropagation;
      if (!dragPropagation && this.openGlobalLock) {
        this.openGlobalLock();
        this.openGlobalLock = null;
      }
      (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);
    };
    VisualElementDragControls2.prototype.updateAxis = function(axis, _point, offset) {
      var drag2 = this.getProps().drag;
      if (!offset || !shouldDrag(axis, drag2, this.currentDirection))
        return;
      var axisValue = this.getAxisMotionValue(axis);
      var next = this.originPoint[axis] + offset[axis];
      if (this.constraints && this.constraints[axis]) {
        next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);
      }
      axisValue.set(next);
    };
    VisualElementDragControls2.prototype.resolveConstraints = function() {
      var _this = this;
      var _a = this.getProps(), dragConstraints = _a.dragConstraints, dragElastic = _a.dragElastic;
      var layout = (this.visualElement.projection || {}).layout;
      var prevConstraints = this.constraints;
      if (dragConstraints && isRefObject(dragConstraints)) {
        if (!this.constraints) {
          this.constraints = this.resolveRefConstraints();
        }
      } else {
        if (dragConstraints && layout) {
          this.constraints = calcRelativeConstraints(layout.actual, dragConstraints);
        } else {
          this.constraints = false;
        }
      }
      this.elastic = resolveDragElastic(dragElastic);
      if (prevConstraints !== this.constraints && layout && this.constraints && !this.hasMutatedConstraints) {
        eachAxis(function(axis) {
          if (_this.getAxisMotionValue(axis)) {
            _this.constraints[axis] = rebaseAxisConstraints(layout.actual[axis], _this.constraints[axis]);
          }
        });
      }
    };
    VisualElementDragControls2.prototype.resolveRefConstraints = function() {
      var _a = this.getProps(), constraints = _a.dragConstraints, onMeasureDragConstraints = _a.onMeasureDragConstraints;
      if (!constraints || !isRefObject(constraints))
        return false;
      var constraintsElement = constraints.current;
      invariant(constraintsElement !== null, "If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.");
      var projection = this.visualElement.projection;
      if (!projection || !projection.layout)
        return false;
      var constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());
      var measuredConstraints = calcViewportConstraints(projection.layout.actual, constraintsBox);
      if (onMeasureDragConstraints) {
        var userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));
        this.hasMutatedConstraints = !!userConstraints;
        if (userConstraints) {
          measuredConstraints = convertBoundingBoxToBox(userConstraints);
        }
      }
      return measuredConstraints;
    };
    VisualElementDragControls2.prototype.startAnimation = function(velocity) {
      var _this = this;
      var _a = this.getProps(), drag2 = _a.drag, dragMomentum = _a.dragMomentum, dragElastic = _a.dragElastic, dragTransition = _a.dragTransition, dragSnapToOrigin = _a.dragSnapToOrigin, onDragTransitionEnd = _a.onDragTransitionEnd;
      var constraints = this.constraints || {};
      var momentumAnimations = eachAxis(function(axis) {
        var _a2;
        if (!shouldDrag(axis, drag2, _this.currentDirection)) {
          return;
        }
        var transition = (_a2 = constraints === null || constraints === void 0 ? void 0 : constraints[axis]) !== null && _a2 !== void 0 ? _a2 : {};
        if (dragSnapToOrigin)
          transition = { min: 0, max: 0 };
        var bounceStiffness = dragElastic ? 200 : 1e6;
        var bounceDamping = dragElastic ? 40 : 1e7;
        var inertia2 = __assign(__assign({ type: "inertia", velocity: dragMomentum ? velocity[axis] : 0, bounceStiffness, bounceDamping, timeConstant: 750, restDelta: 1, restSpeed: 10 }, dragTransition), transition);
        return _this.startAxisValueAnimation(axis, inertia2);
      });
      return Promise.all(momentumAnimations).then(onDragTransitionEnd);
    };
    VisualElementDragControls2.prototype.startAxisValueAnimation = function(axis, transition) {
      var axisValue = this.getAxisMotionValue(axis);
      return startAnimation(axis, axisValue, 0, transition);
    };
    VisualElementDragControls2.prototype.stopAnimation = function() {
      var _this = this;
      eachAxis(function(axis) {
        return _this.getAxisMotionValue(axis).stop();
      });
    };
    VisualElementDragControls2.prototype.getAxisMotionValue = function(axis) {
      var _a, _b;
      var dragKey = "_drag" + axis.toUpperCase();
      var externalMotionValue = this.visualElement.getProps()[dragKey];
      return externalMotionValue ? externalMotionValue : this.visualElement.getValue(axis, (_b = (_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) !== null && _b !== void 0 ? _b : 0);
    };
    VisualElementDragControls2.prototype.snapToCursor = function(point) {
      var _this = this;
      eachAxis(function(axis) {
        var drag2 = _this.getProps().drag;
        if (!shouldDrag(axis, drag2, _this.currentDirection))
          return;
        var projection = _this.visualElement.projection;
        var axisValue = _this.getAxisMotionValue(axis);
        if (projection && projection.layout) {
          var _a = projection.layout.actual[axis], min = _a.min, max = _a.max;
          axisValue.set(point[axis] - mix(min, max, 0.5));
        }
      });
    };
    VisualElementDragControls2.prototype.scalePositionWithinConstraints = function() {
      var _this = this;
      var _a;
      var _b = this.getProps(), drag2 = _b.drag, dragConstraints = _b.dragConstraints;
      var projection = this.visualElement.projection;
      if (!isRefObject(dragConstraints) || !projection || !this.constraints)
        return;
      this.stopAnimation();
      var boxProgress = { x: 0, y: 0 };
      eachAxis(function(axis) {
        var axisValue = _this.getAxisMotionValue(axis);
        if (axisValue) {
          var latest = axisValue.get();
          boxProgress[axis] = calcOrigin2({ min: latest, max: latest }, _this.constraints[axis]);
        }
      });
      var transformTemplate = this.visualElement.getProps().transformTemplate;
      this.visualElement.getInstance().style.transform = transformTemplate ? transformTemplate({}, "") : "none";
      (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();
      projection.updateLayout();
      this.resolveConstraints();
      eachAxis(function(axis) {
        if (!shouldDrag(axis, drag2, null))
          return;
        var axisValue = _this.getAxisMotionValue(axis);
        var _a2 = _this.constraints[axis], min = _a2.min, max = _a2.max;
        axisValue.set(mix(min, max, boxProgress[axis]));
      });
    };
    VisualElementDragControls2.prototype.addListeners = function() {
      var _this = this;
      var _a;
      elementDragControls.set(this.visualElement, this);
      var element = this.visualElement.getInstance();
      var stopPointerListener = addPointerEvent(element, "pointerdown", function(event) {
        var _a2 = _this.getProps(), drag2 = _a2.drag, _b = _a2.dragListener, dragListener = _b === void 0 ? true : _b;
        drag2 && dragListener && _this.start(event);
      });
      var measureDragConstraints = function() {
        var dragConstraints = _this.getProps().dragConstraints;
        if (isRefObject(dragConstraints)) {
          _this.constraints = _this.resolveRefConstraints();
        }
      };
      var projection = this.visualElement.projection;
      var stopMeasureLayoutListener = projection.addEventListener("measure", measureDragConstraints);
      if (projection && !projection.layout) {
        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();
        projection.updateLayout();
      }
      measureDragConstraints();
      var stopResizeListener = addDomEvent(window, "resize", function() {
        return _this.scalePositionWithinConstraints();
      });
      projection.addEventListener("didUpdate", function(_a2) {
        var delta = _a2.delta, hasLayoutChanged = _a2.hasLayoutChanged;
        if (_this.isDragging && hasLayoutChanged) {
          eachAxis(function(axis) {
            var motionValue2 = _this.getAxisMotionValue(axis);
            if (!motionValue2)
              return;
            _this.originPoint[axis] += delta[axis].translate;
            motionValue2.set(motionValue2.get() + delta[axis].translate);
          });
          _this.visualElement.syncRender();
        }
      });
      return function() {
        stopResizeListener();
        stopPointerListener();
        stopMeasureLayoutListener();
      };
    };
    VisualElementDragControls2.prototype.getProps = function() {
      var props = this.visualElement.getProps();
      var _a = props.drag, drag2 = _a === void 0 ? false : _a, _b = props.dragDirectionLock, dragDirectionLock = _b === void 0 ? false : _b, _c = props.dragPropagation, dragPropagation = _c === void 0 ? false : _c, _d = props.dragConstraints, dragConstraints = _d === void 0 ? false : _d, _e5 = props.dragElastic, dragElastic = _e5 === void 0 ? defaultElastic : _e5, _f = props.dragMomentum, dragMomentum = _f === void 0 ? true : _f;
      return __assign(__assign({}, props), { drag: drag2, dragDirectionLock, dragPropagation, dragConstraints, dragElastic, dragMomentum });
    };
    return VisualElementDragControls2;
  }()
);
function shouldDrag(direction, drag2, currentDirection) {
  return (drag2 === true || drag2 === direction) && (currentDirection === null || currentDirection === direction);
}
function getCurrentDirection(offset, lockThreshold) {
  if (lockThreshold === void 0) {
    lockThreshold = 10;
  }
  var direction = null;
  if (Math.abs(offset.y) > lockThreshold) {
    direction = "y";
  } else if (Math.abs(offset.x) > lockThreshold) {
    direction = "x";
  }
  return direction;
}

// node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs
function useDrag(props) {
  var groupDragControls = props.dragControls, visualElement2 = props.visualElement;
  var dragControls = useConstant(function() {
    return new VisualElementDragControls(visualElement2);
  });
  (0, import_react29.useEffect)(function() {
    return groupDragControls && groupDragControls.subscribe(dragControls);
  }, [dragControls, groupDragControls]);
  (0, import_react29.useEffect)(function() {
    return dragControls.addListeners();
  }, [dragControls]);
}

// node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs
var import_react30 = __toESM(require_react(), 1);
function usePanGesture(_a) {
  var onPan = _a.onPan, onPanStart = _a.onPanStart, onPanEnd = _a.onPanEnd, onPanSessionStart = _a.onPanSessionStart, visualElement2 = _a.visualElement;
  var hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;
  var panSession = (0, import_react30.useRef)(null);
  var transformPagePoint = (0, import_react30.useContext)(MotionConfigContext).transformPagePoint;
  var handlers = {
    onSessionStart: onPanSessionStart,
    onStart: onPanStart,
    onMove: onPan,
    onEnd: function(event, info) {
      panSession.current = null;
      onPanEnd && onPanEnd(event, info);
    }
  };
  (0, import_react30.useEffect)(function() {
    if (panSession.current !== null) {
      panSession.current.updateHandlers(handlers);
    }
  });
  function onPointerDown(event) {
    panSession.current = new PanSession(event, handlers, {
      transformPagePoint
    });
  }
  usePointerEvent(visualElement2, "pointerdown", hasPanEvents && onPointerDown);
  useUnmountEffect(function() {
    return panSession.current && panSession.current.end();
  });
}

// node_modules/framer-motion/dist/es/motion/features/drag.mjs
var drag = {
  pan: makeRenderlessComponent(usePanGesture),
  drag: makeRenderlessComponent(useDrag)
};

// node_modules/framer-motion/dist/es/render/utils/lifecycles.mjs
var names = [
  "LayoutMeasure",
  "BeforeLayoutMeasure",
  "LayoutUpdate",
  "ViewportBoxUpdate",
  "Update",
  "Render",
  "AnimationComplete",
  "LayoutAnimationComplete",
  "AnimationStart",
  "LayoutAnimationStart",
  "SetAxisTarget",
  "Unmount"
];
function createLifecycles() {
  var managers = names.map(function() {
    return new SubscriptionManager();
  });
  var propSubscriptions = {};
  var lifecycles = {
    clearAllListeners: function() {
      return managers.forEach(function(manager) {
        return manager.clear();
      });
    },
    updatePropListeners: function(props) {
      names.forEach(function(name) {
        var _a;
        var on2 = "on" + name;
        var propListener = props[on2];
        (_a = propSubscriptions[name]) === null || _a === void 0 ? void 0 : _a.call(propSubscriptions);
        if (propListener) {
          propSubscriptions[name] = lifecycles[on2](propListener);
        }
      });
    }
  };
  managers.forEach(function(manager, i9) {
    lifecycles["on" + names[i9]] = function(handler) {
      return manager.add(handler);
    };
    lifecycles["notify" + names[i9]] = function() {
      var args = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }
      return manager.notify.apply(manager, __spreadArray([], __read(args), false));
    };
  });
  return lifecycles;
}

// node_modules/framer-motion/dist/es/render/utils/motion-values.mjs
function updateMotionValuesFromProps(element, next, prev) {
  var _a;
  for (var key in next) {
    var nextValue = next[key];
    var prevValue = prev[key];
    if (isMotionValue(nextValue)) {
      element.addValue(key, nextValue);
      if (true) {
        warnOnce(nextValue.version === "6.5.1", "Attempting to mix Framer Motion versions ".concat(nextValue.version, " with 6.5.1 may not work as expected."));
      }
    } else if (isMotionValue(prevValue)) {
      element.addValue(key, motionValue(nextValue));
    } else if (prevValue !== nextValue) {
      if (element.hasValue(key)) {
        var existingValue = element.getValue(key);
        !existingValue.hasAnimated && existingValue.set(nextValue);
      } else {
        element.addValue(key, motionValue((_a = element.getStaticValue(key)) !== null && _a !== void 0 ? _a : nextValue));
      }
    }
  }
  for (var key in prev) {
    if (next[key] === void 0)
      element.removeValue(key);
  }
  return next;
}

// node_modules/framer-motion/dist/es/render/index.mjs
var visualElement = function(_a) {
  var _b = _a.treeType, treeType = _b === void 0 ? "" : _b, build = _a.build, getBaseTarget = _a.getBaseTarget, makeTargetAnimatable = _a.makeTargetAnimatable, measureViewportBox2 = _a.measureViewportBox, renderInstance = _a.render, readValueFromInstance = _a.readValueFromInstance, removeValueFromRenderState = _a.removeValueFromRenderState, sortNodePosition = _a.sortNodePosition, scrapeMotionValuesFromProps3 = _a.scrapeMotionValuesFromProps;
  return function(_a2, options) {
    var parent = _a2.parent, props = _a2.props, presenceId = _a2.presenceId, blockInitialAnimation = _a2.blockInitialAnimation, visualState = _a2.visualState, shouldReduceMotion = _a2.shouldReduceMotion;
    if (options === void 0) {
      options = {};
    }
    var isMounted = false;
    var latestValues = visualState.latestValues, renderState = visualState.renderState;
    var instance;
    var lifecycles = createLifecycles();
    var values = /* @__PURE__ */ new Map();
    var valueSubscriptions = /* @__PURE__ */ new Map();
    var prevMotionValues = {};
    var baseTarget = __assign({}, latestValues);
    var removeFromVariantTree;
    function render() {
      if (!instance || !isMounted)
        return;
      triggerBuild();
      renderInstance(instance, renderState, props.style, element.projection);
    }
    function triggerBuild() {
      build(element, renderState, latestValues, options, props);
    }
    function update() {
      lifecycles.notifyUpdate(latestValues);
    }
    function bindToMotionValue(key2, value2) {
      var removeOnChange = value2.onChange(function(latestValue) {
        latestValues[key2] = latestValue;
        props.onUpdate && es_default.update(update, false, true);
      });
      var removeOnRenderRequest = value2.onRenderRequest(element.scheduleRender);
      valueSubscriptions.set(key2, function() {
        removeOnChange();
        removeOnRenderRequest();
      });
    }
    var initialMotionValues = scrapeMotionValuesFromProps3(props);
    for (var key in initialMotionValues) {
      var value = initialMotionValues[key];
      if (latestValues[key] !== void 0 && isMotionValue(value)) {
        value.set(latestValues[key], false);
      }
    }
    var isControllingVariants = checkIfControllingVariants(props);
    var isVariantNode = checkIfVariantNode(props);
    var element = __assign(__assign({
      treeType,
      /**
       * This is a mirror of the internal instance prop, which keeps
       * VisualElement type-compatible with React's RefObject.
       */
      current: null,
      /**
       * The depth of this visual element within the visual element tree.
       */
      depth: parent ? parent.depth + 1 : 0,
      parent,
      children: /* @__PURE__ */ new Set(),
      /**
       *
       */
      presenceId,
      shouldReduceMotion,
      /**
       * If this component is part of the variant tree, it should track
       * any children that are also part of the tree. This is essentially
       * a shadow tree to simplify logic around how to stagger over children.
       */
      variantChildren: isVariantNode ? /* @__PURE__ */ new Set() : void 0,
      /**
       * Whether this instance is visible. This can be changed imperatively
       * by the projection tree, is analogous to CSS's visibility in that
       * hidden elements should take up layout, and needs enacting by the configured
       * render function.
       */
      isVisible: void 0,
      /**
       * Normally, if a component is controlled by a parent's variants, it can
       * rely on that ancestor to trigger animations further down the tree.
       * However, if a component is created after its parent is mounted, the parent
       * won't trigger that mount animation so the child needs to.
       *
       * TODO: This might be better replaced with a method isParentMounted
       */
      manuallyAnimateOnMount: Boolean(parent === null || parent === void 0 ? void 0 : parent.isMounted()),
      /**
       * This can be set by AnimatePresence to force components that mount
       * at the same time as it to mount as if they have initial={false} set.
       */
      blockInitialAnimation,
      /**
       * Determine whether this component has mounted yet. This is mostly used
       * by variant children to determine whether they need to trigger their
       * own animations on mount.
       */
      isMounted: function() {
        return Boolean(instance);
      },
      mount: function(newInstance) {
        isMounted = true;
        instance = element.current = newInstance;
        if (element.projection) {
          element.projection.mount(newInstance);
        }
        if (isVariantNode && parent && !isControllingVariants) {
          removeFromVariantTree = parent === null || parent === void 0 ? void 0 : parent.addVariantChild(element);
        }
        values.forEach(function(value2, key2) {
          return bindToMotionValue(key2, value2);
        });
        parent === null || parent === void 0 ? void 0 : parent.children.add(element);
        element.setProps(props);
      },
      /**
       *
       */
      unmount: function() {
        var _a3;
        (_a3 = element.projection) === null || _a3 === void 0 ? void 0 : _a3.unmount();
        cancelSync.update(update);
        cancelSync.render(render);
        valueSubscriptions.forEach(function(remove) {
          return remove();
        });
        removeFromVariantTree === null || removeFromVariantTree === void 0 ? void 0 : removeFromVariantTree();
        parent === null || parent === void 0 ? void 0 : parent.children.delete(element);
        lifecycles.clearAllListeners();
        instance = void 0;
        isMounted = false;
      },
      /**
       * Add a child visual element to our set of children.
       */
      addVariantChild: function(child) {
        var _a3;
        var closestVariantNode = element.getClosestVariantNode();
        if (closestVariantNode) {
          (_a3 = closestVariantNode.variantChildren) === null || _a3 === void 0 ? void 0 : _a3.add(child);
          return function() {
            return closestVariantNode.variantChildren.delete(child);
          };
        }
      },
      sortNodePosition: function(other) {
        if (!sortNodePosition || treeType !== other.treeType)
          return 0;
        return sortNodePosition(element.getInstance(), other.getInstance());
      },
      /**
       * Returns the closest variant node in the tree starting from
       * this visual element.
       */
      getClosestVariantNode: function() {
        return isVariantNode ? element : parent === null || parent === void 0 ? void 0 : parent.getClosestVariantNode();
      },
      /**
       * Expose the latest layoutId prop.
       */
      getLayoutId: function() {
        return props.layoutId;
      },
      /**
       * Returns the current instance.
       */
      getInstance: function() {
        return instance;
      },
      /**
       * Get/set the latest static values.
       */
      getStaticValue: function(key2) {
        return latestValues[key2];
      },
      setStaticValue: function(key2, value2) {
        return latestValues[key2] = value2;
      },
      /**
       * Returns the latest motion value state. Currently only used to take
       * a snapshot of the visual element - perhaps this can return the whole
       * visual state
       */
      getLatestValues: function() {
        return latestValues;
      },
      /**
       * Set the visiblity of the visual element. If it's changed, schedule
       * a render to reflect these changes.
       */
      setVisibility: function(visibility) {
        if (element.isVisible === visibility)
          return;
        element.isVisible = visibility;
        element.scheduleRender();
      },
      /**
       * Make a target animatable by Popmotion. For instance, if we're
       * trying to animate width from 100px to 100vw we need to measure 100vw
       * in pixels to determine what we really need to animate to. This is also
       * pluggable to support Framer's custom value types like Color,
       * and CSS variables.
       */
      makeTargetAnimatable: function(target, canMutate) {
        if (canMutate === void 0) {
          canMutate = true;
        }
        return makeTargetAnimatable(element, target, props, canMutate);
      },
      /**
       * Measure the current viewport box with or without transforms.
       * Only measures axis-aligned boxes, rotate and skew must be manually
       * removed with a re-render to work.
       */
      measureViewportBox: function() {
        return measureViewportBox2(instance, props);
      },
      // Motion values ========================
      /**
       * Add a motion value and bind it to this visual element.
       */
      addValue: function(key2, value2) {
        if (element.hasValue(key2))
          element.removeValue(key2);
        values.set(key2, value2);
        latestValues[key2] = value2.get();
        bindToMotionValue(key2, value2);
      },
      /**
       * Remove a motion value and unbind any active subscriptions.
       */
      removeValue: function(key2) {
        var _a3;
        values.delete(key2);
        (_a3 = valueSubscriptions.get(key2)) === null || _a3 === void 0 ? void 0 : _a3();
        valueSubscriptions.delete(key2);
        delete latestValues[key2];
        removeValueFromRenderState(key2, renderState);
      },
      /**
       * Check whether we have a motion value for this key
       */
      hasValue: function(key2) {
        return values.has(key2);
      },
      /**
       * Get a motion value for this key. If called with a default
       * value, we'll create one if none exists.
       */
      getValue: function(key2, defaultValue) {
        var value2 = values.get(key2);
        if (value2 === void 0 && defaultValue !== void 0) {
          value2 = motionValue(defaultValue);
          element.addValue(key2, value2);
        }
        return value2;
      },
      /**
       * Iterate over our motion values.
       */
      forEachValue: function(callback) {
        return values.forEach(callback);
      },
      /**
       * If we're trying to animate to a previously unencountered value,
       * we need to check for it in our state and as a last resort read it
       * directly from the instance (which might have performance implications).
       */
      readValue: function(key2) {
        var _a3;
        return (_a3 = latestValues[key2]) !== null && _a3 !== void 0 ? _a3 : readValueFromInstance(instance, key2, options);
      },
      /**
       * Set the base target to later animate back to. This is currently
       * only hydrated on creation and when we first read a value.
       */
      setBaseTarget: function(key2, value2) {
        baseTarget[key2] = value2;
      },
      /**
       * Find the base target for a value thats been removed from all animation
       * props.
       */
      getBaseTarget: function(key2) {
        if (getBaseTarget) {
          var target = getBaseTarget(props, key2);
          if (target !== void 0 && !isMotionValue(target))
            return target;
        }
        return baseTarget[key2];
      }
    }, lifecycles), {
      /**
       * Build the renderer state based on the latest visual state.
       */
      build: function() {
        triggerBuild();
        return renderState;
      },
      /**
       * Schedule a render on the next animation frame.
       */
      scheduleRender: function() {
        es_default.render(render, false, true);
      },
      /**
       * Synchronously fire render. It's prefered that we batch renders but
       * in many circumstances, like layout measurement, we need to run this
       * synchronously. However in those instances other measures should be taken
       * to batch reads/writes.
       */
      syncRender: render,
      /**
       * Update the provided props. Ensure any newly-added motion values are
       * added to our map, old ones removed, and listeners updated.
       */
      setProps: function(newProps) {
        if (newProps.transformTemplate || props.transformTemplate) {
          element.scheduleRender();
        }
        props = newProps;
        lifecycles.updatePropListeners(newProps);
        prevMotionValues = updateMotionValuesFromProps(element, scrapeMotionValuesFromProps3(props), prevMotionValues);
      },
      getProps: function() {
        return props;
      },
      // Variants ==============================
      /**
       * Returns the variant definition with a given name.
       */
      getVariant: function(name) {
        var _a3;
        return (_a3 = props.variants) === null || _a3 === void 0 ? void 0 : _a3[name];
      },
      /**
       * Returns the defined default transition on this component.
       */
      getDefaultTransition: function() {
        return props.transition;
      },
      getTransformPagePoint: function() {
        return props.transformPagePoint;
      },
      /**
       * Used by child variant nodes to get the closest ancestor variant props.
       */
      getVariantContext: function(startAtParent) {
        if (startAtParent === void 0) {
          startAtParent = false;
        }
        if (startAtParent)
          return parent === null || parent === void 0 ? void 0 : parent.getVariantContext();
        if (!isControllingVariants) {
          var context_1 = (parent === null || parent === void 0 ? void 0 : parent.getVariantContext()) || {};
          if (props.initial !== void 0) {
            context_1.initial = props.initial;
          }
          return context_1;
        }
        var context = {};
        for (var i9 = 0; i9 < numVariantProps; i9++) {
          var name_1 = variantProps[i9];
          var prop = props[name_1];
          if (isVariantLabel(prop) || prop === false) {
            context[name_1] = prop;
          }
        }
        return context;
      }
    });
    return element;
  };
};
var variantProps = __spreadArray(["initial"], __read(variantPriorityOrder), false);
var numVariantProps = variantProps.length;

// node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs
function isCSSVariable2(value) {
  return typeof value === "string" && value.startsWith("var(--");
}
var cssVariableRegex = /var\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\)/;
function parseCSSVariable(current) {
  var match = cssVariableRegex.exec(current);
  if (!match)
    return [,];
  var _a = __read(match, 3), token = _a[1], fallback = _a[2];
  return [token, fallback];
}
var maxDepth = 4;
function getVariableValue(current, element, depth) {
  if (depth === void 0) {
    depth = 1;
  }
  invariant(depth <= maxDepth, 'Max CSS variable fallback depth detected in property "'.concat(current, '". This may indicate a circular fallback dependency.'));
  var _a = __read(parseCSSVariable(current), 2), token = _a[0], fallback = _a[1];
  if (!token)
    return;
  var resolved = window.getComputedStyle(element).getPropertyValue(token);
  if (resolved) {
    return resolved.trim();
  } else if (isCSSVariable2(fallback)) {
    return getVariableValue(fallback, element, depth + 1);
  } else {
    return fallback;
  }
}
function resolveCSSVariables(visualElement2, _a, transitionEnd) {
  var _b;
  var target = __rest(_a, []);
  var element = visualElement2.getInstance();
  if (!(element instanceof Element))
    return { target, transitionEnd };
  if (transitionEnd) {
    transitionEnd = __assign({}, transitionEnd);
  }
  visualElement2.forEachValue(function(value) {
    var current2 = value.get();
    if (!isCSSVariable2(current2))
      return;
    var resolved2 = getVariableValue(current2, element);
    if (resolved2)
      value.set(resolved2);
  });
  for (var key in target) {
    var current = target[key];
    if (!isCSSVariable2(current))
      continue;
    var resolved = getVariableValue(current, element);
    if (!resolved)
      continue;
    target[key] = resolved;
    if (transitionEnd)
      (_b = transitionEnd[key]) !== null && _b !== void 0 ? _b : transitionEnd[key] = current;
  }
  return { target, transitionEnd };
}

// node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs
var positionalKeys = /* @__PURE__ */ new Set([
  "width",
  "height",
  "top",
  "left",
  "right",
  "bottom",
  "x",
  "y"
]);
var isPositionalKey = function(key) {
  return positionalKeys.has(key);
};
var hasPositionalKey = function(target) {
  return Object.keys(target).some(isPositionalKey);
};
var setAndResetVelocity = function(value, to2) {
  value.set(to2, false);
  value.set(to2);
};
var isNumOrPxType = function(v6) {
  return v6 === number || v6 === px;
};
var BoundingBoxDimension;
(function(BoundingBoxDimension2) {
  BoundingBoxDimension2["width"] = "width";
  BoundingBoxDimension2["height"] = "height";
  BoundingBoxDimension2["left"] = "left";
  BoundingBoxDimension2["right"] = "right";
  BoundingBoxDimension2["top"] = "top";
  BoundingBoxDimension2["bottom"] = "bottom";
})(BoundingBoxDimension || (BoundingBoxDimension = {}));
var getPosFromMatrix = function(matrix, pos) {
  return parseFloat(matrix.split(", ")[pos]);
};
var getTranslateFromMatrix = function(pos2, pos3) {
  return function(_bbox, _a) {
    var transform2 = _a.transform;
    if (transform2 === "none" || !transform2)
      return 0;
    var matrix3d = transform2.match(/^matrix3d\((.+)\)$/);
    if (matrix3d) {
      return getPosFromMatrix(matrix3d[1], pos3);
    } else {
      var matrix = transform2.match(/^matrix\((.+)\)$/);
      if (matrix) {
        return getPosFromMatrix(matrix[1], pos2);
      } else {
        return 0;
      }
    }
  };
};
var transformKeys = /* @__PURE__ */ new Set(["x", "y", "z"]);
var nonTranslationalTransformKeys = transformProps.filter(function(key) {
  return !transformKeys.has(key);
});
function removeNonTranslationalTransform(visualElement2) {
  var removedTransforms = [];
  nonTranslationalTransformKeys.forEach(function(key) {
    var value = visualElement2.getValue(key);
    if (value !== void 0) {
      removedTransforms.push([key, value.get()]);
      value.set(key.startsWith("scale") ? 1 : 0);
    }
  });
  if (removedTransforms.length)
    visualElement2.syncRender();
  return removedTransforms;
}
var positionalValues = {
  // Dimensions
  width: function(_a, _b) {
    var x4 = _a.x;
    var _c = _b.paddingLeft, paddingLeft = _c === void 0 ? "0" : _c, _d = _b.paddingRight, paddingRight = _d === void 0 ? "0" : _d;
    return x4.max - x4.min - parseFloat(paddingLeft) - parseFloat(paddingRight);
  },
  height: function(_a, _b) {
    var y7 = _a.y;
    var _c = _b.paddingTop, paddingTop = _c === void 0 ? "0" : _c, _d = _b.paddingBottom, paddingBottom = _d === void 0 ? "0" : _d;
    return y7.max - y7.min - parseFloat(paddingTop) - parseFloat(paddingBottom);
  },
  top: function(_bbox, _a) {
    var top = _a.top;
    return parseFloat(top);
  },
  left: function(_bbox, _a) {
    var left = _a.left;
    return parseFloat(left);
  },
  bottom: function(_a, _b) {
    var y7 = _a.y;
    var top = _b.top;
    return parseFloat(top) + (y7.max - y7.min);
  },
  right: function(_a, _b) {
    var x4 = _a.x;
    var left = _b.left;
    return parseFloat(left) + (x4.max - x4.min);
  },
  // Transform
  x: getTranslateFromMatrix(4, 13),
  y: getTranslateFromMatrix(5, 14)
};
var convertChangedValueTypes = function(target, visualElement2, changedKeys) {
  var originBbox = visualElement2.measureViewportBox();
  var element = visualElement2.getInstance();
  var elementComputedStyle = getComputedStyle(element);
  var display = elementComputedStyle.display;
  var origin = {};
  if (display === "none") {
    visualElement2.setStaticValue("display", target.display || "block");
  }
  changedKeys.forEach(function(key) {
    origin[key] = positionalValues[key](originBbox, elementComputedStyle);
  });
  visualElement2.syncRender();
  var targetBbox = visualElement2.measureViewportBox();
  changedKeys.forEach(function(key) {
    var value = visualElement2.getValue(key);
    setAndResetVelocity(value, origin[key]);
    target[key] = positionalValues[key](targetBbox, elementComputedStyle);
  });
  return target;
};
var checkAndConvertChangedValueTypes = function(visualElement2, target, origin, transitionEnd) {
  if (origin === void 0) {
    origin = {};
  }
  if (transitionEnd === void 0) {
    transitionEnd = {};
  }
  target = __assign({}, target);
  transitionEnd = __assign({}, transitionEnd);
  var targetPositionalKeys = Object.keys(target).filter(isPositionalKey);
  var removedTransformValues = [];
  var hasAttemptedToRemoveTransformValues = false;
  var changedValueTypeKeys = [];
  targetPositionalKeys.forEach(function(key) {
    var value = visualElement2.getValue(key);
    if (!visualElement2.hasValue(key))
      return;
    var from = origin[key];
    var fromType = findDimensionValueType(from);
    var to2 = target[key];
    var toType;
    if (isKeyframesTarget(to2)) {
      var numKeyframes = to2.length;
      var fromIndex = to2[0] === null ? 1 : 0;
      from = to2[fromIndex];
      fromType = findDimensionValueType(from);
      for (var i9 = fromIndex; i9 < numKeyframes; i9++) {
        if (!toType) {
          toType = findDimensionValueType(to2[i9]);
          invariant(toType === fromType || isNumOrPxType(fromType) && isNumOrPxType(toType), "Keyframes must be of the same dimension as the current value");
        } else {
          invariant(findDimensionValueType(to2[i9]) === toType, "All keyframes must be of the same type");
        }
      }
    } else {
      toType = findDimensionValueType(to2);
    }
    if (fromType !== toType) {
      if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {
        var current = value.get();
        if (typeof current === "string") {
          value.set(parseFloat(current));
        }
        if (typeof to2 === "string") {
          target[key] = parseFloat(to2);
        } else if (Array.isArray(to2) && toType === px) {
          target[key] = to2.map(parseFloat);
        }
      } else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) && (toType === null || toType === void 0 ? void 0 : toType.transform) && (from === 0 || to2 === 0)) {
        if (from === 0) {
          value.set(toType.transform(from));
        } else {
          target[key] = fromType.transform(to2);
        }
      } else {
        if (!hasAttemptedToRemoveTransformValues) {
          removedTransformValues = removeNonTranslationalTransform(visualElement2);
          hasAttemptedToRemoveTransformValues = true;
        }
        changedValueTypeKeys.push(key);
        transitionEnd[key] = transitionEnd[key] !== void 0 ? transitionEnd[key] : target[key];
        setAndResetVelocity(value, to2);
      }
    }
  });
  if (changedValueTypeKeys.length) {
    var scrollY_1 = changedValueTypeKeys.indexOf("height") >= 0 ? window.pageYOffset : null;
    var convertedTarget = convertChangedValueTypes(target, visualElement2, changedValueTypeKeys);
    if (removedTransformValues.length) {
      removedTransformValues.forEach(function(_a) {
        var _b = __read(_a, 2), key = _b[0], value = _b[1];
        visualElement2.getValue(key).set(value);
      });
    }
    visualElement2.syncRender();
    if (scrollY_1 !== null)
      window.scrollTo({ top: scrollY_1 });
    return { target: convertedTarget, transitionEnd };
  } else {
    return { target, transitionEnd };
  }
};
function unitConversion(visualElement2, target, origin, transitionEnd) {
  return hasPositionalKey(target) ? checkAndConvertChangedValueTypes(visualElement2, target, origin, transitionEnd) : { target, transitionEnd };
}

// node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs
var parseDomVariant = function(visualElement2, target, origin, transitionEnd) {
  var resolved = resolveCSSVariables(visualElement2, target, transitionEnd);
  target = resolved.target;
  transitionEnd = resolved.transitionEnd;
  return unitConversion(visualElement2, target, origin, transitionEnd);
};

// node_modules/framer-motion/dist/es/render/html/visual-element.mjs
function getComputedStyle2(element) {
  return window.getComputedStyle(element);
}
var htmlConfig = {
  treeType: "dom",
  readValueFromInstance: function(domElement, key) {
    if (isTransformProp(key)) {
      var defaultType = getDefaultValueType(key);
      return defaultType ? defaultType.default || 0 : 0;
    } else {
      var computedStyle = getComputedStyle2(domElement);
      return (isCSSVariable(key) ? computedStyle.getPropertyValue(key) : computedStyle[key]) || 0;
    }
  },
  sortNodePosition: function(a12, b9) {
    return a12.compareDocumentPosition(b9) & 2 ? 1 : -1;
  },
  getBaseTarget: function(props, key) {
    var _a;
    return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];
  },
  measureViewportBox: function(element, _a) {
    var transformPagePoint = _a.transformPagePoint;
    return measureViewportBox(element, transformPagePoint);
  },
  /**
   * Reset the transform on the current Element. This is called as part
   * of a batched process across the entire layout tree. To remove this write
   * cycle it'd be interesting to see if it's possible to "undo" all the current
   * layout transforms up the tree in the same way this.getBoundingBoxWithoutTransforms
   * works
   */
  resetTransform: function(element, domElement, props) {
    var transformTemplate = props.transformTemplate;
    domElement.style.transform = transformTemplate ? transformTemplate({}, "") : "none";
    element.scheduleRender();
  },
  restoreTransform: function(instance, mutableState) {
    instance.style.transform = mutableState.style.transform;
  },
  removeValueFromRenderState: function(key, _a) {
    var vars = _a.vars, style2 = _a.style;
    delete vars[key];
    delete style2[key];
  },
  /**
   * Ensure that HTML and Framer-specific value types like `px`->`%` and `Color`
   * can be animated by Motion.
   */
  makeTargetAnimatable: function(element, _a, _b, isMounted) {
    var transformValues = _b.transformValues;
    if (isMounted === void 0) {
      isMounted = true;
    }
    var transition = _a.transition, transitionEnd = _a.transitionEnd, target = __rest(_a, ["transition", "transitionEnd"]);
    var origin = getOrigin(target, transition || {}, element);
    if (transformValues) {
      if (transitionEnd)
        transitionEnd = transformValues(transitionEnd);
      if (target)
        target = transformValues(target);
      if (origin)
        origin = transformValues(origin);
    }
    if (isMounted) {
      checkTargetForNewValues(element, target, origin);
      var parsed = parseDomVariant(element, target, origin, transitionEnd);
      transitionEnd = parsed.transitionEnd;
      target = parsed.target;
    }
    return __assign({ transition, transitionEnd }, target);
  },
  scrapeMotionValuesFromProps,
  build: function(element, renderState, latestValues, options, props) {
    if (element.isVisible !== void 0) {
      renderState.style.visibility = element.isVisible ? "visible" : "hidden";
    }
    buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);
  },
  render: renderHTML
};
var htmlVisualElement = visualElement(htmlConfig);

// node_modules/framer-motion/dist/es/render/svg/visual-element.mjs
var svgVisualElement = visualElement(__assign(__assign({}, htmlConfig), { getBaseTarget: function(props, key) {
  return props[key];
}, readValueFromInstance: function(domElement, key) {
  var _a;
  if (isTransformProp(key)) {
    return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;
  }
  key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;
  return domElement.getAttribute(key);
}, scrapeMotionValuesFromProps: scrapeMotionValuesFromProps2, build: function(_element, renderState, latestValues, options, props) {
  buildSVGAttrs(renderState, latestValues, options, props.transformTemplate);
}, render: renderSVG }));

// node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs
var createDomVisualElement = function(Component, options) {
  return isSVGComponent(Component) ? svgVisualElement(options, { enableHardwareAcceleration: false }) : htmlVisualElement(options, { enableHardwareAcceleration: true });
};

// node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs
var import_react31 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs
function pixelsToPercent(pixels, axis) {
  if (axis.max === axis.min)
    return 0;
  return pixels / (axis.max - axis.min) * 100;
}
var correctBorderRadius = {
  correct: function(latest, node) {
    if (!node.target)
      return latest;
    if (typeof latest === "string") {
      if (px.test(latest)) {
        latest = parseFloat(latest);
      } else {
        return latest;
      }
    }
    var x4 = pixelsToPercent(latest, node.target.x);
    var y7 = pixelsToPercent(latest, node.target.y);
    return "".concat(x4, "% ").concat(y7, "%");
  }
};

// node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs
var varToken = "_$css";
var correctBoxShadow = {
  correct: function(latest, _a) {
    var treeScale = _a.treeScale, projectionDelta = _a.projectionDelta;
    var original = latest;
    var containsCSSVariables = latest.includes("var(");
    var cssVariables = [];
    if (containsCSSVariables) {
      latest = latest.replace(cssVariableRegex, function(match) {
        cssVariables.push(match);
        return varToken;
      });
    }
    var shadow = complex.parse(latest);
    if (shadow.length > 5)
      return original;
    var template = complex.createTransformer(latest);
    var offset = typeof shadow[0] !== "number" ? 1 : 0;
    var xScale = projectionDelta.x.scale * treeScale.x;
    var yScale = projectionDelta.y.scale * treeScale.y;
    shadow[0 + offset] /= xScale;
    shadow[1 + offset] /= yScale;
    var averageScale = mix(xScale, yScale, 0.5);
    if (typeof shadow[2 + offset] === "number")
      shadow[2 + offset] /= averageScale;
    if (typeof shadow[3 + offset] === "number")
      shadow[3 + offset] /= averageScale;
    var output = template(shadow);
    if (containsCSSVariables) {
      var i_1 = 0;
      output = output.replace(varToken, function() {
        var cssVariable = cssVariables[i_1];
        i_1++;
        return cssVariable;
      });
    }
    return output;
  }
};

// node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs
var MeasureLayoutWithContext = (
  /** @class */
  function(_super) {
    __extends(MeasureLayoutWithContext2, _super);
    function MeasureLayoutWithContext2() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    MeasureLayoutWithContext2.prototype.componentDidMount = function() {
      var _this = this;
      var _a = this.props, visualElement2 = _a.visualElement, layoutGroup = _a.layoutGroup, switchLayoutGroup = _a.switchLayoutGroup, layoutId = _a.layoutId;
      var projection = visualElement2.projection;
      addScaleCorrector(defaultScaleCorrectors);
      if (projection) {
        if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)
          layoutGroup.group.add(projection);
        if ((switchLayoutGroup === null || switchLayoutGroup === void 0 ? void 0 : switchLayoutGroup.register) && layoutId) {
          switchLayoutGroup.register(projection);
        }
        projection.root.didUpdate();
        projection.addEventListener("animationComplete", function() {
          _this.safeToRemove();
        });
        projection.setOptions(__assign(__assign({}, projection.options), { onExitComplete: function() {
          return _this.safeToRemove();
        } }));
      }
      globalProjectionState.hasEverUpdated = true;
    };
    MeasureLayoutWithContext2.prototype.getSnapshotBeforeUpdate = function(prevProps) {
      var _this = this;
      var _a = this.props, layoutDependency = _a.layoutDependency, visualElement2 = _a.visualElement, drag2 = _a.drag, isPresent = _a.isPresent;
      var projection = visualElement2.projection;
      if (!projection)
        return null;
      projection.isPresent = isPresent;
      if (drag2 || prevProps.layoutDependency !== layoutDependency || layoutDependency === void 0) {
        projection.willUpdate();
      } else {
        this.safeToRemove();
      }
      if (prevProps.isPresent !== isPresent) {
        if (isPresent) {
          projection.promote();
        } else if (!projection.relegate()) {
          es_default.postRender(function() {
            var _a2;
            if (!((_a2 = projection.getStack()) === null || _a2 === void 0 ? void 0 : _a2.members.length)) {
              _this.safeToRemove();
            }
          });
        }
      }
      return null;
    };
    MeasureLayoutWithContext2.prototype.componentDidUpdate = function() {
      var projection = this.props.visualElement.projection;
      if (projection) {
        projection.root.didUpdate();
        if (!projection.currentAnimation && projection.isLead()) {
          this.safeToRemove();
        }
      }
    };
    MeasureLayoutWithContext2.prototype.componentWillUnmount = function() {
      var _a = this.props, visualElement2 = _a.visualElement, layoutGroup = _a.layoutGroup, promoteContext = _a.switchLayoutGroup;
      var projection = visualElement2.projection;
      if (projection) {
        projection.scheduleCheckAfterUnmount();
        if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)
          layoutGroup.group.remove(projection);
        if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)
          promoteContext.deregister(projection);
      }
    };
    MeasureLayoutWithContext2.prototype.safeToRemove = function() {
      var safeToRemove = this.props.safeToRemove;
      safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();
    };
    MeasureLayoutWithContext2.prototype.render = function() {
      return null;
    };
    return MeasureLayoutWithContext2;
  }(import_react31.default.Component)
);
function MeasureLayout(props) {
  var _a = __read(usePresence(), 2), isPresent = _a[0], safeToRemove = _a[1];
  var layoutGroup = (0, import_react31.useContext)(LayoutGroupContext);
  return import_react31.default.createElement(MeasureLayoutWithContext, __assign({}, props, { layoutGroup, switchLayoutGroup: (0, import_react31.useContext)(SwitchLayoutGroupContext), isPresent, safeToRemove }));
}
var defaultScaleCorrectors = {
  borderRadius: __assign(__assign({}, correctBorderRadius), { applyTo: [
    "borderTopLeftRadius",
    "borderTopRightRadius",
    "borderBottomLeftRadius",
    "borderBottomRightRadius"
  ] }),
  borderTopLeftRadius: correctBorderRadius,
  borderTopRightRadius: correctBorderRadius,
  borderBottomLeftRadius: correctBorderRadius,
  borderBottomRightRadius: correctBorderRadius,
  boxShadow: correctBoxShadow
};

// node_modules/framer-motion/dist/es/motion/features/layout/index.mjs
var layoutFeatures = {
  measureLayout: MeasureLayout
};

// node_modules/framer-motion/dist/es/animation/animate.mjs
function animate2(from, to2, transition) {
  if (transition === void 0) {
    transition = {};
  }
  var value = isMotionValue(from) ? from : motionValue(from);
  startAnimation("", value, to2, transition);
  return {
    stop: function() {
      return value.stop();
    },
    isAnimating: function() {
      return value.isAnimating();
    }
  };
}

// node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs
var borders = ["TopLeft", "TopRight", "BottomLeft", "BottomRight"];
var numBorders = borders.length;
var asNumber = function(value) {
  return typeof value === "string" ? parseFloat(value) : value;
};
var isPx = function(value) {
  return typeof value === "number" || px.test(value);
};
function mixValues(target, follow, lead, progress3, shouldCrossfadeOpacity, isOnlyMember) {
  var _a, _b, _c, _d;
  if (shouldCrossfadeOpacity) {
    target.opacity = mix(
      0,
      // (follow?.opacity as number) ?? 0,
      // TODO Reinstate this if only child
      (_a = lead.opacity) !== null && _a !== void 0 ? _a : 1,
      easeCrossfadeIn(progress3)
    );
    target.opacityExit = mix((_b = follow.opacity) !== null && _b !== void 0 ? _b : 1, 0, easeCrossfadeOut(progress3));
  } else if (isOnlyMember) {
    target.opacity = mix((_c = follow.opacity) !== null && _c !== void 0 ? _c : 1, (_d = lead.opacity) !== null && _d !== void 0 ? _d : 1, progress3);
  }
  for (var i9 = 0; i9 < numBorders; i9++) {
    var borderLabel = "border".concat(borders[i9], "Radius");
    var followRadius = getRadius(follow, borderLabel);
    var leadRadius = getRadius(lead, borderLabel);
    if (followRadius === void 0 && leadRadius === void 0)
      continue;
    followRadius || (followRadius = 0);
    leadRadius || (leadRadius = 0);
    var canMix = followRadius === 0 || leadRadius === 0 || isPx(followRadius) === isPx(leadRadius);
    if (canMix) {
      target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress3), 0);
      if (percent.test(leadRadius) || percent.test(followRadius)) {
        target[borderLabel] += "%";
      }
    } else {
      target[borderLabel] = leadRadius;
    }
  }
  if (follow.rotate || lead.rotate) {
    target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress3);
  }
}
function getRadius(values, radiusName) {
  var _a;
  return (_a = values[radiusName]) !== null && _a !== void 0 ? _a : values.borderRadius;
}
var easeCrossfadeIn = compress(0, 0.5, circOut);
var easeCrossfadeOut = compress(0.5, 0.95, linear);
function compress(min, max, easing) {
  return function(p7) {
    if (p7 < min)
      return 0;
    if (p7 > max)
      return 1;
    return easing(progress(min, max, p7));
  };
}

// node_modules/framer-motion/dist/es/projection/geometry/copy.mjs
function copyAxisInto(axis, originAxis) {
  axis.min = originAxis.min;
  axis.max = originAxis.max;
}
function copyBoxInto(box, originBox) {
  copyAxisInto(box.x, originBox.x);
  copyAxisInto(box.y, originBox.y);
}

// node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs
function removePointDelta(point, translate, scale2, originPoint, boxScale) {
  point -= translate;
  point = scalePoint(point, 1 / scale2, originPoint);
  if (boxScale !== void 0) {
    point = scalePoint(point, 1 / boxScale, originPoint);
  }
  return point;
}
function removeAxisDelta(axis, translate, scale2, origin, boxScale, originAxis, sourceAxis) {
  if (translate === void 0) {
    translate = 0;
  }
  if (scale2 === void 0) {
    scale2 = 1;
  }
  if (origin === void 0) {
    origin = 0.5;
  }
  if (originAxis === void 0) {
    originAxis = axis;
  }
  if (sourceAxis === void 0) {
    sourceAxis = axis;
  }
  if (percent.test(translate)) {
    translate = parseFloat(translate);
    var relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);
    translate = relativeProgress - sourceAxis.min;
  }
  if (typeof translate !== "number")
    return;
  var originPoint = mix(originAxis.min, originAxis.max, origin);
  if (axis === originAxis)
    originPoint -= translate;
  axis.min = removePointDelta(axis.min, translate, scale2, originPoint, boxScale);
  axis.max = removePointDelta(axis.max, translate, scale2, originPoint, boxScale);
}
function removeAxisTransforms(axis, transforms2, _a, origin, sourceAxis) {
  var _b = __read(_a, 3), key = _b[0], scaleKey = _b[1], originKey = _b[2];
  removeAxisDelta(axis, transforms2[key], transforms2[scaleKey], transforms2[originKey], transforms2.scale, origin, sourceAxis);
}
var xKeys2 = ["x", "scaleX", "originX"];
var yKeys2 = ["y", "scaleY", "originY"];
function removeBoxTransforms(box, transforms2, originBox, sourceBox) {
  removeAxisTransforms(box.x, transforms2, xKeys2, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);
  removeAxisTransforms(box.y, transforms2, yKeys2, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);
}

// node_modules/framer-motion/dist/es/projection/geometry/utils.mjs
function isAxisDeltaZero(delta) {
  return delta.translate === 0 && delta.scale === 1;
}
function isDeltaZero(delta) {
  return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);
}
function boxEquals(a12, b9) {
  return a12.x.min === b9.x.min && a12.x.max === b9.x.max && a12.y.min === b9.y.min && a12.y.max === b9.y.max;
}

// node_modules/framer-motion/dist/es/projection/shared/stack.mjs
var NodeStack = (
  /** @class */
  function() {
    function NodeStack2() {
      this.members = [];
    }
    NodeStack2.prototype.add = function(node) {
      addUniqueItem(this.members, node);
      node.scheduleRender();
    };
    NodeStack2.prototype.remove = function(node) {
      removeItem(this.members, node);
      if (node === this.prevLead) {
        this.prevLead = void 0;
      }
      if (node === this.lead) {
        var prevLead = this.members[this.members.length - 1];
        if (prevLead) {
          this.promote(prevLead);
        }
      }
    };
    NodeStack2.prototype.relegate = function(node) {
      var indexOfNode = this.members.findIndex(function(member2) {
        return node === member2;
      });
      if (indexOfNode === 0)
        return false;
      var prevLead;
      for (var i9 = indexOfNode; i9 >= 0; i9--) {
        var member = this.members[i9];
        if (member.isPresent !== false) {
          prevLead = member;
          break;
        }
      }
      if (prevLead) {
        this.promote(prevLead);
        return true;
      } else {
        return false;
      }
    };
    NodeStack2.prototype.promote = function(node, preserveFollowOpacity) {
      var _a;
      var prevLead = this.lead;
      if (node === prevLead)
        return;
      this.prevLead = prevLead;
      this.lead = node;
      node.show();
      if (prevLead) {
        prevLead.instance && prevLead.scheduleRender();
        node.scheduleRender();
        node.resumeFrom = prevLead;
        if (preserveFollowOpacity) {
          node.resumeFrom.preserveOpacity = true;
        }
        if (prevLead.snapshot) {
          node.snapshot = prevLead.snapshot;
          node.snapshot.latestValues = prevLead.animationValues || prevLead.latestValues;
          node.snapshot.isShared = true;
        }
        if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {
          node.isLayoutDirty = true;
        }
        var crossfade = node.options.crossfade;
        if (crossfade === false) {
          prevLead.hide();
        }
      }
    };
    NodeStack2.prototype.exitAnimationComplete = function() {
      this.members.forEach(function(node) {
        var _a, _b, _c, _d, _e5;
        (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);
        (_e5 = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e5 === void 0 ? void 0 : _e5.call(_d);
      });
    };
    NodeStack2.prototype.scheduleRender = function() {
      this.members.forEach(function(node) {
        node.instance && node.scheduleRender(false);
      });
    };
    NodeStack2.prototype.removeLeadSnapshot = function() {
      if (this.lead && this.lead.snapshot) {
        this.lead.snapshot = void 0;
      }
    };
    return NodeStack2;
  }()
);

// node_modules/framer-motion/dist/es/projection/styles/transform.mjs
var identityProjection = "translate3d(0px, 0px, 0) scale(1, 1) scale(1, 1)";
function buildProjectionTransform(delta, treeScale, latestTransform) {
  var xTranslate = delta.x.translate / treeScale.x;
  var yTranslate = delta.y.translate / treeScale.y;
  var transform2 = "translate3d(".concat(xTranslate, "px, ").concat(yTranslate, "px, 0) ");
  transform2 += "scale(".concat(1 / treeScale.x, ", ").concat(1 / treeScale.y, ") ");
  if (latestTransform) {
    var rotate = latestTransform.rotate, rotateX = latestTransform.rotateX, rotateY = latestTransform.rotateY;
    if (rotate)
      transform2 += "rotate(".concat(rotate, "deg) ");
    if (rotateX)
      transform2 += "rotateX(".concat(rotateX, "deg) ");
    if (rotateY)
      transform2 += "rotateY(".concat(rotateY, "deg) ");
  }
  var elementScaleX = delta.x.scale * treeScale.x;
  var elementScaleY = delta.y.scale * treeScale.y;
  transform2 += "scale(".concat(elementScaleX, ", ").concat(elementScaleY, ")");
  return transform2 === identityProjection ? "none" : transform2;
}

// node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs
var compareByDepth = function(a12, b9) {
  return a12.depth - b9.depth;
};

// node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs
var FlatTree = (
  /** @class */
  function() {
    function FlatTree2() {
      this.children = [];
      this.isDirty = false;
    }
    FlatTree2.prototype.add = function(child) {
      addUniqueItem(this.children, child);
      this.isDirty = true;
    };
    FlatTree2.prototype.remove = function(child) {
      removeItem(this.children, child);
      this.isDirty = true;
    };
    FlatTree2.prototype.forEach = function(callback) {
      this.isDirty && this.children.sort(compareByDepth);
      this.isDirty = false;
      this.children.forEach(callback);
    };
    return FlatTree2;
  }()
);

// node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs
var animationTarget = 1e3;
function createProjectionNode(_a) {
  var attachResizeListener = _a.attachResizeListener, defaultParent = _a.defaultParent, measureScroll = _a.measureScroll, checkIsScrollRoot = _a.checkIsScrollRoot, resetTransform = _a.resetTransform;
  return (
    /** @class */
    function() {
      function ProjectionNode(id2, latestValues, parent) {
        var _this = this;
        if (latestValues === void 0) {
          latestValues = {};
        }
        if (parent === void 0) {
          parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent();
        }
        this.children = /* @__PURE__ */ new Set();
        this.options = {};
        this.isTreeAnimating = false;
        this.isAnimationBlocked = false;
        this.isLayoutDirty = false;
        this.updateManuallyBlocked = false;
        this.updateBlockedByResize = false;
        this.isUpdating = false;
        this.isSVG = false;
        this.needsReset = false;
        this.shouldResetTransform = false;
        this.treeScale = { x: 1, y: 1 };
        this.eventHandlers = /* @__PURE__ */ new Map();
        this.potentialNodes = /* @__PURE__ */ new Map();
        this.checkUpdateFailed = function() {
          if (_this.isUpdating) {
            _this.isUpdating = false;
            _this.clearAllSnapshots();
          }
        };
        this.updateProjection = function() {
          _this.nodes.forEach(resolveTargetDelta);
          _this.nodes.forEach(calcProjection);
        };
        this.hasProjected = false;
        this.isVisible = true;
        this.animationProgress = 0;
        this.sharedNodes = /* @__PURE__ */ new Map();
        this.id = id2;
        this.latestValues = latestValues;
        this.root = parent ? parent.root || parent : this;
        this.path = parent ? __spreadArray(__spreadArray([], __read(parent.path), false), [parent], false) : [];
        this.parent = parent;
        this.depth = parent ? parent.depth + 1 : 0;
        id2 && this.root.registerPotentialNode(id2, this);
        for (var i9 = 0; i9 < this.path.length; i9++) {
          this.path[i9].shouldResetTransform = true;
        }
        if (this.root === this)
          this.nodes = new FlatTree();
      }
      ProjectionNode.prototype.addEventListener = function(name, handler) {
        if (!this.eventHandlers.has(name)) {
          this.eventHandlers.set(name, new SubscriptionManager());
        }
        return this.eventHandlers.get(name).add(handler);
      };
      ProjectionNode.prototype.notifyListeners = function(name) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
          args[_i - 1] = arguments[_i];
        }
        var subscriptionManager = this.eventHandlers.get(name);
        subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify.apply(subscriptionManager, __spreadArray([], __read(args), false));
      };
      ProjectionNode.prototype.hasListeners = function(name) {
        return this.eventHandlers.has(name);
      };
      ProjectionNode.prototype.registerPotentialNode = function(id2, node) {
        this.potentialNodes.set(id2, node);
      };
      ProjectionNode.prototype.mount = function(instance, isLayoutDirty) {
        var _this = this;
        var _a2;
        if (isLayoutDirty === void 0) {
          isLayoutDirty = false;
        }
        if (this.instance)
          return;
        this.isSVG = instance instanceof SVGElement && instance.tagName !== "svg";
        this.instance = instance;
        var _b = this.options, layoutId = _b.layoutId, layout = _b.layout, visualElement2 = _b.visualElement;
        if (visualElement2 && !visualElement2.getInstance()) {
          visualElement2.mount(instance);
        }
        this.root.nodes.add(this);
        (_a2 = this.parent) === null || _a2 === void 0 ? void 0 : _a2.children.add(this);
        this.id && this.root.potentialNodes.delete(this.id);
        if (isLayoutDirty && (layout || layoutId)) {
          this.isLayoutDirty = true;
        }
        if (attachResizeListener) {
          var unblockTimeout_1;
          var resizeUnblockUpdate_1 = function() {
            return _this.root.updateBlockedByResize = false;
          };
          attachResizeListener(instance, function() {
            _this.root.updateBlockedByResize = true;
            clearTimeout(unblockTimeout_1);
            unblockTimeout_1 = window.setTimeout(resizeUnblockUpdate_1, 250);
            if (globalProjectionState.hasAnimatedSinceResize) {
              globalProjectionState.hasAnimatedSinceResize = false;
              _this.nodes.forEach(finishAnimation);
            }
          });
        }
        if (layoutId) {
          this.root.registerSharedNode(layoutId, this);
        }
        if (this.options.animate !== false && visualElement2 && (layoutId || layout)) {
          this.addEventListener("didUpdate", function(_a3) {
            var _b2, _c, _d, _e5, _f;
            var delta = _a3.delta, hasLayoutChanged = _a3.hasLayoutChanged, hasRelativeTargetChanged = _a3.hasRelativeTargetChanged, newLayout = _a3.layout;
            if (_this.isTreeAnimationBlocked()) {
              _this.target = void 0;
              _this.relativeTarget = void 0;
              return;
            }
            var layoutTransition = (_c = (_b2 = _this.options.transition) !== null && _b2 !== void 0 ? _b2 : visualElement2.getDefaultTransition()) !== null && _c !== void 0 ? _c : defaultLayoutTransition;
            var _g = visualElement2.getProps(), onLayoutAnimationStart = _g.onLayoutAnimationStart, onLayoutAnimationComplete = _g.onLayoutAnimationComplete;
            var targetChanged = !_this.targetLayout || !boxEquals(_this.targetLayout, newLayout) || hasRelativeTargetChanged;
            var hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;
            if (((_d = _this.resumeFrom) === null || _d === void 0 ? void 0 : _d.instance) || hasOnlyRelativeTargetChanged || hasLayoutChanged && (targetChanged || !_this.currentAnimation)) {
              if (_this.resumeFrom) {
                _this.resumingFrom = _this.resumeFrom;
                _this.resumingFrom.resumingFrom = void 0;
              }
              _this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);
              var animationOptions = __assign(__assign({}, getValueTransition(layoutTransition, "layout")), { onPlay: onLayoutAnimationStart, onComplete: onLayoutAnimationComplete });
              if (visualElement2.shouldReduceMotion) {
                animationOptions.delay = 0;
                animationOptions.type = false;
              }
              _this.startAnimation(animationOptions);
            } else {
              if (!hasLayoutChanged && _this.animationProgress === 0) {
                _this.finishAnimation();
              }
              _this.isLead() && ((_f = (_e5 = _this.options).onExitComplete) === null || _f === void 0 ? void 0 : _f.call(_e5));
            }
            _this.targetLayout = newLayout;
          });
        }
      };
      ProjectionNode.prototype.unmount = function() {
        var _a2, _b;
        this.options.layoutId && this.willUpdate();
        this.root.nodes.remove(this);
        (_a2 = this.getStack()) === null || _a2 === void 0 ? void 0 : _a2.remove(this);
        (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);
        this.instance = void 0;
        cancelSync.preRender(this.updateProjection);
      };
      ProjectionNode.prototype.blockUpdate = function() {
        this.updateManuallyBlocked = true;
      };
      ProjectionNode.prototype.unblockUpdate = function() {
        this.updateManuallyBlocked = false;
      };
      ProjectionNode.prototype.isUpdateBlocked = function() {
        return this.updateManuallyBlocked || this.updateBlockedByResize;
      };
      ProjectionNode.prototype.isTreeAnimationBlocked = function() {
        var _a2;
        return this.isAnimationBlocked || ((_a2 = this.parent) === null || _a2 === void 0 ? void 0 : _a2.isTreeAnimationBlocked()) || false;
      };
      ProjectionNode.prototype.startUpdate = function() {
        var _a2;
        if (this.isUpdateBlocked())
          return;
        this.isUpdating = true;
        (_a2 = this.nodes) === null || _a2 === void 0 ? void 0 : _a2.forEach(resetRotation);
      };
      ProjectionNode.prototype.willUpdate = function(shouldNotifyListeners) {
        var _a2, _b, _c;
        if (shouldNotifyListeners === void 0) {
          shouldNotifyListeners = true;
        }
        if (this.root.isUpdateBlocked()) {
          (_b = (_a2 = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a2);
          return;
        }
        !this.root.isUpdating && this.root.startUpdate();
        if (this.isLayoutDirty)
          return;
        this.isLayoutDirty = true;
        for (var i9 = 0; i9 < this.path.length; i9++) {
          var node = this.path[i9];
          node.shouldResetTransform = true;
          node.updateScroll();
        }
        var _d = this.options, layoutId = _d.layoutId, layout = _d.layout;
        if (layoutId === void 0 && !layout)
          return;
        var transformTemplate = (_c = this.options.visualElement) === null || _c === void 0 ? void 0 : _c.getProps().transformTemplate;
        this.prevTransformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, "");
        this.updateSnapshot();
        shouldNotifyListeners && this.notifyListeners("willUpdate");
      };
      ProjectionNode.prototype.didUpdate = function() {
        var updateWasBlocked = this.isUpdateBlocked();
        if (updateWasBlocked) {
          this.unblockUpdate();
          this.clearAllSnapshots();
          this.nodes.forEach(clearMeasurements);
          return;
        }
        if (!this.isUpdating)
          return;
        this.isUpdating = false;
        if (this.potentialNodes.size) {
          this.potentialNodes.forEach(mountNodeEarly);
          this.potentialNodes.clear();
        }
        this.nodes.forEach(resetTransformStyle);
        this.nodes.forEach(updateLayout);
        this.nodes.forEach(notifyLayoutUpdate);
        this.clearAllSnapshots();
        flushSync.update();
        flushSync.preRender();
        flushSync.render();
      };
      ProjectionNode.prototype.clearAllSnapshots = function() {
        this.nodes.forEach(clearSnapshot);
        this.sharedNodes.forEach(removeLeadSnapshots);
      };
      ProjectionNode.prototype.scheduleUpdateProjection = function() {
        es_default.preRender(this.updateProjection, false, true);
      };
      ProjectionNode.prototype.scheduleCheckAfterUnmount = function() {
        var _this = this;
        es_default.postRender(function() {
          if (_this.isLayoutDirty) {
            _this.root.didUpdate();
          } else {
            _this.root.checkUpdateFailed();
          }
        });
      };
      ProjectionNode.prototype.updateSnapshot = function() {
        if (this.snapshot || !this.instance)
          return;
        var measured = this.measure();
        var layout = this.removeTransform(this.removeElementScroll(measured));
        roundBox(layout);
        this.snapshot = {
          measured,
          layout,
          latestValues: {}
        };
      };
      ProjectionNode.prototype.updateLayout = function() {
        var _a2;
        if (!this.instance)
          return;
        this.updateScroll();
        if (!(this.options.alwaysMeasureLayout && this.isLead()) && !this.isLayoutDirty) {
          return;
        }
        if (this.resumeFrom && !this.resumeFrom.instance) {
          for (var i9 = 0; i9 < this.path.length; i9++) {
            var node = this.path[i9];
            node.updateScroll();
          }
        }
        var measured = this.measure();
        roundBox(measured);
        var prevLayout = this.layout;
        this.layout = {
          measured,
          actual: this.removeElementScroll(measured)
        };
        this.layoutCorrected = createBox();
        this.isLayoutDirty = false;
        this.projectionDelta = void 0;
        this.notifyListeners("measure", this.layout.actual);
        (_a2 = this.options.visualElement) === null || _a2 === void 0 ? void 0 : _a2.notifyLayoutMeasure(this.layout.actual, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.actual);
      };
      ProjectionNode.prototype.updateScroll = function() {
        if (this.options.layoutScroll && this.instance) {
          this.isScrollRoot = checkIsScrollRoot(this.instance);
          this.scroll = measureScroll(this.instance);
        }
      };
      ProjectionNode.prototype.resetTransform = function() {
        var _a2;
        if (!resetTransform)
          return;
        var isResetRequested = this.isLayoutDirty || this.shouldResetTransform;
        var hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);
        var transformTemplate = (_a2 = this.options.visualElement) === null || _a2 === void 0 ? void 0 : _a2.getProps().transformTemplate;
        var transformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, "");
        var transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;
        if (isResetRequested && (hasProjection || hasTransform(this.latestValues) || transformTemplateHasChanged)) {
          resetTransform(this.instance, transformTemplateValue);
          this.shouldResetTransform = false;
          this.scheduleRender();
        }
      };
      ProjectionNode.prototype.measure = function() {
        var visualElement2 = this.options.visualElement;
        if (!visualElement2)
          return createBox();
        var box = visualElement2.measureViewportBox();
        var scroll2 = this.root.scroll;
        if (scroll2) {
          translateAxis(box.x, scroll2.x);
          translateAxis(box.y, scroll2.y);
        }
        return box;
      };
      ProjectionNode.prototype.removeElementScroll = function(box) {
        var boxWithoutScroll = createBox();
        copyBoxInto(boxWithoutScroll, box);
        for (var i9 = 0; i9 < this.path.length; i9++) {
          var node = this.path[i9];
          var scroll_1 = node.scroll, options = node.options, isScrollRoot = node.isScrollRoot;
          if (node !== this.root && scroll_1 && options.layoutScroll) {
            if (isScrollRoot) {
              copyBoxInto(boxWithoutScroll, box);
              var rootScroll = this.root.scroll;
              if (rootScroll) {
                translateAxis(boxWithoutScroll.x, -rootScroll.x);
                translateAxis(boxWithoutScroll.y, -rootScroll.y);
              }
            }
            translateAxis(boxWithoutScroll.x, scroll_1.x);
            translateAxis(boxWithoutScroll.y, scroll_1.y);
          }
        }
        return boxWithoutScroll;
      };
      ProjectionNode.prototype.applyTransform = function(box, transformOnly) {
        if (transformOnly === void 0) {
          transformOnly = false;
        }
        var withTransforms = createBox();
        copyBoxInto(withTransforms, box);
        for (var i9 = 0; i9 < this.path.length; i9++) {
          var node = this.path[i9];
          if (!transformOnly && node.options.layoutScroll && node.scroll && node !== node.root) {
            transformBox(withTransforms, {
              x: -node.scroll.x,
              y: -node.scroll.y
            });
          }
          if (!hasTransform(node.latestValues))
            continue;
          transformBox(withTransforms, node.latestValues);
        }
        if (hasTransform(this.latestValues)) {
          transformBox(withTransforms, this.latestValues);
        }
        return withTransforms;
      };
      ProjectionNode.prototype.removeTransform = function(box) {
        var _a2;
        var boxWithoutTransform = createBox();
        copyBoxInto(boxWithoutTransform, box);
        for (var i9 = 0; i9 < this.path.length; i9++) {
          var node = this.path[i9];
          if (!node.instance)
            continue;
          if (!hasTransform(node.latestValues))
            continue;
          hasScale(node.latestValues) && node.updateSnapshot();
          var sourceBox = createBox();
          var nodeBox = node.measure();
          copyBoxInto(sourceBox, nodeBox);
          removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a2 = node.snapshot) === null || _a2 === void 0 ? void 0 : _a2.layout, sourceBox);
        }
        if (hasTransform(this.latestValues)) {
          removeBoxTransforms(boxWithoutTransform, this.latestValues);
        }
        return boxWithoutTransform;
      };
      ProjectionNode.prototype.setTargetDelta = function(delta) {
        this.targetDelta = delta;
        this.root.scheduleUpdateProjection();
      };
      ProjectionNode.prototype.setOptions = function(options) {
        var _a2;
        this.options = __assign(__assign(__assign({}, this.options), options), { crossfade: (_a2 = options.crossfade) !== null && _a2 !== void 0 ? _a2 : true });
      };
      ProjectionNode.prototype.clearMeasurements = function() {
        this.scroll = void 0;
        this.layout = void 0;
        this.snapshot = void 0;
        this.prevTransformTemplateValue = void 0;
        this.targetDelta = void 0;
        this.target = void 0;
        this.isLayoutDirty = false;
      };
      ProjectionNode.prototype.resolveTargetDelta = function() {
        var _a2;
        var _b = this.options, layout = _b.layout, layoutId = _b.layoutId;
        if (!this.layout || !(layout || layoutId))
          return;
        if (!this.targetDelta && !this.relativeTarget) {
          this.relativeParent = this.getClosestProjectingParent();
          if (this.relativeParent && this.relativeParent.layout) {
            this.relativeTarget = createBox();
            this.relativeTargetOrigin = createBox();
            calcRelativePosition(this.relativeTargetOrigin, this.layout.actual, this.relativeParent.layout.actual);
            copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);
          }
        }
        if (!this.relativeTarget && !this.targetDelta)
          return;
        if (!this.target) {
          this.target = createBox();
          this.targetWithTransforms = createBox();
        }
        if (this.relativeTarget && this.relativeTargetOrigin && ((_a2 = this.relativeParent) === null || _a2 === void 0 ? void 0 : _a2.target)) {
          calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);
        } else if (this.targetDelta) {
          if (Boolean(this.resumingFrom)) {
            this.target = this.applyTransform(this.layout.actual);
          } else {
            copyBoxInto(this.target, this.layout.actual);
          }
          applyBoxDelta(this.target, this.targetDelta);
        } else {
          copyBoxInto(this.target, this.layout.actual);
        }
        if (this.attemptToResolveRelativeTarget) {
          this.attemptToResolveRelativeTarget = false;
          this.relativeParent = this.getClosestProjectingParent();
          if (this.relativeParent && Boolean(this.relativeParent.resumingFrom) === Boolean(this.resumingFrom) && !this.relativeParent.options.layoutScroll && this.relativeParent.target) {
            this.relativeTarget = createBox();
            this.relativeTargetOrigin = createBox();
            calcRelativePosition(this.relativeTargetOrigin, this.target, this.relativeParent.target);
            copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);
          }
        }
      };
      ProjectionNode.prototype.getClosestProjectingParent = function() {
        if (!this.parent || hasTransform(this.parent.latestValues))
          return void 0;
        if ((this.parent.relativeTarget || this.parent.targetDelta) && this.parent.layout) {
          return this.parent;
        } else {
          return this.parent.getClosestProjectingParent();
        }
      };
      ProjectionNode.prototype.calcProjection = function() {
        var _a2;
        var _b = this.options, layout = _b.layout, layoutId = _b.layoutId;
        this.isTreeAnimating = Boolean(((_a2 = this.parent) === null || _a2 === void 0 ? void 0 : _a2.isTreeAnimating) || this.currentAnimation || this.pendingAnimation);
        if (!this.isTreeAnimating) {
          this.targetDelta = this.relativeTarget = void 0;
        }
        if (!this.layout || !(layout || layoutId))
          return;
        var lead = this.getLead();
        copyBoxInto(this.layoutCorrected, this.layout.actual);
        applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, Boolean(this.resumingFrom) || this !== lead);
        var target = lead.target;
        if (!target)
          return;
        if (!this.projectionDelta) {
          this.projectionDelta = createDelta();
          this.projectionDeltaWithTransform = createDelta();
        }
        var prevTreeScaleX = this.treeScale.x;
        var prevTreeScaleY = this.treeScale.y;
        var prevProjectionTransform = this.projectionTransform;
        calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);
        this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);
        if (this.projectionTransform !== prevProjectionTransform || this.treeScale.x !== prevTreeScaleX || this.treeScale.y !== prevTreeScaleY) {
          this.hasProjected = true;
          this.scheduleRender();
          this.notifyListeners("projectionUpdate", target);
        }
      };
      ProjectionNode.prototype.hide = function() {
        this.isVisible = false;
      };
      ProjectionNode.prototype.show = function() {
        this.isVisible = true;
      };
      ProjectionNode.prototype.scheduleRender = function(notifyAll) {
        var _a2, _b, _c;
        if (notifyAll === void 0) {
          notifyAll = true;
        }
        (_b = (_a2 = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a2);
        notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());
        if (this.resumingFrom && !this.resumingFrom.instance) {
          this.resumingFrom = void 0;
        }
      };
      ProjectionNode.prototype.setAnimationOrigin = function(delta, hasOnlyRelativeTargetChanged) {
        var _this = this;
        var _a2;
        if (hasOnlyRelativeTargetChanged === void 0) {
          hasOnlyRelativeTargetChanged = false;
        }
        var snapshot = this.snapshot;
        var snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};
        var mixedValues = __assign({}, this.latestValues);
        var targetDelta = createDelta();
        this.relativeTarget = this.relativeTargetOrigin = void 0;
        this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;
        var relativeLayout = createBox();
        var isSharedLayoutAnimation = snapshot === null || snapshot === void 0 ? void 0 : snapshot.isShared;
        var isOnlyMember = (((_a2 = this.getStack()) === null || _a2 === void 0 ? void 0 : _a2.members.length) || 0) <= 1;
        var shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation && !isOnlyMember && this.options.crossfade === true && !this.path.some(hasOpacityCrossfade));
        this.animationProgress = 0;
        this.mixTargetDelta = function(latest) {
          var _a3;
          var progress3 = latest / 1e3;
          mixAxisDelta(targetDelta.x, delta.x, progress3);
          mixAxisDelta(targetDelta.y, delta.y, progress3);
          _this.setTargetDelta(targetDelta);
          if (_this.relativeTarget && _this.relativeTargetOrigin && _this.layout && ((_a3 = _this.relativeParent) === null || _a3 === void 0 ? void 0 : _a3.layout)) {
            calcRelativePosition(relativeLayout, _this.layout.actual, _this.relativeParent.layout.actual);
            mixBox(_this.relativeTarget, _this.relativeTargetOrigin, relativeLayout, progress3);
          }
          if (isSharedLayoutAnimation) {
            _this.animationValues = mixedValues;
            mixValues(mixedValues, snapshotLatestValues, _this.latestValues, progress3, shouldCrossfadeOpacity, isOnlyMember);
          }
          _this.root.scheduleUpdateProjection();
          _this.scheduleRender();
          _this.animationProgress = progress3;
        };
        this.mixTargetDelta(0);
      };
      ProjectionNode.prototype.startAnimation = function(options) {
        var _this = this;
        var _a2, _b;
        this.notifyListeners("animationStart");
        (_a2 = this.currentAnimation) === null || _a2 === void 0 ? void 0 : _a2.stop();
        if (this.resumingFrom) {
          (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();
        }
        if (this.pendingAnimation) {
          cancelSync.update(this.pendingAnimation);
          this.pendingAnimation = void 0;
        }
        this.pendingAnimation = es_default.update(function() {
          globalProjectionState.hasAnimatedSinceResize = true;
          _this.currentAnimation = animate2(0, animationTarget, __assign(__assign({}, options), { onUpdate: function(latest) {
            var _a3;
            _this.mixTargetDelta(latest);
            (_a3 = options.onUpdate) === null || _a3 === void 0 ? void 0 : _a3.call(options, latest);
          }, onComplete: function() {
            var _a3;
            (_a3 = options.onComplete) === null || _a3 === void 0 ? void 0 : _a3.call(options);
            _this.completeAnimation();
          } }));
          if (_this.resumingFrom) {
            _this.resumingFrom.currentAnimation = _this.currentAnimation;
          }
          _this.pendingAnimation = void 0;
        });
      };
      ProjectionNode.prototype.completeAnimation = function() {
        var _a2;
        if (this.resumingFrom) {
          this.resumingFrom.currentAnimation = void 0;
          this.resumingFrom.preserveOpacity = void 0;
        }
        (_a2 = this.getStack()) === null || _a2 === void 0 ? void 0 : _a2.exitAnimationComplete();
        this.resumingFrom = this.currentAnimation = this.animationValues = void 0;
        this.notifyListeners("animationComplete");
      };
      ProjectionNode.prototype.finishAnimation = function() {
        var _a2;
        if (this.currentAnimation) {
          (_a2 = this.mixTargetDelta) === null || _a2 === void 0 ? void 0 : _a2.call(this, animationTarget);
          this.currentAnimation.stop();
        }
        this.completeAnimation();
      };
      ProjectionNode.prototype.applyTransformsToTarget = function() {
        var _a2 = this.getLead(), targetWithTransforms = _a2.targetWithTransforms, target = _a2.target, layout = _a2.layout, latestValues = _a2.latestValues;
        if (!targetWithTransforms || !target || !layout)
          return;
        copyBoxInto(targetWithTransforms, target);
        transformBox(targetWithTransforms, latestValues);
        calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);
      };
      ProjectionNode.prototype.registerSharedNode = function(layoutId, node) {
        var _a2, _b, _c;
        if (!this.sharedNodes.has(layoutId)) {
          this.sharedNodes.set(layoutId, new NodeStack());
        }
        var stack = this.sharedNodes.get(layoutId);
        stack.add(node);
        node.promote({
          transition: (_a2 = node.options.initialPromotionConfig) === null || _a2 === void 0 ? void 0 : _a2.transition,
          preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node)
        });
      };
      ProjectionNode.prototype.isLead = function() {
        var stack = this.getStack();
        return stack ? stack.lead === this : true;
      };
      ProjectionNode.prototype.getLead = function() {
        var _a2;
        var layoutId = this.options.layoutId;
        return layoutId ? ((_a2 = this.getStack()) === null || _a2 === void 0 ? void 0 : _a2.lead) || this : this;
      };
      ProjectionNode.prototype.getPrevLead = function() {
        var _a2;
        var layoutId = this.options.layoutId;
        return layoutId ? (_a2 = this.getStack()) === null || _a2 === void 0 ? void 0 : _a2.prevLead : void 0;
      };
      ProjectionNode.prototype.getStack = function() {
        var layoutId = this.options.layoutId;
        if (layoutId)
          return this.root.sharedNodes.get(layoutId);
      };
      ProjectionNode.prototype.promote = function(_a2) {
        var _b = _a2 === void 0 ? {} : _a2, needsReset = _b.needsReset, transition = _b.transition, preserveFollowOpacity = _b.preserveFollowOpacity;
        var stack = this.getStack();
        if (stack)
          stack.promote(this, preserveFollowOpacity);
        if (needsReset) {
          this.projectionDelta = void 0;
          this.needsReset = true;
        }
        if (transition)
          this.setOptions({ transition });
      };
      ProjectionNode.prototype.relegate = function() {
        var stack = this.getStack();
        if (stack) {
          return stack.relegate(this);
        } else {
          return false;
        }
      };
      ProjectionNode.prototype.resetRotation = function() {
        var visualElement2 = this.options.visualElement;
        if (!visualElement2)
          return;
        var hasRotate = false;
        var resetValues = {};
        for (var i9 = 0; i9 < transformAxes.length; i9++) {
          var axis = transformAxes[i9];
          var key = "rotate" + axis;
          if (!visualElement2.getStaticValue(key)) {
            continue;
          }
          hasRotate = true;
          resetValues[key] = visualElement2.getStaticValue(key);
          visualElement2.setStaticValue(key, 0);
        }
        if (!hasRotate)
          return;
        visualElement2 === null || visualElement2 === void 0 ? void 0 : visualElement2.syncRender();
        for (var key in resetValues) {
          visualElement2.setStaticValue(key, resetValues[key]);
        }
        visualElement2.scheduleRender();
      };
      ProjectionNode.prototype.getProjectionStyles = function(styleProp) {
        var _a2, _b, _c, _d, _e5, _f;
        if (styleProp === void 0) {
          styleProp = {};
        }
        var styles = {};
        if (!this.instance || this.isSVG)
          return styles;
        if (!this.isVisible) {
          return { visibility: "hidden" };
        } else {
          styles.visibility = "";
        }
        var transformTemplate = (_a2 = this.options.visualElement) === null || _a2 === void 0 ? void 0 : _a2.getProps().transformTemplate;
        if (this.needsReset) {
          this.needsReset = false;
          styles.opacity = "";
          styles.pointerEvents = resolveMotionValue(styleProp.pointerEvents) || "";
          styles.transform = transformTemplate ? transformTemplate(this.latestValues, "") : "none";
          return styles;
        }
        var lead = this.getLead();
        if (!this.projectionDelta || !this.layout || !lead.target) {
          var emptyStyles = {};
          if (this.options.layoutId) {
            emptyStyles.opacity = (_b = this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1;
            emptyStyles.pointerEvents = resolveMotionValue(styleProp.pointerEvents) || "";
          }
          if (this.hasProjected && !hasTransform(this.latestValues)) {
            emptyStyles.transform = transformTemplate ? transformTemplate({}, "") : "none";
            this.hasProjected = false;
          }
          return emptyStyles;
        }
        var valuesToRender = lead.animationValues || lead.latestValues;
        this.applyTransformsToTarget();
        styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);
        if (transformTemplate) {
          styles.transform = transformTemplate(valuesToRender, styles.transform);
        }
        var _g = this.projectionDelta, x4 = _g.x, y7 = _g.y;
        styles.transformOrigin = "".concat(x4.origin * 100, "% ").concat(y7.origin * 100, "% 0");
        if (lead.animationValues) {
          styles.opacity = lead === this ? (_d = (_c = valuesToRender.opacity) !== null && _c !== void 0 ? _c : this.latestValues.opacity) !== null && _d !== void 0 ? _d : 1 : this.preserveOpacity ? this.latestValues.opacity : valuesToRender.opacityExit;
        } else {
          styles.opacity = lead === this ? (_e5 = valuesToRender.opacity) !== null && _e5 !== void 0 ? _e5 : "" : (_f = valuesToRender.opacityExit) !== null && _f !== void 0 ? _f : 0;
        }
        for (var key in scaleCorrectors) {
          if (valuesToRender[key] === void 0)
            continue;
          var _h = scaleCorrectors[key], correct = _h.correct, applyTo = _h.applyTo;
          var corrected = correct(valuesToRender[key], lead);
          if (applyTo) {
            var num = applyTo.length;
            for (var i9 = 0; i9 < num; i9++) {
              styles[applyTo[i9]] = corrected;
            }
          } else {
            styles[key] = corrected;
          }
        }
        if (this.options.layoutId) {
          styles.pointerEvents = lead === this ? resolveMotionValue(styleProp.pointerEvents) || "" : "none";
        }
        return styles;
      };
      ProjectionNode.prototype.clearSnapshot = function() {
        this.resumeFrom = this.snapshot = void 0;
      };
      ProjectionNode.prototype.resetTree = function() {
        this.root.nodes.forEach(function(node) {
          var _a2;
          return (_a2 = node.currentAnimation) === null || _a2 === void 0 ? void 0 : _a2.stop();
        });
        this.root.nodes.forEach(clearMeasurements);
        this.root.sharedNodes.clear();
      };
      return ProjectionNode;
    }()
  );
}
function updateLayout(node) {
  node.updateLayout();
}
function notifyLayoutUpdate(node) {
  var _a, _b, _c, _d;
  var snapshot = (_b = (_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) !== null && _b !== void 0 ? _b : node.snapshot;
  if (node.isLead() && node.layout && snapshot && node.hasListeners("didUpdate")) {
    var _e5 = node.layout, layout_1 = _e5.actual, measuredLayout = _e5.measured;
    if (node.options.animationType === "size") {
      eachAxis(function(axis) {
        var axisSnapshot = snapshot.isShared ? snapshot.measured[axis] : snapshot.layout[axis];
        var length2 = calcLength(axisSnapshot);
        axisSnapshot.min = layout_1[axis].min;
        axisSnapshot.max = axisSnapshot.min + length2;
      });
    } else if (node.options.animationType === "position") {
      eachAxis(function(axis) {
        var axisSnapshot = snapshot.isShared ? snapshot.measured[axis] : snapshot.layout[axis];
        var length2 = calcLength(layout_1[axis]);
        axisSnapshot.max = axisSnapshot.min + length2;
      });
    }
    var layoutDelta = createDelta();
    calcBoxDelta(layoutDelta, layout_1, snapshot.layout);
    var visualDelta = createDelta();
    if (snapshot.isShared) {
      calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measured);
    } else {
      calcBoxDelta(visualDelta, layout_1, snapshot.layout);
    }
    var hasLayoutChanged = !isDeltaZero(layoutDelta);
    var hasRelativeTargetChanged = false;
    if (!node.resumeFrom) {
      node.relativeParent = node.getClosestProjectingParent();
      if (node.relativeParent && !node.relativeParent.resumeFrom) {
        var _f = node.relativeParent, parentSnapshot = _f.snapshot, parentLayout = _f.layout;
        if (parentSnapshot && parentLayout) {
          var relativeSnapshot = createBox();
          calcRelativePosition(relativeSnapshot, snapshot.layout, parentSnapshot.layout);
          var relativeLayout = createBox();
          calcRelativePosition(relativeLayout, layout_1, parentLayout.actual);
          if (!boxEquals(relativeSnapshot, relativeLayout)) {
            hasRelativeTargetChanged = true;
          }
        }
      }
    }
    node.notifyListeners("didUpdate", {
      layout: layout_1,
      snapshot,
      delta: visualDelta,
      layoutDelta,
      hasLayoutChanged,
      hasRelativeTargetChanged
    });
  } else if (node.isLead()) {
    (_d = (_c = node.options).onExitComplete) === null || _d === void 0 ? void 0 : _d.call(_c);
  }
  node.options.transition = void 0;
}
function clearSnapshot(node) {
  node.clearSnapshot();
}
function clearMeasurements(node) {
  node.clearMeasurements();
}
function resetTransformStyle(node) {
  var visualElement2 = node.options.visualElement;
  if (visualElement2 === null || visualElement2 === void 0 ? void 0 : visualElement2.getProps().onBeforeLayoutMeasure) {
    visualElement2.notifyBeforeLayoutMeasure();
  }
  node.resetTransform();
}
function finishAnimation(node) {
  node.finishAnimation();
  node.targetDelta = node.relativeTarget = node.target = void 0;
}
function resolveTargetDelta(node) {
  node.resolveTargetDelta();
}
function calcProjection(node) {
  node.calcProjection();
}
function resetRotation(node) {
  node.resetRotation();
}
function removeLeadSnapshots(stack) {
  stack.removeLeadSnapshot();
}
function mixAxisDelta(output, delta, p7) {
  output.translate = mix(delta.translate, 0, p7);
  output.scale = mix(delta.scale, 1, p7);
  output.origin = delta.origin;
  output.originPoint = delta.originPoint;
}
function mixAxis(output, from, to2, p7) {
  output.min = mix(from.min, to2.min, p7);
  output.max = mix(from.max, to2.max, p7);
}
function mixBox(output, from, to2, p7) {
  mixAxis(output.x, from.x, to2.x, p7);
  mixAxis(output.y, from.y, to2.y, p7);
}
function hasOpacityCrossfade(node) {
  return node.animationValues && node.animationValues.opacityExit !== void 0;
}
var defaultLayoutTransition = {
  duration: 0.45,
  ease: [0.4, 0, 0.1, 1]
};
function mountNodeEarly(node, id2) {
  var searchNode = node.root;
  for (var i9 = node.path.length - 1; i9 >= 0; i9--) {
    if (Boolean(node.path[i9].instance)) {
      searchNode = node.path[i9];
      break;
    }
  }
  var searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;
  var element = searchElement.querySelector('[data-projection-id="'.concat(id2, '"]'));
  if (element)
    node.mount(element, true);
}
function roundAxis(axis) {
  axis.min = Math.round(axis.min);
  axis.max = Math.round(axis.max);
}
function roundBox(box) {
  roundAxis(box.x);
  roundAxis(box.y);
}

// node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs
var DocumentProjectionNode = createProjectionNode({
  attachResizeListener: function(ref, notify) {
    return addDomEvent(ref, "resize", notify);
  },
  measureScroll: function() {
    return {
      x: document.documentElement.scrollLeft || document.body.scrollLeft,
      y: document.documentElement.scrollTop || document.body.scrollTop
    };
  },
  checkIsScrollRoot: function() {
    return true;
  }
});

// node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs
var rootProjectionNode = {
  current: void 0
};
var HTMLProjectionNode = createProjectionNode({
  measureScroll: function(instance) {
    return {
      x: instance.scrollLeft,
      y: instance.scrollTop
    };
  },
  defaultParent: function() {
    if (!rootProjectionNode.current) {
      var documentNode = new DocumentProjectionNode(0, {});
      documentNode.mount(window);
      documentNode.setOptions({ layoutScroll: true });
      rootProjectionNode.current = documentNode;
    }
    return rootProjectionNode.current;
  },
  resetTransform: function(instance, value) {
    instance.style.transform = value !== null && value !== void 0 ? value : "none";
  },
  checkIsScrollRoot: function(instance) {
    return Boolean(window.getComputedStyle(instance).position === "fixed");
  }
});

// node_modules/framer-motion/dist/es/render/dom/motion.mjs
var featureBundle = __assign(__assign(__assign(__assign({}, animations), gestureAnimations), drag), layoutFeatures);
var motion = createMotionProxy(function(Component, config) {
  return createDomMotionConfig(Component, config, featureBundle, createDomVisualElement, HTMLProjectionNode);
});

// node_modules/framer-motion/dist/es/render/dom/motion-minimal.mjs
var m = createMotionProxy(createDomMotionConfig);

// node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs
var React4 = __toESM(require_react(), 1);
var import_react35 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/utils/use-force-update.mjs
var import_react33 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs
var import_react32 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs
var React3 = __toESM(require_react(), 1);
var import_react34 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/components/AnimateSharedLayout.mjs
var React6 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/components/LayoutGroup/index.mjs
var React5 = __toESM(require_react(), 1);
var import_react37 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/context/DeprecatedLayoutGroupContext.mjs
var import_react36 = __toESM(require_react(), 1);
var DeprecatedLayoutGroupContext = (0, import_react36.createContext)(null);

// node_modules/framer-motion/dist/es/components/MotionConfig/index.mjs
var React7 = __toESM(require_react(), 1);
var import_react38 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/components/LazyMotion/index.mjs
var React8 = __toESM(require_react(), 1);
var import_react39 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/components/Reorder/Group.mjs
var React9 = __toESM(require_react(), 1);
var import_react41 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/context/ReorderContext.mjs
var import_react40 = __toESM(require_react(), 1);
var ReorderContext = (0, import_react40.createContext)(null);

// node_modules/framer-motion/dist/es/components/Reorder/utils/check-reorder.mjs
function checkReorder(order3, value, offset, velocity) {
  if (!velocity)
    return order3;
  var index2 = order3.findIndex(function(item2) {
    return item2.value === value;
  });
  if (index2 === -1)
    return order3;
  var nextOffset = velocity > 0 ? 1 : -1;
  var nextItem = order3[index2 + nextOffset];
  if (!nextItem)
    return order3;
  var item = order3[index2];
  var nextLayout = nextItem.layout;
  var nextItemCenter = mix(nextLayout.min, nextLayout.max, 0.5);
  if (nextOffset === 1 && item.layout.max + offset > nextItemCenter || nextOffset === -1 && item.layout.min + offset < nextItemCenter) {
    return moveItem(order3, index2, index2 + nextOffset);
  }
  return order3;
}

// node_modules/framer-motion/dist/es/components/Reorder/Group.mjs
function ReorderGroup(_a, externalRef) {
  var children = _a.children, _b = _a.as, as = _b === void 0 ? "ul" : _b, _c = _a.axis, axis = _c === void 0 ? "y" : _c, onReorder = _a.onReorder, values = _a.values, props = __rest(_a, ["children", "as", "axis", "onReorder", "values"]);
  var Component = useConstant(function() {
    return motion(as);
  });
  var order3 = [];
  var isReordering = (0, import_react41.useRef)(false);
  invariant(Boolean(values), "Reorder.Group must be provided a values prop");
  var context = {
    axis,
    registerItem: function(value, layout) {
      if (layout && order3.findIndex(function(entry) {
        return value === entry.value;
      }) === -1) {
        order3.push({ value, layout: layout[axis] });
        order3.sort(compareMin);
      }
    },
    updateOrder: function(id2, offset, velocity) {
      if (isReordering.current)
        return;
      var newOrder = checkReorder(order3, id2, offset, velocity);
      if (order3 !== newOrder) {
        isReordering.current = true;
        onReorder(newOrder.map(getValue).filter(function(value) {
          return values.indexOf(value) !== -1;
        }));
      }
    }
  };
  (0, import_react41.useEffect)(function() {
    isReordering.current = false;
  });
  return React9.createElement(
    Component,
    __assign({}, props, { ref: externalRef }),
    React9.createElement(ReorderContext.Provider, { value: context }, children)
  );
}
var Group = (0, import_react41.forwardRef)(ReorderGroup);
function getValue(item) {
  return item.value;
}
function compareMin(a12, b9) {
  return a12.layout.min - b9.layout.min;
}

// node_modules/framer-motion/dist/es/components/Reorder/Item.mjs
var React10 = __toESM(require_react(), 1);
var import_react43 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/value/use-motion-value.mjs
var import_react42 = __toESM(require_react(), 1);
function useMotionValue(initial) {
  var value = useConstant(function() {
    return motionValue(initial);
  });
  var isStatic = (0, import_react42.useContext)(MotionConfigContext).isStatic;
  if (isStatic) {
    var _a = __read((0, import_react42.useState)(initial), 2), setLatest_1 = _a[1];
    (0, import_react42.useEffect)(function() {
      return value.onChange(setLatest_1);
    }, []);
  }
  return value;
}

// node_modules/framer-motion/dist/es/utils/transform.mjs
var isCustomValueType = function(v6) {
  return typeof v6 === "object" && v6.mix;
};
var getMixer2 = function(v6) {
  return isCustomValueType(v6) ? v6.mix : void 0;
};
function transform() {
  var args = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    args[_i] = arguments[_i];
  }
  var useImmediate = !Array.isArray(args[0]);
  var argOffset = useImmediate ? 0 : -1;
  var inputValue = args[0 + argOffset];
  var inputRange = args[1 + argOffset];
  var outputRange = args[2 + argOffset];
  var options = args[3 + argOffset];
  var interpolator = interpolate(inputRange, outputRange, __assign({ mixer: getMixer2(outputRange[0]) }, options));
  return useImmediate ? interpolator(inputValue) : interpolator;
}

// node_modules/framer-motion/dist/es/value/use-on-change.mjs
function useMultiOnChange(values, handler) {
  useIsomorphicLayoutEffect(function() {
    var subscriptions = values.map(function(value) {
      return value.onChange(handler);
    });
    return function() {
      return subscriptions.forEach(function(unsubscribe) {
        return unsubscribe();
      });
    };
  });
}

// node_modules/framer-motion/dist/es/value/use-combine-values.mjs
function useCombineMotionValues(values, combineValues) {
  var value = useMotionValue(combineValues());
  var updateValue = function() {
    return value.set(combineValues());
  };
  updateValue();
  useMultiOnChange(values, function() {
    return es_default.update(updateValue, false, true);
  });
  return value;
}

// node_modules/framer-motion/dist/es/value/use-transform.mjs
function useTransform(input, inputRangeOrTransformer, outputRange, options) {
  var transformer = typeof inputRangeOrTransformer === "function" ? inputRangeOrTransformer : transform(inputRangeOrTransformer, outputRange, options);
  return Array.isArray(input) ? useListTransform(input, transformer) : useListTransform([input], function(_a) {
    var _b = __read(_a, 1), latest = _b[0];
    return transformer(latest);
  });
}
function useListTransform(values, transformer) {
  var latest = useConstant(function() {
    return [];
  });
  return useCombineMotionValues(values, function() {
    latest.length = 0;
    var numValues = values.length;
    for (var i9 = 0; i9 < numValues; i9++) {
      latest[i9] = values[i9].get();
    }
    return transformer(latest);
  });
}

// node_modules/framer-motion/dist/es/components/Reorder/Item.mjs
function useDefaultMotionValue(value, defaultValue) {
  if (defaultValue === void 0) {
    defaultValue = 0;
  }
  return isMotionValue(value) ? value : useMotionValue(defaultValue);
}
function ReorderItem(_a, externalRef) {
  var children = _a.children, style2 = _a.style, value = _a.value, _b = _a.as, as = _b === void 0 ? "li" : _b, onDrag = _a.onDrag, _c = _a.layout, layout = _c === void 0 ? true : _c, props = __rest(_a, ["children", "style", "value", "as", "onDrag", "layout"]);
  var Component = useConstant(function() {
    return motion(as);
  });
  var context = (0, import_react43.useContext)(ReorderContext);
  var point = {
    x: useDefaultMotionValue(style2 === null || style2 === void 0 ? void 0 : style2.x),
    y: useDefaultMotionValue(style2 === null || style2 === void 0 ? void 0 : style2.y)
  };
  var zIndex = useTransform([point.x, point.y], function(_a2) {
    var _b2 = __read(_a2, 2), latestX = _b2[0], latestY = _b2[1];
    return latestX || latestY ? 1 : "unset";
  });
  var measuredLayout = (0, import_react43.useRef)(null);
  invariant(Boolean(context), "Reorder.Item must be a child of Reorder.Group");
  var _d = context, axis = _d.axis, registerItem = _d.registerItem, updateOrder = _d.updateOrder;
  (0, import_react43.useEffect)(function() {
    registerItem(value, measuredLayout.current);
  }, [context]);
  return React10.createElement(Component, __assign({ drag: axis }, props, { dragSnapToOrigin: true, style: __assign(__assign({}, style2), { x: point.x, y: point.y, zIndex }), layout, onDrag: function(event, gesturePoint) {
    var velocity = gesturePoint.velocity;
    velocity[axis] && updateOrder(value, point[axis].get(), velocity[axis]);
    onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, gesturePoint);
  }, onLayoutMeasure: function(measured) {
    measuredLayout.current = measured;
  }, ref: externalRef }), children);
}
var Item = (0, import_react43.forwardRef)(ReorderItem);

// node_modules/framer-motion/dist/es/components/Reorder/index.mjs
var Reorder = {
  Group,
  Item
};

// node_modules/framer-motion/dist/es/render/dom/features-animation.mjs
var domAnimation = __assign(__assign({ renderer: createDomVisualElement }, animations), gestureAnimations);

// node_modules/framer-motion/dist/es/render/dom/features-max.mjs
var domMax = __assign(__assign(__assign(__assign({}, domAnimation), drag), layoutFeatures), { projectionNodeConstructor: HTMLProjectionNode });

// node_modules/framer-motion/dist/es/value/use-spring.mjs
var import_react44 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/value/use-velocity.mjs
var import_react45 = __toESM(require_react(), 1);

// node_modules/@motionone/utils/dist/noop.es.js
var noopReturn = (v6) => v6;

// node_modules/@motionone/utils/dist/time.es.js
var time = {
  ms: (seconds) => seconds * 1e3,
  s: (milliseconds) => milliseconds / 1e3
};

// node_modules/@motionone/utils/dist/velocity.es.js
function velocityPerSecond2(velocity, frameDuration) {
  return frameDuration ? velocity * (1e3 / frameDuration) : 0;
}

// node_modules/@motionone/dom/dist/animate/utils/transforms.es.js
var axes = ["", "X", "Y", "Z"];
var order2 = ["translate", "scale", "rotate", "skew"];
var rotation = {
  syntax: "<angle>",
  initialValue: "0deg",
  toDefaultUnit: (v6) => v6 + "deg"
};
var baseTransformProperties = {
  translate: {
    syntax: "<length-percentage>",
    initialValue: "0px",
    toDefaultUnit: (v6) => v6 + "px"
  },
  rotate: rotation,
  scale: {
    syntax: "<number>",
    initialValue: 1,
    toDefaultUnit: noopReturn
  },
  skew: rotation
};
var transformDefinitions = /* @__PURE__ */ new Map();
var asTransformCssVar = (name) => `--motion-${name}`;
var transforms = ["x", "y", "z"];
order2.forEach((name) => {
  axes.forEach((axis) => {
    transforms.push(name + axis);
    transformDefinitions.set(asTransformCssVar(name + axis), baseTransformProperties[name]);
  });
});
var transformLookup = new Set(transforms);

// node_modules/@motionone/easing/dist/cubic-bezier.es.js
var calcBezier2 = (t18, a1, a22) => (((1 - 3 * a22 + 3 * a1) * t18 + (3 * a22 - 6 * a1)) * t18 + 3 * a1) * t18;
var subdivisionPrecision2 = 1e-7;
var subdivisionMaxIterations2 = 12;
function binarySubdivide2(x4, lowerBound, upperBound, mX1, mX2) {
  let currentX;
  let currentT;
  let i9 = 0;
  do {
    currentT = lowerBound + (upperBound - lowerBound) / 2;
    currentX = calcBezier2(currentT, mX1, mX2) - x4;
    if (currentX > 0) {
      upperBound = currentT;
    } else {
      lowerBound = currentT;
    }
  } while (Math.abs(currentX) > subdivisionPrecision2 && ++i9 < subdivisionMaxIterations2);
  return currentT;
}
function cubicBezier2(mX1, mY1, mX2, mY2) {
  if (mX1 === mY1 && mX2 === mY2)
    return noopReturn;
  const getTForX = (aX) => binarySubdivide2(aX, 0, 1, mX1, mX2);
  return (t18) => t18 === 0 || t18 === 1 ? t18 : calcBezier2(getTForX(t18), mY1, mY2);
}

// node_modules/@motionone/animation/dist/utils/easing.es.js
var namedEasings = {
  ease: cubicBezier2(0.25, 0.1, 0.25, 1),
  "ease-in": cubicBezier2(0.42, 0, 1, 1),
  "ease-in-out": cubicBezier2(0.42, 0, 0.58, 1),
  "ease-out": cubicBezier2(0, 0, 0.58, 1)
};

// node_modules/@motionone/dom/dist/animate/utils/feature-detection.es.js
var testAnimation = (keyframes3) => document.createElement("div").animate(keyframes3, { duration: 1e-3 });
var featureTests = {
  cssRegisterProperty: () => typeof CSS !== "undefined" && Object.hasOwnProperty.call(CSS, "registerProperty"),
  waapi: () => Object.hasOwnProperty.call(Element.prototype, "animate"),
  partialKeyframes: () => {
    try {
      testAnimation({ opacity: [1] });
    } catch (e4) {
      return false;
    }
    return true;
  },
  finished: () => Boolean(testAnimation({ opacity: [0, 1] }).finished)
};
var results = {};
var supports = {};
for (const key in featureTests) {
  supports[key] = () => {
    if (results[key] === void 0)
      results[key] = featureTests[key]();
    return results[key];
  };
}

// node_modules/@motionone/dom/dist/utils/resolve-elements.es.js
function resolveElements(elements, selectorCache) {
  var _a;
  if (typeof elements === "string") {
    if (selectorCache) {
      (_a = selectorCache[elements]) !== null && _a !== void 0 ? _a : selectorCache[elements] = document.querySelectorAll(elements);
      elements = selectorCache[elements];
    } else {
      elements = document.querySelectorAll(elements);
    }
  } else if (elements instanceof Element) {
    elements = [elements];
  }
  return Array.from(elements || []);
}

// node_modules/@motionone/generators/dist/utils/velocity.es.js
var sampleT = 5;
function calcGeneratorVelocity(resolveValue, t18, current) {
  const prevT = Math.max(t18 - sampleT, 0);
  return velocityPerSecond2(current - resolveValue(prevT), t18 - prevT);
}

// node_modules/@motionone/generators/dist/spring/defaults.es.js
var defaults2 = {
  stiffness: 100,
  damping: 10,
  mass: 1
};

// node_modules/@motionone/generators/dist/spring/utils.es.js
var calcDampingRatio = (stiffness = defaults2.stiffness, damping = defaults2.damping, mass = defaults2.mass) => damping / (2 * Math.sqrt(stiffness * mass));

// node_modules/@motionone/generators/dist/utils/has-reached-target.es.js
function hasReachedTarget(origin, target, current) {
  return origin < target && current >= target || origin > target && current <= target;
}

// node_modules/@motionone/generators/dist/spring/index.es.js
var spring2 = ({ stiffness = defaults2.stiffness, damping = defaults2.damping, mass = defaults2.mass, from = 0, to: to2 = 1, velocity = 0, restSpeed, restDistance } = {}) => {
  velocity = velocity ? time.s(velocity) : 0;
  const state = {
    done: false,
    hasReachedTarget: false,
    current: from,
    target: to2
  };
  const initialDelta = to2 - from;
  const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1e3;
  const dampingRatio = calcDampingRatio(stiffness, damping, mass);
  const isGranularScale = Math.abs(initialDelta) < 5;
  restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);
  restDistance || (restDistance = isGranularScale ? 5e-3 : 0.5);
  let resolveSpring;
  if (dampingRatio < 1) {
    const angularFreq = undampedAngularFreq * Math.sqrt(1 - dampingRatio * dampingRatio);
    resolveSpring = (t18) => to2 - Math.exp(-dampingRatio * undampedAngularFreq * t18) * ((-velocity + dampingRatio * undampedAngularFreq * initialDelta) / angularFreq * Math.sin(angularFreq * t18) + initialDelta * Math.cos(angularFreq * t18));
  } else {
    resolveSpring = (t18) => {
      return to2 - Math.exp(-undampedAngularFreq * t18) * (initialDelta + (-velocity + undampedAngularFreq * initialDelta) * t18);
    };
  }
  return (t18) => {
    state.current = resolveSpring(t18);
    const currentVelocity = t18 === 0 ? velocity : calcGeneratorVelocity(resolveSpring, t18, state.current);
    const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;
    const isBelowDisplacementThreshold = Math.abs(to2 - state.current) <= restDistance;
    state.done = isBelowVelocityThreshold && isBelowDisplacementThreshold;
    state.hasReachedTarget = hasReachedTarget(from, to2, state.current);
    return state;
  };
};

// node_modules/@motionone/generators/dist/glide/index.es.js
var glide = ({ from = 0, velocity = 0, power = 0.8, decay: decay2 = 0.325, bounceDamping, bounceStiffness, changeTarget, min, max, restDistance = 0.5, restSpeed }) => {
  decay2 = time.ms(decay2);
  const state = {
    hasReachedTarget: false,
    done: false,
    current: from,
    target: from
  };
  const isOutOfBounds = (v6) => min !== void 0 && v6 < min || max !== void 0 && v6 > max;
  const nearestBoundary = (v6) => {
    if (min === void 0)
      return max;
    if (max === void 0)
      return min;
    return Math.abs(min - v6) < Math.abs(max - v6) ? min : max;
  };
  let amplitude = power * velocity;
  const ideal = from + amplitude;
  const target = changeTarget === void 0 ? ideal : changeTarget(ideal);
  state.target = target;
  if (target !== ideal)
    amplitude = target - from;
  const calcDelta = (t18) => -amplitude * Math.exp(-t18 / decay2);
  const calcLatest = (t18) => target + calcDelta(t18);
  const applyFriction = (t18) => {
    const delta = calcDelta(t18);
    const latest = calcLatest(t18);
    state.done = Math.abs(delta) <= restDistance;
    state.current = state.done ? target : latest;
  };
  let timeReachedBoundary;
  let spring$1;
  const checkCatchBoundary = (t18) => {
    if (!isOutOfBounds(state.current))
      return;
    timeReachedBoundary = t18;
    spring$1 = spring2({
      from: state.current,
      to: nearestBoundary(state.current),
      velocity: calcGeneratorVelocity(calcLatest, t18, state.current),
      damping: bounceDamping,
      stiffness: bounceStiffness,
      restDistance,
      restSpeed
    });
  };
  checkCatchBoundary(0);
  return (t18) => {
    let hasUpdatedFrame = false;
    if (!spring$1 && timeReachedBoundary === void 0) {
      hasUpdatedFrame = true;
      applyFriction(t18);
      checkCatchBoundary(t18);
    }
    if (timeReachedBoundary !== void 0 && t18 > timeReachedBoundary) {
      state.hasReachedTarget = true;
      return spring$1(t18 - timeReachedBoundary);
    } else {
      state.hasReachedTarget = false;
      !hasUpdatedFrame && applyFriction(t18);
      return state;
    }
  };
};

// node_modules/@motionone/generators/dist/utils/pregenerate-keyframes.es.js
var timeStep = 10;
var maxDuration2 = 1e4;
function pregenerateKeyframes(generator, toUnit = noopReturn) {
  let overshootDuration = void 0;
  let timestamp = timeStep;
  let state = generator(0);
  const keyframes3 = [toUnit(state.current)];
  while (!state.done && timestamp < maxDuration2) {
    state = generator(timestamp);
    keyframes3.push(toUnit(state.done ? state.target : state.current));
    if (overshootDuration === void 0 && state.hasReachedTarget) {
      overshootDuration = timestamp;
    }
    timestamp += timeStep;
  }
  const duration = timestamp - timeStep;
  if (keyframes3.length === 1)
    keyframes3.push(state.current);
  return {
    keyframes: keyframes3,
    duration: duration / 1e3,
    overshootDuration: (overshootDuration !== null && overshootDuration !== void 0 ? overshootDuration : duration) / 1e3
  };
}

// node_modules/@motionone/dom/dist/easing/create-generator-easing.es.js
function createGeneratorEasing(createGenerator) {
  const keyframesCache = /* @__PURE__ */ new WeakMap();
  return (options = {}) => {
    const generatorCache = /* @__PURE__ */ new Map();
    const getGenerator = (from = 0, to2 = 100, velocity = 0, isScale = false) => {
      const key = `${from}-${to2}-${velocity}-${isScale}`;
      if (!generatorCache.has(key)) {
        generatorCache.set(key, createGenerator(Object.assign({
          from,
          to: to2,
          velocity,
          restSpeed: isScale ? 0.05 : 2,
          restDistance: isScale ? 0.01 : 0.5
        }, options)));
      }
      return generatorCache.get(key);
    };
    const getKeyframes = (generator) => {
      if (!keyframesCache.has(generator)) {
        keyframesCache.set(generator, pregenerateKeyframes(generator));
      }
      return keyframesCache.get(generator);
    };
    return {
      createAnimation: (keyframes3, getOrigin2, canUseGenerator, name, motionValue2) => {
        var _a, _b;
        let settings;
        const numKeyframes = keyframes3.length;
        let shouldUseGenerator = canUseGenerator && numKeyframes <= 2 && keyframes3.every(isNumberOrNull);
        if (shouldUseGenerator) {
          const target = keyframes3[numKeyframes - 1];
          const unresolvedOrigin = numKeyframes === 1 ? null : keyframes3[0];
          let velocity = 0;
          let origin = 0;
          const prevGenerator = motionValue2 === null || motionValue2 === void 0 ? void 0 : motionValue2.generator;
          if (prevGenerator) {
            const { animation, generatorStartTime } = motionValue2;
            const startTime = (animation === null || animation === void 0 ? void 0 : animation.startTime) || generatorStartTime || 0;
            const currentTime = (animation === null || animation === void 0 ? void 0 : animation.currentTime) || performance.now() - startTime;
            const prevGeneratorCurrent = prevGenerator(currentTime).current;
            origin = (_a = unresolvedOrigin) !== null && _a !== void 0 ? _a : prevGeneratorCurrent;
            if (numKeyframes === 1 || numKeyframes === 2 && keyframes3[0] === null) {
              velocity = calcGeneratorVelocity((t18) => prevGenerator(t18).current, currentTime, prevGeneratorCurrent);
            }
          } else {
            origin = (_b = unresolvedOrigin) !== null && _b !== void 0 ? _b : parseFloat(getOrigin2());
          }
          const generator = getGenerator(origin, target, velocity, name === null || name === void 0 ? void 0 : name.includes("scale"));
          const keyframesMetadata = getKeyframes(generator);
          settings = Object.assign(Object.assign({}, keyframesMetadata), { easing: "linear" });
          if (motionValue2) {
            motionValue2.generator = generator;
            motionValue2.generatorStartTime = performance.now();
          }
        } else {
          const keyframesMetadata = getKeyframes(getGenerator(0, 100));
          settings = {
            easing: "ease",
            duration: keyframesMetadata.overshootDuration
          };
        }
        return settings;
      }
    };
  };
}
var isNumberOrNull = (value) => typeof value !== "string";

// node_modules/@motionone/dom/dist/easing/spring/index.es.js
var spring3 = createGeneratorEasing(spring2);

// node_modules/@motionone/dom/dist/easing/glide/index.es.js
var glide2 = createGeneratorEasing(glide);

// node_modules/@motionone/dom/dist/gestures/in-view.es.js
var thresholds = {
  any: 0,
  all: 1
};
function inView(elementOrSelector, onStart, { root, margin: rootMargin, amount = "any" } = {}) {
  if (typeof IntersectionObserver === "undefined") {
    return () => {
    };
  }
  const elements = resolveElements(elementOrSelector);
  const activeIntersections = /* @__PURE__ */ new WeakMap();
  const onIntersectionChange = (entries) => {
    entries.forEach((entry) => {
      const onEnd = activeIntersections.get(entry.target);
      if (entry.isIntersecting === Boolean(onEnd))
        return;
      if (entry.isIntersecting) {
        const newOnEnd = onStart(entry);
        if (typeof newOnEnd === "function") {
          activeIntersections.set(entry.target, newOnEnd);
        } else {
          observer.unobserve(entry.target);
        }
      } else if (onEnd) {
        onEnd(entry);
        activeIntersections.delete(entry.target);
      }
    });
  };
  const observer = new IntersectionObserver(onIntersectionChange, {
    root,
    rootMargin,
    threshold: typeof amount === "number" ? amount : thresholds[amount]
  });
  elements.forEach((element) => observer.observe(element));
  return () => observer.disconnect();
}

// node_modules/@motionone/dom/dist/state/utils/events.es.js
function dispatchPointerEvent(element, name, event) {
  element.dispatchEvent(new CustomEvent(name, { detail: { originalEvent: event } }));
}
function dispatchViewEvent(element, name, entry) {
  element.dispatchEvent(new CustomEvent(name, { detail: { originalEntry: entry } }));
}

// node_modules/@motionone/dom/dist/state/gestures/in-view.es.js
var inView2 = {
  isActive: (options) => Boolean(options.inView),
  subscribe: (element, { enable, disable }, { inViewOptions = {} }) => {
    const { once } = inViewOptions, viewOptions = __rest(inViewOptions, ["once"]);
    return inView(element, (enterEntry) => {
      enable();
      dispatchViewEvent(element, "viewenter", enterEntry);
      if (!once) {
        return (leaveEntry) => {
          disable();
          dispatchViewEvent(element, "viewleave", leaveEntry);
        };
      }
    }, viewOptions);
  }
};

// node_modules/@motionone/dom/dist/state/gestures/hover.es.js
var mouseEvent = (element, name, action) => (event) => {
  if (event.pointerType && event.pointerType !== "mouse")
    return;
  action();
  dispatchPointerEvent(element, name, event);
};
var hover = {
  isActive: (options) => Boolean(options.hover),
  subscribe: (element, { enable, disable }) => {
    const onEnter = mouseEvent(element, "hoverstart", enable);
    const onLeave = mouseEvent(element, "hoverend", disable);
    element.addEventListener("pointerenter", onEnter);
    element.addEventListener("pointerleave", onLeave);
    return () => {
      element.removeEventListener("pointerenter", onEnter);
      element.removeEventListener("pointerleave", onLeave);
    };
  }
};

// node_modules/@motionone/dom/dist/state/gestures/press.es.js
var press = {
  isActive: (options) => Boolean(options.press),
  subscribe: (element, { enable, disable }) => {
    const onPointerUp = (event) => {
      disable();
      dispatchPointerEvent(element, "pressend", event);
      window.removeEventListener("pointerup", onPointerUp);
    };
    const onPointerDown = (event) => {
      enable();
      dispatchPointerEvent(element, "pressstart", event);
      window.addEventListener("pointerup", onPointerUp);
    };
    element.addEventListener("pointerdown", onPointerDown);
    return () => {
      element.removeEventListener("pointerdown", onPointerDown);
      window.removeEventListener("pointerup", onPointerUp);
    };
  }
};

// node_modules/@motionone/dom/dist/state/index.es.js
var gestures = { inView: inView2, hover, press };
var stateTypes = ["initial", "animate", ...Object.keys(gestures), "exit"];

// node_modules/framer-motion/dist/es/utils/use-animation-frame.mjs
var import_react46 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/animation/use-animation.mjs
var import_react47 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/utils/use-cycle.mjs
var import_react48 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/utils/use-in-view.mjs
var import_react49 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/gestures/drag/use-drag-controls.mjs
var DragControls = (
  /** @class */
  function() {
    function DragControls2() {
      this.componentControls = /* @__PURE__ */ new Set();
    }
    DragControls2.prototype.subscribe = function(controls) {
      var _this = this;
      this.componentControls.add(controls);
      return function() {
        return _this.componentControls.delete(controls);
      };
    };
    DragControls2.prototype.start = function(event, options) {
      this.componentControls.forEach(function(controls) {
        controls.start(event.nativeEvent || event, options);
      });
    };
    return DragControls2;
  }()
);

// node_modules/framer-motion/dist/es/utils/use-instant-transition.mjs
var import_react50 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/projection/use-reset-projection.mjs
var React11 = __toESM(require_react(), 1);

// node_modules/framer-motion/dist/es/animation/use-animated-state.mjs
var import_react51 = __toESM(require_react(), 1);
var createObject = function() {
  return {};
};
var stateVisualElement = visualElement({
  build: function() {
  },
  measureViewportBox: createBox,
  resetTransform: function() {
  },
  restoreTransform: function() {
  },
  removeValueFromRenderState: function() {
  },
  render: function() {
  },
  scrapeMotionValuesFromProps: createObject,
  readValueFromInstance: function(_state, key, options) {
    return options.initialState[key] || 0;
  },
  makeTargetAnimatable: function(element, _a) {
    var transition = _a.transition, transitionEnd = _a.transitionEnd, target = __rest(_a, ["transition", "transitionEnd"]);
    var origin = getOrigin(target, transition || {}, element);
    checkTargetForNewValues(element, target, origin);
    return __assign({ transition, transitionEnd }, target);
  }
});
var useVisualState = makeUseVisualState({
  scrapeMotionValuesFromProps: createObject,
  createRenderState: createObject
});

// node_modules/@radix-ui/react-tooltip/dist/index.mjs
var import_react52 = __toESM(require_react(), 1);
var [$a093c7e1ec25a057$var$createTooltipContext, $a093c7e1ec25a057$export$1c540a2224f0d865] = $c512c27ab02ef895$export$50c7b4e9d9f19c1("Tooltip", [
  $cf1ac5d9fe0e8206$export$722aac194ae923
]);
var $a093c7e1ec25a057$var$usePopperScope = $cf1ac5d9fe0e8206$export$722aac194ae923();
var $a093c7e1ec25a057$var$PROVIDER_NAME = "TooltipProvider";
var $a093c7e1ec25a057$var$DEFAULT_DELAY_DURATION = 700;
var $a093c7e1ec25a057$var$TOOLTIP_OPEN = "tooltip.open";
var [$a093c7e1ec25a057$var$TooltipProviderContextProvider, $a093c7e1ec25a057$var$useTooltipProviderContext] = $a093c7e1ec25a057$var$createTooltipContext($a093c7e1ec25a057$var$PROVIDER_NAME);
var $a093c7e1ec25a057$export$f78649fb9ca566b8 = (props) => {
  const { __scopeTooltip, delayDuration = $a093c7e1ec25a057$var$DEFAULT_DELAY_DURATION, skipDelayDuration = 300, disableHoverableContent = false, children } = props;
  const [isOpenDelayed, setIsOpenDelayed] = (0, import_react52.useState)(true);
  const isPointerInTransitRef = (0, import_react52.useRef)(false);
  const skipDelayTimerRef = (0, import_react52.useRef)(0);
  (0, import_react52.useEffect)(() => {
    const skipDelayTimer = skipDelayTimerRef.current;
    return () => window.clearTimeout(skipDelayTimer);
  }, []);
  return (0, import_react52.createElement)($a093c7e1ec25a057$var$TooltipProviderContextProvider, {
    scope: __scopeTooltip,
    isOpenDelayed,
    delayDuration,
    onOpen: (0, import_react52.useCallback)(() => {
      window.clearTimeout(skipDelayTimerRef.current);
      setIsOpenDelayed(false);
    }, []),
    onClose: (0, import_react52.useCallback)(() => {
      window.clearTimeout(skipDelayTimerRef.current);
      skipDelayTimerRef.current = window.setTimeout(
        () => setIsOpenDelayed(true),
        skipDelayDuration
      );
    }, [
      skipDelayDuration
    ]),
    isPointerInTransitRef,
    onPointerInTransitChange: (0, import_react52.useCallback)((inTransit) => {
      isPointerInTransitRef.current = inTransit;
    }, []),
    disableHoverableContent
  }, children);
};
Object.assign($a093c7e1ec25a057$export$f78649fb9ca566b8, {
  displayName: $a093c7e1ec25a057$var$PROVIDER_NAME
});
var $a093c7e1ec25a057$var$TOOLTIP_NAME = "Tooltip";
var [$a093c7e1ec25a057$var$TooltipContextProvider, $a093c7e1ec25a057$var$useTooltipContext] = $a093c7e1ec25a057$var$createTooltipContext($a093c7e1ec25a057$var$TOOLTIP_NAME);
var $a093c7e1ec25a057$export$28c660c63b792dea = (props) => {
  const { __scopeTooltip, children, open: openProp, defaultOpen = false, onOpenChange, disableHoverableContent: disableHoverableContentProp, delayDuration: delayDurationProp } = props;
  const providerContext = $a093c7e1ec25a057$var$useTooltipProviderContext($a093c7e1ec25a057$var$TOOLTIP_NAME, props.__scopeTooltip);
  const popperScope = $a093c7e1ec25a057$var$usePopperScope(__scopeTooltip);
  const [trigger, setTrigger] = (0, import_react52.useState)(null);
  const contentId = $1746a345f3d73bb7$export$f680877a34711e37();
  const openTimerRef = (0, import_react52.useRef)(0);
  const disableHoverableContent = disableHoverableContentProp !== null && disableHoverableContentProp !== void 0 ? disableHoverableContentProp : providerContext.disableHoverableContent;
  const delayDuration = delayDurationProp !== null && delayDurationProp !== void 0 ? delayDurationProp : providerContext.delayDuration;
  const wasOpenDelayedRef = (0, import_react52.useRef)(false);
  const [open1 = false, setOpen] = $71cd76cc60e0454e$export$6f32135080cb4c3({
    prop: openProp,
    defaultProp: defaultOpen,
    onChange: (open) => {
      if (open) {
        providerContext.onOpen();
        document.dispatchEvent(new CustomEvent($a093c7e1ec25a057$var$TOOLTIP_OPEN));
      } else
        providerContext.onClose();
      onOpenChange === null || onOpenChange === void 0 || onOpenChange(open);
    }
  });
  const stateAttribute = (0, import_react52.useMemo)(() => {
    return open1 ? wasOpenDelayedRef.current ? "delayed-open" : "instant-open" : "closed";
  }, [
    open1
  ]);
  const handleOpen = (0, import_react52.useCallback)(() => {
    window.clearTimeout(openTimerRef.current);
    wasOpenDelayedRef.current = false;
    setOpen(true);
  }, [
    setOpen
  ]);
  const handleClose = (0, import_react52.useCallback)(() => {
    window.clearTimeout(openTimerRef.current);
    setOpen(false);
  }, [
    setOpen
  ]);
  const handleDelayedOpen = (0, import_react52.useCallback)(() => {
    window.clearTimeout(openTimerRef.current);
    openTimerRef.current = window.setTimeout(() => {
      wasOpenDelayedRef.current = true;
      setOpen(true);
    }, delayDuration);
  }, [
    delayDuration,
    setOpen
  ]);
  (0, import_react52.useEffect)(() => {
    return () => window.clearTimeout(openTimerRef.current);
  }, []);
  return (0, import_react52.createElement)($cf1ac5d9fe0e8206$export$be92b6f5f03c0fe9, popperScope, (0, import_react52.createElement)($a093c7e1ec25a057$var$TooltipContextProvider, {
    scope: __scopeTooltip,
    contentId,
    open: open1,
    stateAttribute,
    trigger,
    onTriggerChange: setTrigger,
    onTriggerEnter: (0, import_react52.useCallback)(() => {
      if (providerContext.isOpenDelayed)
        handleDelayedOpen();
      else
        handleOpen();
    }, [
      providerContext.isOpenDelayed,
      handleDelayedOpen,
      handleOpen
    ]),
    onTriggerLeave: (0, import_react52.useCallback)(() => {
      if (disableHoverableContent)
        handleClose();
      else
        window.clearTimeout(openTimerRef.current);
    }, [
      handleClose,
      disableHoverableContent
    ]),
    onOpen: handleOpen,
    onClose: handleClose,
    disableHoverableContent
  }, children));
};
Object.assign($a093c7e1ec25a057$export$28c660c63b792dea, {
  displayName: $a093c7e1ec25a057$var$TOOLTIP_NAME
});
var $a093c7e1ec25a057$var$TRIGGER_NAME = "TooltipTrigger";
var $a093c7e1ec25a057$export$8c610744efcf8a1d = (0, import_react52.forwardRef)((props, forwardedRef) => {
  const { __scopeTooltip, ...triggerProps } = props;
  const context = $a093c7e1ec25a057$var$useTooltipContext($a093c7e1ec25a057$var$TRIGGER_NAME, __scopeTooltip);
  const providerContext = $a093c7e1ec25a057$var$useTooltipProviderContext($a093c7e1ec25a057$var$TRIGGER_NAME, __scopeTooltip);
  const popperScope = $a093c7e1ec25a057$var$usePopperScope(__scopeTooltip);
  const ref = (0, import_react52.useRef)(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref, context.onTriggerChange);
  const isPointerDownRef = (0, import_react52.useRef)(false);
  const hasPointerMoveOpenedRef = (0, import_react52.useRef)(false);
  const handlePointerUp = (0, import_react52.useCallback)(
    () => isPointerDownRef.current = false,
    []
  );
  (0, import_react52.useEffect)(() => {
    return () => document.removeEventListener("pointerup", handlePointerUp);
  }, [
    handlePointerUp
  ]);
  return (0, import_react52.createElement)($cf1ac5d9fe0e8206$export$b688253958b8dfe7, _extends({
    asChild: true
  }, popperScope), (0, import_react52.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.button, _extends({
    // We purposefully avoid adding `type=button` here because tooltip triggers are also
    // commonly anchors and the anchor `type` attribute signifies MIME type.
    "aria-describedby": context.open ? context.contentId : void 0,
    "data-state": context.stateAttribute
  }, triggerProps, {
    ref: composedRefs,
    onPointerMove: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerMove, (event) => {
      if (event.pointerType === "touch")
        return;
      if (!hasPointerMoveOpenedRef.current && !providerContext.isPointerInTransitRef.current) {
        context.onTriggerEnter();
        hasPointerMoveOpenedRef.current = true;
      }
    }),
    onPointerLeave: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerLeave, () => {
      context.onTriggerLeave();
      hasPointerMoveOpenedRef.current = false;
    }),
    onPointerDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerDown, () => {
      isPointerDownRef.current = true;
      document.addEventListener("pointerup", handlePointerUp, {
        once: true
      });
    }),
    onFocus: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onFocus, () => {
      if (!isPointerDownRef.current)
        context.onOpen();
    }),
    onBlur: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onBlur, context.onClose),
    onClick: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onClick, context.onClose)
  })));
});
Object.assign($a093c7e1ec25a057$export$8c610744efcf8a1d, {
  displayName: $a093c7e1ec25a057$var$TRIGGER_NAME
});
var $a093c7e1ec25a057$var$PORTAL_NAME = "TooltipPortal";
var [$a093c7e1ec25a057$var$PortalProvider, $a093c7e1ec25a057$var$usePortalContext] = $a093c7e1ec25a057$var$createTooltipContext($a093c7e1ec25a057$var$PORTAL_NAME, {
  forceMount: void 0
});
var $a093c7e1ec25a057$export$7b36b8f925ab7497 = (props) => {
  const { __scopeTooltip, forceMount, children, container } = props;
  const context = $a093c7e1ec25a057$var$useTooltipContext($a093c7e1ec25a057$var$PORTAL_NAME, __scopeTooltip);
  return (0, import_react52.createElement)($a093c7e1ec25a057$var$PortalProvider, {
    scope: __scopeTooltip,
    forceMount
  }, (0, import_react52.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || context.open
  }, (0, import_react52.createElement)($f1701beae083dbae$export$602eac185826482c, {
    asChild: true,
    container
  }, children)));
};
Object.assign($a093c7e1ec25a057$export$7b36b8f925ab7497, {
  displayName: $a093c7e1ec25a057$var$PORTAL_NAME
});
var $a093c7e1ec25a057$var$CONTENT_NAME = "TooltipContent";
var $a093c7e1ec25a057$export$e9003e2be37ec060 = (0, import_react52.forwardRef)((props, forwardedRef) => {
  const portalContext = $a093c7e1ec25a057$var$usePortalContext($a093c7e1ec25a057$var$CONTENT_NAME, props.__scopeTooltip);
  const { forceMount = portalContext.forceMount, side = "top", ...contentProps } = props;
  const context = $a093c7e1ec25a057$var$useTooltipContext($a093c7e1ec25a057$var$CONTENT_NAME, props.__scopeTooltip);
  return (0, import_react52.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || context.open
  }, context.disableHoverableContent ? (0, import_react52.createElement)($a093c7e1ec25a057$var$TooltipContentImpl, _extends({
    side
  }, contentProps, {
    ref: forwardedRef
  })) : (0, import_react52.createElement)($a093c7e1ec25a057$var$TooltipContentHoverable, _extends({
    side
  }, contentProps, {
    ref: forwardedRef
  })));
});
var $a093c7e1ec25a057$var$TooltipContentHoverable = (0, import_react52.forwardRef)((props, forwardedRef) => {
  const context = $a093c7e1ec25a057$var$useTooltipContext($a093c7e1ec25a057$var$CONTENT_NAME, props.__scopeTooltip);
  const providerContext = $a093c7e1ec25a057$var$useTooltipProviderContext($a093c7e1ec25a057$var$CONTENT_NAME, props.__scopeTooltip);
  const ref = (0, import_react52.useRef)(null);
  const composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref);
  const [pointerGraceArea, setPointerGraceArea] = (0, import_react52.useState)(null);
  const { trigger, onClose } = context;
  const content = ref.current;
  const { onPointerInTransitChange } = providerContext;
  const handleRemoveGraceArea = (0, import_react52.useCallback)(() => {
    setPointerGraceArea(null);
    onPointerInTransitChange(false);
  }, [
    onPointerInTransitChange
  ]);
  const handleCreateGraceArea = (0, import_react52.useCallback)((event, hoverTarget) => {
    const currentTarget = event.currentTarget;
    const exitPoint = {
      x: event.clientX,
      y: event.clientY
    };
    const exitSide = $a093c7e1ec25a057$var$getExitSideFromRect(exitPoint, currentTarget.getBoundingClientRect());
    const paddedExitPoints = $a093c7e1ec25a057$var$getPaddedExitPoints(exitPoint, exitSide);
    const hoverTargetPoints = $a093c7e1ec25a057$var$getPointsFromRect(hoverTarget.getBoundingClientRect());
    const graceArea = $a093c7e1ec25a057$var$getHull([
      ...paddedExitPoints,
      ...hoverTargetPoints
    ]);
    setPointerGraceArea(graceArea);
    onPointerInTransitChange(true);
  }, [
    onPointerInTransitChange
  ]);
  (0, import_react52.useEffect)(() => {
    return () => handleRemoveGraceArea();
  }, [
    handleRemoveGraceArea
  ]);
  (0, import_react52.useEffect)(() => {
    if (trigger && content) {
      const handleTriggerLeave = (event) => handleCreateGraceArea(event, content);
      const handleContentLeave = (event) => handleCreateGraceArea(event, trigger);
      trigger.addEventListener("pointerleave", handleTriggerLeave);
      content.addEventListener("pointerleave", handleContentLeave);
      return () => {
        trigger.removeEventListener("pointerleave", handleTriggerLeave);
        content.removeEventListener("pointerleave", handleContentLeave);
      };
    }
  }, [
    trigger,
    content,
    handleCreateGraceArea,
    handleRemoveGraceArea
  ]);
  (0, import_react52.useEffect)(() => {
    if (pointerGraceArea) {
      const handleTrackPointerGrace = (event) => {
        const target = event.target;
        const pointerPosition = {
          x: event.clientX,
          y: event.clientY
        };
        const hasEnteredTarget = (trigger === null || trigger === void 0 ? void 0 : trigger.contains(target)) || (content === null || content === void 0 ? void 0 : content.contains(target));
        const isPointerOutsideGraceArea = !$a093c7e1ec25a057$var$isPointInPolygon(pointerPosition, pointerGraceArea);
        if (hasEnteredTarget)
          handleRemoveGraceArea();
        else if (isPointerOutsideGraceArea) {
          handleRemoveGraceArea();
          onClose();
        }
      };
      document.addEventListener("pointermove", handleTrackPointerGrace);
      return () => document.removeEventListener("pointermove", handleTrackPointerGrace);
    }
  }, [
    trigger,
    content,
    pointerGraceArea,
    onClose,
    handleRemoveGraceArea
  ]);
  return (0, import_react52.createElement)($a093c7e1ec25a057$var$TooltipContentImpl, _extends({}, props, {
    ref: composedRefs
  }));
});
var [$a093c7e1ec25a057$var$VisuallyHiddenContentContextProvider, $a093c7e1ec25a057$var$useVisuallyHiddenContentContext] = $a093c7e1ec25a057$var$createTooltipContext($a093c7e1ec25a057$var$TOOLTIP_NAME, {
  isInside: false
});
var $a093c7e1ec25a057$var$TooltipContentImpl = (0, import_react52.forwardRef)((props, forwardedRef) => {
  const { __scopeTooltip, children, "aria-label": ariaLabel, onEscapeKeyDown, onPointerDownOutside, ...contentProps } = props;
  const context = $a093c7e1ec25a057$var$useTooltipContext($a093c7e1ec25a057$var$CONTENT_NAME, __scopeTooltip);
  const popperScope = $a093c7e1ec25a057$var$usePopperScope(__scopeTooltip);
  const { onClose } = context;
  (0, import_react52.useEffect)(() => {
    document.addEventListener($a093c7e1ec25a057$var$TOOLTIP_OPEN, onClose);
    return () => document.removeEventListener($a093c7e1ec25a057$var$TOOLTIP_OPEN, onClose);
  }, [
    onClose
  ]);
  (0, import_react52.useEffect)(() => {
    if (context.trigger) {
      const handleScroll = (event) => {
        const target = event.target;
        if (target !== null && target !== void 0 && target.contains(context.trigger))
          onClose();
      };
      window.addEventListener("scroll", handleScroll, {
        capture: true
      });
      return () => window.removeEventListener("scroll", handleScroll, {
        capture: true
      });
    }
  }, [
    context.trigger,
    onClose
  ]);
  return (0, import_react52.createElement)($5cb92bef7577960e$export$177fb62ff3ec1f22, {
    asChild: true,
    disableOutsidePointerEvents: false,
    onEscapeKeyDown,
    onPointerDownOutside,
    onFocusOutside: (event) => event.preventDefault(),
    onDismiss: onClose
  }, (0, import_react52.createElement)($cf1ac5d9fe0e8206$export$7c6e2c02157bb7d2, _extends({
    "data-state": context.stateAttribute
  }, popperScope, contentProps, {
    ref: forwardedRef,
    style: {
      ...contentProps.style,
      "--radix-tooltip-content-transform-origin": "var(--radix-popper-transform-origin)",
      "--radix-tooltip-content-available-width": "var(--radix-popper-available-width)",
      "--radix-tooltip-content-available-height": "var(--radix-popper-available-height)",
      "--radix-tooltip-trigger-width": "var(--radix-popper-anchor-width)",
      "--radix-tooltip-trigger-height": "var(--radix-popper-anchor-height)"
    }
  }), (0, import_react52.createElement)($5e63c961fc1ce211$export$d9f1ccf0bdb05d45, null, children), (0, import_react52.createElement)($a093c7e1ec25a057$var$VisuallyHiddenContentContextProvider, {
    scope: __scopeTooltip,
    isInside: true
  }, (0, import_react52.createElement)($ea1ef594cf570d83$export$be92b6f5f03c0fe9, {
    id: context.contentId,
    role: "tooltip"
  }, ariaLabel || children))));
});
Object.assign($a093c7e1ec25a057$export$e9003e2be37ec060, {
  displayName: $a093c7e1ec25a057$var$CONTENT_NAME
});
var $a093c7e1ec25a057$var$ARROW_NAME = "TooltipArrow";
var $a093c7e1ec25a057$export$c27ee0ad710f7559 = (0, import_react52.forwardRef)((props, forwardedRef) => {
  const { __scopeTooltip, ...arrowProps } = props;
  const popperScope = $a093c7e1ec25a057$var$usePopperScope(__scopeTooltip);
  const visuallyHiddenContentContext = $a093c7e1ec25a057$var$useVisuallyHiddenContentContext($a093c7e1ec25a057$var$ARROW_NAME, __scopeTooltip);
  return visuallyHiddenContentContext.isInside ? null : (0, import_react52.createElement)($cf1ac5d9fe0e8206$export$21b07c8f274aebd5, _extends({}, popperScope, arrowProps, {
    ref: forwardedRef
  }));
});
Object.assign($a093c7e1ec25a057$export$c27ee0ad710f7559, {
  displayName: $a093c7e1ec25a057$var$ARROW_NAME
});
function $a093c7e1ec25a057$var$getExitSideFromRect(point, rect) {
  const top = Math.abs(rect.top - point.y);
  const bottom = Math.abs(rect.bottom - point.y);
  const right = Math.abs(rect.right - point.x);
  const left = Math.abs(rect.left - point.x);
  switch (Math.min(top, bottom, right, left)) {
    case left:
      return "left";
    case right:
      return "right";
    case top:
      return "top";
    case bottom:
      return "bottom";
    default:
      throw new Error("unreachable");
  }
}
function $a093c7e1ec25a057$var$getPaddedExitPoints(exitPoint, exitSide, padding = 5) {
  const paddedExitPoints = [];
  switch (exitSide) {
    case "top":
      paddedExitPoints.push({
        x: exitPoint.x - padding,
        y: exitPoint.y + padding
      }, {
        x: exitPoint.x + padding,
        y: exitPoint.y + padding
      });
      break;
    case "bottom":
      paddedExitPoints.push({
        x: exitPoint.x - padding,
        y: exitPoint.y - padding
      }, {
        x: exitPoint.x + padding,
        y: exitPoint.y - padding
      });
      break;
    case "left":
      paddedExitPoints.push({
        x: exitPoint.x + padding,
        y: exitPoint.y - padding
      }, {
        x: exitPoint.x + padding,
        y: exitPoint.y + padding
      });
      break;
    case "right":
      paddedExitPoints.push({
        x: exitPoint.x - padding,
        y: exitPoint.y - padding
      }, {
        x: exitPoint.x - padding,
        y: exitPoint.y + padding
      });
      break;
  }
  return paddedExitPoints;
}
function $a093c7e1ec25a057$var$getPointsFromRect(rect) {
  const { top, right, bottom, left } = rect;
  return [
    {
      x: left,
      y: top
    },
    {
      x: right,
      y: top
    },
    {
      x: right,
      y: bottom
    },
    {
      x: left,
      y: bottom
    }
  ];
}
function $a093c7e1ec25a057$var$isPointInPolygon(point, polygon) {
  const { x: x4, y: y7 } = point;
  let inside = false;
  for (let i9 = 0, j6 = polygon.length - 1; i9 < polygon.length; j6 = i9++) {
    const xi = polygon[i9].x;
    const yi = polygon[i9].y;
    const xj = polygon[j6].x;
    const yj = polygon[j6].y;
    const intersect = yi > y7 !== yj > y7 && x4 < (xj - xi) * (y7 - yi) / (yj - yi) + xi;
    if (intersect)
      inside = !inside;
  }
  return inside;
}
function $a093c7e1ec25a057$var$getHull(points) {
  const newPoints = points.slice();
  newPoints.sort((a12, b9) => {
    if (a12.x < b9.x)
      return -1;
    else if (a12.x > b9.x)
      return 1;
    else if (a12.y < b9.y)
      return -1;
    else if (a12.y > b9.y)
      return 1;
    else
      return 0;
  });
  return $a093c7e1ec25a057$var$getHullPresorted(newPoints);
}
function $a093c7e1ec25a057$var$getHullPresorted(points) {
  if (points.length <= 1)
    return points.slice();
  const upperHull = [];
  for (let i9 = 0; i9 < points.length; i9++) {
    const p7 = points[i9];
    while (upperHull.length >= 2) {
      const q7 = upperHull[upperHull.length - 1];
      const r9 = upperHull[upperHull.length - 2];
      if ((q7.x - r9.x) * (p7.y - r9.y) >= (q7.y - r9.y) * (p7.x - r9.x))
        upperHull.pop();
      else
        break;
    }
    upperHull.push(p7);
  }
  upperHull.pop();
  const lowerHull = [];
  for (let i1 = points.length - 1; i1 >= 0; i1--) {
    const p7 = points[i1];
    while (lowerHull.length >= 2) {
      const q7 = lowerHull[lowerHull.length - 1];
      const r9 = lowerHull[lowerHull.length - 2];
      if ((q7.x - r9.x) * (p7.y - r9.y) >= (q7.y - r9.y) * (p7.x - r9.x))
        lowerHull.pop();
      else
        break;
    }
    lowerHull.push(p7);
  }
  lowerHull.pop();
  if (upperHull.length === 1 && lowerHull.length === 1 && upperHull[0].x === lowerHull[0].x && upperHull[0].y === lowerHull[0].y)
    return upperHull;
  else
    return upperHull.concat(lowerHull);
}
var $a093c7e1ec25a057$export$2881499e37b75b9a = $a093c7e1ec25a057$export$f78649fb9ca566b8;
var $a093c7e1ec25a057$export$be92b6f5f03c0fe9 = $a093c7e1ec25a057$export$28c660c63b792dea;
var $a093c7e1ec25a057$export$41fb9f06171c75f4 = $a093c7e1ec25a057$export$8c610744efcf8a1d;
var $a093c7e1ec25a057$export$602eac185826482c = $a093c7e1ec25a057$export$7b36b8f925ab7497;
var $a093c7e1ec25a057$export$7c6e2c02157bb7d2 = $a093c7e1ec25a057$export$e9003e2be37ec060;

// node_modules/@tanstack/react-virtual/dist/esm/index.js
var React12 = __toESM(require_react());
var import_react_dom = __toESM(require_react_dom());

// node_modules/@tanstack/virtual-core/dist/esm/utils.js
function memo(getDeps, fn, opts) {
  let deps = opts.initialDeps ?? [];
  let result;
  return () => {
    var _a, _b, _c, _d;
    let depTime;
    if (opts.key && ((_a = opts.debug) == null ? void 0 : _a.call(opts)))
      depTime = Date.now();
    const newDeps = getDeps();
    const depsChanged = newDeps.length !== deps.length || newDeps.some((dep, index2) => deps[index2] !== dep);
    if (!depsChanged) {
      return result;
    }
    deps = newDeps;
    let resultTime;
    if (opts.key && ((_b = opts.debug) == null ? void 0 : _b.call(opts)))
      resultTime = Date.now();
    result = fn(...newDeps);
    if (opts.key && ((_c = opts.debug) == null ? void 0 : _c.call(opts))) {
      const depEndTime = Math.round((Date.now() - depTime) * 100) / 100;
      const resultEndTime = Math.round((Date.now() - resultTime) * 100) / 100;
      const resultFpsPercentage = resultEndTime / 16;
      const pad = (str, num) => {
        str = String(str);
        while (str.length < num) {
          str = " " + str;
        }
        return str;
      };
      console.info(
        `%c⏱ ${pad(resultEndTime, 5)} /${pad(depEndTime, 5)} ms`,
        `
            font-size: .6rem;
            font-weight: bold;
            color: hsl(${Math.max(
          0,
          Math.min(120 - 120 * resultFpsPercentage, 120)
        )}deg 100% 31%);`,
        opts == null ? void 0 : opts.key
      );
    }
    (_d = opts == null ? void 0 : opts.onChange) == null ? void 0 : _d.call(opts, result);
    return result;
  };
}
function notUndefined(value, msg) {
  if (value === void 0) {
    throw new Error(`Unexpected undefined${msg ? `: ${msg}` : ""}`);
  } else {
    return value;
  }
}
var approxEqual = (a12, b9) => Math.abs(a12 - b9) < 1;

// node_modules/@tanstack/virtual-core/dist/esm/index.js
var defaultKeyExtractor = (index2) => index2;
var defaultRangeExtractor = (range) => {
  const start = Math.max(range.startIndex - range.overscan, 0);
  const end = Math.min(range.endIndex + range.overscan, range.count - 1);
  const arr = [];
  for (let i9 = start; i9 <= end; i9++) {
    arr.push(i9);
  }
  return arr;
};
var observeElementRect = (instance, cb2) => {
  const element = instance.scrollElement;
  if (!element) {
    return;
  }
  const handler = (rect) => {
    const { width, height } = rect;
    cb2({ width: Math.round(width), height: Math.round(height) });
  };
  handler(element.getBoundingClientRect());
  if (typeof ResizeObserver === "undefined") {
    return () => {
    };
  }
  const observer = new ResizeObserver((entries) => {
    const entry = entries[0];
    if (entry == null ? void 0 : entry.borderBoxSize) {
      const box = entry.borderBoxSize[0];
      if (box) {
        handler({ width: box.inlineSize, height: box.blockSize });
        return;
      }
    }
    handler(element.getBoundingClientRect());
  });
  observer.observe(element, { box: "border-box" });
  return () => {
    observer.unobserve(element);
  };
};
var observeElementOffset = (instance, cb2) => {
  const element = instance.scrollElement;
  if (!element) {
    return;
  }
  const handler = () => {
    cb2(element[instance.options.horizontal ? "scrollLeft" : "scrollTop"]);
  };
  handler();
  element.addEventListener("scroll", handler, {
    passive: true
  });
  return () => {
    element.removeEventListener("scroll", handler);
  };
};
var measureElement = (element, entry, instance) => {
  if (entry == null ? void 0 : entry.borderBoxSize) {
    const box = entry.borderBoxSize[0];
    if (box) {
      const size = Math.round(
        box[instance.options.horizontal ? "inlineSize" : "blockSize"]
      );
      return size;
    }
  }
  return Math.round(
    element.getBoundingClientRect()[instance.options.horizontal ? "width" : "height"]
  );
};
var elementScroll = (offset, {
  adjustments = 0,
  behavior
}, instance) => {
  var _a, _b;
  const toOffset = offset + adjustments;
  (_b = (_a = instance.scrollElement) == null ? void 0 : _a.scrollTo) == null ? void 0 : _b.call(_a, {
    [instance.options.horizontal ? "left" : "top"]: toOffset,
    behavior
  });
};
var Virtualizer = class {
  constructor(opts) {
    this.unsubs = [];
    this.scrollElement = null;
    this.isScrolling = false;
    this.isScrollingTimeoutId = null;
    this.scrollToIndexTimeoutId = null;
    this.measurementsCache = [];
    this.itemSizeCache = /* @__PURE__ */ new Map();
    this.pendingMeasuredCacheIndexes = [];
    this.scrollDirection = null;
    this.scrollAdjustments = 0;
    this.measureElementCache = /* @__PURE__ */ new Map();
    this.observer = (() => {
      let _ro = null;
      const get = () => {
        if (_ro) {
          return _ro;
        } else if (typeof ResizeObserver !== "undefined") {
          return _ro = new ResizeObserver((entries) => {
            entries.forEach((entry) => {
              this._measureElement(entry.target, entry);
            });
          });
        } else {
          return null;
        }
      };
      return {
        disconnect: () => {
          var _a;
          return (_a = get()) == null ? void 0 : _a.disconnect();
        },
        observe: (target) => {
          var _a;
          return (_a = get()) == null ? void 0 : _a.observe(target, { box: "border-box" });
        },
        unobserve: (target) => {
          var _a;
          return (_a = get()) == null ? void 0 : _a.unobserve(target);
        }
      };
    })();
    this.range = null;
    this.setOptions = (opts2) => {
      Object.entries(opts2).forEach(([key, value]) => {
        if (typeof value === "undefined")
          delete opts2[key];
      });
      this.options = {
        debug: false,
        initialOffset: 0,
        overscan: 1,
        paddingStart: 0,
        paddingEnd: 0,
        scrollPaddingStart: 0,
        scrollPaddingEnd: 0,
        horizontal: false,
        getItemKey: defaultKeyExtractor,
        rangeExtractor: defaultRangeExtractor,
        onChange: () => {
        },
        measureElement,
        initialRect: { width: 0, height: 0 },
        scrollMargin: 0,
        scrollingDelay: 150,
        indexAttribute: "data-index",
        initialMeasurementsCache: [],
        lanes: 1,
        ...opts2
      };
    };
    this.notify = (sync2) => {
      var _a, _b;
      (_b = (_a = this.options).onChange) == null ? void 0 : _b.call(_a, this, sync2);
    };
    this.maybeNotify = memo(
      () => {
        this.calculateRange();
        return [
          this.isScrolling,
          this.range ? this.range.startIndex : null,
          this.range ? this.range.endIndex : null
        ];
      },
      (isScrolling) => {
        this.notify(isScrolling);
      },
      {
        key: "maybeNotify",
        debug: () => this.options.debug,
        initialDeps: [
          this.isScrolling,
          this.range ? this.range.startIndex : null,
          this.range ? this.range.endIndex : null
        ]
      }
    );
    this.cleanup = () => {
      this.unsubs.filter(Boolean).forEach((d16) => d16());
      this.unsubs = [];
      this.scrollElement = null;
    };
    this._didMount = () => {
      this.measureElementCache.forEach(this.observer.observe);
      return () => {
        this.observer.disconnect();
        this.cleanup();
      };
    };
    this._willUpdate = () => {
      const scrollElement = this.options.getScrollElement();
      if (this.scrollElement !== scrollElement) {
        this.cleanup();
        this.scrollElement = scrollElement;
        this._scrollToOffset(this.scrollOffset, {
          adjustments: void 0,
          behavior: void 0
        });
        this.unsubs.push(
          this.options.observeElementRect(this, (rect) => {
            this.scrollRect = rect;
            this.maybeNotify();
          })
        );
        this.unsubs.push(
          this.options.observeElementOffset(this, (offset) => {
            this.scrollAdjustments = 0;
            if (this.scrollOffset === offset) {
              return;
            }
            if (this.isScrollingTimeoutId !== null) {
              clearTimeout(this.isScrollingTimeoutId);
              this.isScrollingTimeoutId = null;
            }
            this.isScrolling = true;
            this.scrollDirection = this.scrollOffset < offset ? "forward" : "backward";
            this.scrollOffset = offset;
            this.maybeNotify();
            this.isScrollingTimeoutId = setTimeout(() => {
              this.isScrollingTimeoutId = null;
              this.isScrolling = false;
              this.scrollDirection = null;
              this.maybeNotify();
            }, this.options.scrollingDelay);
          })
        );
      }
    };
    this.getSize = () => {
      return this.scrollRect[this.options.horizontal ? "width" : "height"];
    };
    this.memoOptions = memo(
      () => [
        this.options.count,
        this.options.paddingStart,
        this.options.scrollMargin,
        this.options.getItemKey
      ],
      (count, paddingStart, scrollMargin, getItemKey) => {
        this.pendingMeasuredCacheIndexes = [];
        return {
          count,
          paddingStart,
          scrollMargin,
          getItemKey
        };
      },
      {
        key: false
      }
    );
    this.getFurthestMeasurement = (measurements, index2) => {
      const furthestMeasurementsFound = /* @__PURE__ */ new Map();
      const furthestMeasurements = /* @__PURE__ */ new Map();
      for (let m13 = index2 - 1; m13 >= 0; m13--) {
        const measurement = measurements[m13];
        if (furthestMeasurementsFound.has(measurement.lane)) {
          continue;
        }
        const previousFurthestMeasurement = furthestMeasurements.get(
          measurement.lane
        );
        if (previousFurthestMeasurement == null || measurement.end > previousFurthestMeasurement.end) {
          furthestMeasurements.set(measurement.lane, measurement);
        } else if (measurement.end < previousFurthestMeasurement.end) {
          furthestMeasurementsFound.set(measurement.lane, true);
        }
        if (furthestMeasurementsFound.size === this.options.lanes) {
          break;
        }
      }
      return furthestMeasurements.size === this.options.lanes ? Array.from(furthestMeasurements.values()).sort((a12, b9) => {
        if (a12.end === b9.end) {
          return a12.index - b9.index;
        }
        return a12.end - b9.end;
      })[0] : void 0;
    };
    this.getMeasurements = memo(
      () => [this.memoOptions(), this.itemSizeCache],
      ({ count, paddingStart, scrollMargin, getItemKey }, itemSizeCache) => {
        const min = this.pendingMeasuredCacheIndexes.length > 0 ? Math.min(...this.pendingMeasuredCacheIndexes) : 0;
        this.pendingMeasuredCacheIndexes = [];
        const measurements = this.measurementsCache.slice(0, min);
        for (let i9 = min; i9 < count; i9++) {
          const key = getItemKey(i9);
          const furthestMeasurement = this.options.lanes === 1 ? measurements[i9 - 1] : this.getFurthestMeasurement(measurements, i9);
          const start = furthestMeasurement ? furthestMeasurement.end : paddingStart + scrollMargin;
          const measuredSize = itemSizeCache.get(key);
          const size = typeof measuredSize === "number" ? measuredSize : this.options.estimateSize(i9);
          const end = start + size;
          const lane = furthestMeasurement ? furthestMeasurement.lane : i9 % this.options.lanes;
          measurements[i9] = {
            index: i9,
            start,
            size,
            end,
            key,
            lane
          };
        }
        this.measurementsCache = measurements;
        return measurements;
      },
      {
        key: "getMeasurements",
        debug: () => this.options.debug
      }
    );
    this.calculateRange = memo(
      () => [this.getMeasurements(), this.getSize(), this.scrollOffset],
      (measurements, outerSize, scrollOffset) => {
        return this.range = measurements.length > 0 && outerSize > 0 ? calculateRange({
          measurements,
          outerSize,
          scrollOffset
        }) : null;
      },
      {
        key: "calculateRange",
        debug: () => this.options.debug
      }
    );
    this.getIndexes = memo(
      () => [
        this.options.rangeExtractor,
        this.calculateRange(),
        this.options.overscan,
        this.options.count
      ],
      (rangeExtractor, range, overscan, count) => {
        return range === null ? [] : rangeExtractor({
          ...range,
          overscan,
          count
        });
      },
      {
        key: "getIndexes",
        debug: () => this.options.debug
      }
    );
    this.indexFromElement = (node) => {
      const attributeName = this.options.indexAttribute;
      const indexStr = node.getAttribute(attributeName);
      if (!indexStr) {
        console.warn(
          `Missing attribute name '${attributeName}={index}' on measured element.`
        );
        return -1;
      }
      return parseInt(indexStr, 10);
    };
    this._measureElement = (node, entry) => {
      const item = this.measurementsCache[this.indexFromElement(node)];
      if (!item || !node.isConnected) {
        this.measureElementCache.forEach((cached, key) => {
          if (cached === node) {
            this.observer.unobserve(node);
            this.measureElementCache.delete(key);
          }
        });
        return;
      }
      const prevNode = this.measureElementCache.get(item.key);
      if (prevNode !== node) {
        if (prevNode) {
          this.observer.unobserve(prevNode);
        }
        this.observer.observe(node);
        this.measureElementCache.set(item.key, node);
      }
      const measuredItemSize = this.options.measureElement(node, entry, this);
      this.resizeItem(item, measuredItemSize);
    };
    this.resizeItem = (item, size) => {
      const itemSize = this.itemSizeCache.get(item.key) ?? item.size;
      const delta = size - itemSize;
      if (delta !== 0) {
        if (item.start < this.scrollOffset + this.scrollAdjustments) {
          if (this.options.debug) {
            console.info("correction", delta);
          }
          this._scrollToOffset(this.scrollOffset, {
            adjustments: this.scrollAdjustments += delta,
            behavior: void 0
          });
        }
        this.pendingMeasuredCacheIndexes.push(item.index);
        this.itemSizeCache = new Map(this.itemSizeCache.set(item.key, size));
        this.notify(false);
      }
    };
    this.measureElement = (node) => {
      if (!node) {
        return;
      }
      this._measureElement(node, void 0);
    };
    this.getVirtualItems = memo(
      () => [this.getIndexes(), this.getMeasurements()],
      (indexes, measurements) => {
        const virtualItems = [];
        for (let k4 = 0, len = indexes.length; k4 < len; k4++) {
          const i9 = indexes[k4];
          const measurement = measurements[i9];
          virtualItems.push(measurement);
        }
        return virtualItems;
      },
      {
        key: "getIndexes",
        debug: () => this.options.debug
      }
    );
    this.getVirtualItemForOffset = (offset) => {
      const measurements = this.getMeasurements();
      return notUndefined(
        measurements[findNearestBinarySearch(
          0,
          measurements.length - 1,
          (index2) => notUndefined(measurements[index2]).start,
          offset
        )]
      );
    };
    this.getOffsetForAlignment = (toOffset, align) => {
      const size = this.getSize();
      if (align === "auto") {
        if (toOffset <= this.scrollOffset) {
          align = "start";
        } else if (toOffset >= this.scrollOffset + size) {
          align = "end";
        } else {
          align = "start";
        }
      }
      if (align === "start") {
        toOffset = toOffset;
      } else if (align === "end") {
        toOffset = toOffset - size;
      } else if (align === "center") {
        toOffset = toOffset - size / 2;
      }
      const scrollSizeProp = this.options.horizontal ? "scrollWidth" : "scrollHeight";
      const scrollSize = this.scrollElement ? "document" in this.scrollElement ? this.scrollElement.document.documentElement[scrollSizeProp] : this.scrollElement[scrollSizeProp] : 0;
      const maxOffset = scrollSize - this.getSize();
      return Math.max(Math.min(maxOffset, toOffset), 0);
    };
    this.getOffsetForIndex = (index2, align = "auto") => {
      index2 = Math.max(0, Math.min(index2, this.options.count - 1));
      const measurement = notUndefined(this.getMeasurements()[index2]);
      if (align === "auto") {
        if (measurement.end >= this.scrollOffset + this.getSize() - this.options.scrollPaddingEnd) {
          align = "end";
        } else if (measurement.start <= this.scrollOffset + this.options.scrollPaddingStart) {
          align = "start";
        } else {
          return [this.scrollOffset, align];
        }
      }
      const toOffset = align === "end" ? measurement.end + this.options.scrollPaddingEnd : measurement.start - this.options.scrollPaddingStart;
      return [this.getOffsetForAlignment(toOffset, align), align];
    };
    this.isDynamicMode = () => this.measureElementCache.size > 0;
    this.cancelScrollToIndex = () => {
      if (this.scrollToIndexTimeoutId !== null) {
        clearTimeout(this.scrollToIndexTimeoutId);
        this.scrollToIndexTimeoutId = null;
      }
    };
    this.scrollToOffset = (toOffset, { align = "start", behavior } = {}) => {
      this.cancelScrollToIndex();
      if (behavior === "smooth" && this.isDynamicMode()) {
        console.warn(
          "The `smooth` scroll behavior is not fully supported with dynamic size."
        );
      }
      this._scrollToOffset(this.getOffsetForAlignment(toOffset, align), {
        adjustments: void 0,
        behavior
      });
    };
    this.scrollToIndex = (index2, { align: initialAlign = "auto", behavior } = {}) => {
      index2 = Math.max(0, Math.min(index2, this.options.count - 1));
      this.cancelScrollToIndex();
      if (behavior === "smooth" && this.isDynamicMode()) {
        console.warn(
          "The `smooth` scroll behavior is not fully supported with dynamic size."
        );
      }
      const [toOffset, align] = this.getOffsetForIndex(index2, initialAlign);
      this._scrollToOffset(toOffset, { adjustments: void 0, behavior });
      if (behavior !== "smooth" && this.isDynamicMode()) {
        this.scrollToIndexTimeoutId = setTimeout(() => {
          this.scrollToIndexTimeoutId = null;
          const elementInDOM = this.measureElementCache.has(
            this.options.getItemKey(index2)
          );
          if (elementInDOM) {
            const [toOffset2] = this.getOffsetForIndex(index2, align);
            if (!approxEqual(toOffset2, this.scrollOffset)) {
              this.scrollToIndex(index2, { align, behavior });
            }
          } else {
            this.scrollToIndex(index2, { align, behavior });
          }
        });
      }
    };
    this.scrollBy = (delta, { behavior } = {}) => {
      this.cancelScrollToIndex();
      if (behavior === "smooth" && this.isDynamicMode()) {
        console.warn(
          "The `smooth` scroll behavior is not fully supported with dynamic size."
        );
      }
      this._scrollToOffset(this.scrollOffset + delta, {
        adjustments: void 0,
        behavior
      });
    };
    this.getTotalSize = () => {
      var _a;
      const measurements = this.getMeasurements();
      let end;
      if (measurements.length === 0) {
        end = this.options.paddingStart;
      } else {
        end = this.options.lanes === 1 ? ((_a = measurements[measurements.length - 1]) == null ? void 0 : _a.end) ?? 0 : Math.max(
          ...measurements.slice(-this.options.lanes).map((m13) => m13.end)
        );
      }
      return end - this.options.scrollMargin + this.options.paddingEnd;
    };
    this._scrollToOffset = (offset, {
      adjustments,
      behavior
    }) => {
      this.options.scrollToFn(offset, { behavior, adjustments }, this);
    };
    this.measure = () => {
      this.itemSizeCache = /* @__PURE__ */ new Map();
      this.notify(false);
    };
    this.setOptions(opts);
    this.scrollRect = this.options.initialRect;
    this.scrollOffset = this.options.initialOffset;
    this.measurementsCache = this.options.initialMeasurementsCache;
    this.measurementsCache.forEach((item) => {
      this.itemSizeCache.set(item.key, item.size);
    });
    this.maybeNotify();
  }
};
var findNearestBinarySearch = (low, high, getCurrentValue, value) => {
  while (low <= high) {
    const middle = (low + high) / 2 | 0;
    const currentValue = getCurrentValue(middle);
    if (currentValue < value) {
      low = middle + 1;
    } else if (currentValue > value) {
      high = middle - 1;
    } else {
      return middle;
    }
  }
  if (low > 0) {
    return low - 1;
  } else {
    return 0;
  }
};
function calculateRange({
  measurements,
  outerSize,
  scrollOffset
}) {
  const count = measurements.length - 1;
  const getOffset = (index2) => measurements[index2].start;
  const startIndex = findNearestBinarySearch(0, count, getOffset, scrollOffset);
  let endIndex = startIndex;
  while (endIndex < count && measurements[endIndex].end < scrollOffset + outerSize) {
    endIndex++;
  }
  return { startIndex, endIndex };
}

// node_modules/@tanstack/react-virtual/dist/esm/index.js
var useIsomorphicLayoutEffect2 = typeof document !== "undefined" ? React12.useLayoutEffect : React12.useEffect;
function useVirtualizerBase(options) {
  const rerender = React12.useReducer(() => ({}), {})[1];
  const resolvedOptions = {
    ...options,
    onChange: (instance2, sync2) => {
      var _a;
      if (sync2) {
        (0, import_react_dom.flushSync)(rerender);
      } else {
        rerender();
      }
      (_a = options.onChange) == null ? void 0 : _a.call(options, instance2, sync2);
    }
  };
  const [instance] = React12.useState(
    () => new Virtualizer(resolvedOptions)
  );
  instance.setOptions(resolvedOptions);
  React12.useEffect(() => {
    return instance._didMount();
  }, []);
  useIsomorphicLayoutEffect2(() => {
    return instance._willUpdate();
  });
  return instance;
}
function useVirtualizer(options) {
  return useVirtualizerBase({
    observeElementRect,
    observeElementOffset,
    scrollToFn: elementScroll,
    ...options
  });
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/components/combobox/combobox.js
var import_react71 = __toESM(require_react(), 1);

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-computed.js
var import_react55 = __toESM(require_react(), 1);

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-iso-morphic-effect.js
var import_react53 = __toESM(require_react(), 1);

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/utils/env.js
var i = Object.defineProperty;
var d = (t18, e4, n7) => e4 in t18 ? i(t18, e4, { enumerable: true, configurable: true, writable: true, value: n7 }) : t18[e4] = n7;
var r = (t18, e4, n7) => (d(t18, typeof e4 != "symbol" ? e4 + "" : e4, n7), n7);
var o = class {
  constructor() {
    r(this, "current", this.detect());
    r(this, "handoffState", "pending");
    r(this, "currentId", 0);
  }
  set(e4) {
    this.current !== e4 && (this.handoffState = "pending", this.currentId = 0, this.current = e4);
  }
  reset() {
    this.set(this.detect());
  }
  nextId() {
    return ++this.currentId;
  }
  get isServer() {
    return this.current === "server";
  }
  get isClient() {
    return this.current === "client";
  }
  detect() {
    return typeof window == "undefined" || typeof document == "undefined" ? "server" : "client";
  }
  handoff() {
    this.handoffState === "pending" && (this.handoffState = "complete");
  }
  get isHandoffComplete() {
    return this.handoffState === "complete";
  }
};
var s = new o();

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-iso-morphic-effect.js
var l = (e4, f15) => {
  s.isServer ? (0, import_react53.useEffect)(e4, f15) : (0, import_react53.useLayoutEffect)(e4, f15);
};

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-latest-value.js
var import_react54 = __toESM(require_react(), 1);
function s2(e4) {
  let r9 = (0, import_react54.useRef)(e4);
  return l(() => {
    r9.current = e4;
  }, [e4]), r9;
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-computed.js
function i2(e4, o14) {
  let [u12, t18] = (0, import_react55.useState)(e4), r9 = s2(e4);
  return l(() => t18(r9.current), [r9, t18, ...o14]), u12;
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-controllable.js
var import_react57 = __toESM(require_react(), 1);

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-event.js
var import_react56 = __toESM(require_react(), 1);
var o2 = function(t18) {
  let e4 = s2(t18);
  return import_react56.default.useCallback((...r9) => e4.current(...r9), [e4]);
};

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-controllable.js
function T(l12, r9, c14) {
  let [i9, s18] = (0, import_react57.useState)(c14), e4 = l12 !== void 0, t18 = (0, import_react57.useRef)(e4), u12 = (0, import_react57.useRef)(false), d16 = (0, import_react57.useRef)(false);
  return e4 && !t18.current && !u12.current ? (u12.current = true, t18.current = e4, console.error("A component is changing from uncontrolled to controlled. This may be caused by the value changing from undefined to a defined value, which should not happen.")) : !e4 && t18.current && !d16.current && (d16.current = true, t18.current = e4, console.error("A component is changing from controlled to uncontrolled. This may be caused by the value changing from a defined value to undefined, which should not happen.")), [e4 ? l12 : i9, o2((n7) => (e4 || s18(n7), r9 == null ? void 0 : r9(n7)))];
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-disposables.js
var import_react58 = __toESM(require_react(), 1);

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/utils/micro-task.js
function t3(e4) {
  typeof queueMicrotask == "function" ? queueMicrotask(e4) : Promise.resolve().then(e4).catch((o14) => setTimeout(() => {
    throw o14;
  }));
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/utils/disposables.js
function o4() {
  let n7 = [], r9 = { addEventListener(e4, t18, s18, a12) {
    return e4.addEventListener(t18, s18, a12), r9.add(() => e4.removeEventListener(t18, s18, a12));
  }, requestAnimationFrame(...e4) {
    let t18 = requestAnimationFrame(...e4);
    return r9.add(() => cancelAnimationFrame(t18));
  }, nextFrame(...e4) {
    return r9.requestAnimationFrame(() => r9.requestAnimationFrame(...e4));
  }, setTimeout(...e4) {
    let t18 = setTimeout(...e4);
    return r9.add(() => clearTimeout(t18));
  }, microTask(...e4) {
    let t18 = { current: true };
    return t3(() => {
      t18.current && e4[0]();
    }), r9.add(() => {
      t18.current = false;
    });
  }, style(e4, t18, s18) {
    let a12 = e4.style.getPropertyValue(t18);
    return Object.assign(e4.style, { [t18]: s18 }), this.add(() => {
      Object.assign(e4.style, { [t18]: a12 });
    });
  }, group(e4) {
    let t18 = o4();
    return e4(t18), this.add(() => t18.dispose());
  }, add(e4) {
    return n7.push(e4), () => {
      let t18 = n7.indexOf(e4);
      if (t18 >= 0)
        for (let s18 of n7.splice(t18, 1))
          s18();
    };
  }, dispose() {
    for (let e4 of n7.splice(0))
      e4();
  } };
  return r9;
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-disposables.js
function p() {
  let [e4] = (0, import_react58.useState)(o4);
  return (0, import_react58.useEffect)(() => () => e4.dispose(), [e4]), e4;
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-id.js
var import_react59 = __toESM(require_react(), 1);

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-server-handoff-complete.js
var t4 = __toESM(require_react(), 1);
function s5() {
  let r9 = typeof document == "undefined";
  return "useSyncExternalStore" in t4 ? ((o14) => o14.useSyncExternalStore)(t4)(() => () => {
  }, () => false, () => !r9) : false;
}
function l2() {
  let r9 = s5(), [e4, n7] = t4.useState(s.isHandoffComplete);
  return e4 && s.isHandoffComplete === false && n7(false), t4.useEffect(() => {
    e4 !== true && n7(true);
  }, [e4]), t4.useEffect(() => s.handoff(), []), r9 ? false : e4;
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-id.js
var o6;
var I = (o6 = import_react59.default.useId) != null ? o6 : function() {
  let n7 = l2(), [e4, u12] = import_react59.default.useState(n7 ? () => s.nextId() : null);
  return l(() => {
    e4 === null && u12(s.nextId());
  }, [e4]), e4 != null ? "" + e4 : void 0;
};

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-outside-click.js
var import_react62 = __toESM(require_react(), 1);

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/utils/match.js
function u(r9, n7, ...a12) {
  if (r9 in n7) {
    let e4 = n7[r9];
    return typeof e4 == "function" ? e4(...a12) : e4;
  }
  let t18 = new Error(`Tried to handle "${r9}" but there is no handler defined. Only defined handlers are: ${Object.keys(n7).map((e4) => `"${e4}"`).join(", ")}.`);
  throw Error.captureStackTrace && Error.captureStackTrace(t18, u), t18;
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/utils/owner.js
function o7(r9) {
  return s.isServer ? null : r9 instanceof Node ? r9.ownerDocument : r9 != null && r9.hasOwnProperty("current") && r9.current instanceof Node ? r9.current.ownerDocument : document;
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/utils/focus-management.js
var c3 = ["[contentEditable=true]", "[tabindex]", "a[href]", "area[href]", "button:not([disabled])", "iframe", "input:not([disabled])", "select:not([disabled])", "textarea:not([disabled])"].map((e4) => `${e4}:not([tabindex='-1'])`).join(",");
var M = ((n7) => (n7[n7.First = 1] = "First", n7[n7.Previous = 2] = "Previous", n7[n7.Next = 4] = "Next", n7[n7.Last = 8] = "Last", n7[n7.WrapAround = 16] = "WrapAround", n7[n7.NoScroll = 32] = "NoScroll", n7))(M || {});
var N = ((o14) => (o14[o14.Error = 0] = "Error", o14[o14.Overflow = 1] = "Overflow", o14[o14.Success = 2] = "Success", o14[o14.Underflow = 3] = "Underflow", o14))(N || {});
var F = ((t18) => (t18[t18.Previous = -1] = "Previous", t18[t18.Next = 1] = "Next", t18))(F || {});
function f2(e4 = document.body) {
  return e4 == null ? [] : Array.from(e4.querySelectorAll(c3)).sort((r9, t18) => Math.sign((r9.tabIndex || Number.MAX_SAFE_INTEGER) - (t18.tabIndex || Number.MAX_SAFE_INTEGER)));
}
var T2 = ((t18) => (t18[t18.Strict = 0] = "Strict", t18[t18.Loose = 1] = "Loose", t18))(T2 || {});
function h(e4, r9 = 0) {
  var t18;
  return e4 === ((t18 = o7(e4)) == null ? void 0 : t18.body) ? false : u(r9, { [0]() {
    return e4.matches(c3);
  }, [1]() {
    let l12 = e4;
    for (; l12 !== null; ) {
      if (l12.matches(c3))
        return true;
      l12 = l12.parentElement;
    }
    return false;
  } });
}
function D(e4) {
  let r9 = o7(e4);
  o4().nextFrame(() => {
    r9 && !h(r9.activeElement, 0) && y(e4);
  });
}
var w = ((t18) => (t18[t18.Keyboard = 0] = "Keyboard", t18[t18.Mouse = 1] = "Mouse", t18))(w || {});
typeof window != "undefined" && typeof document != "undefined" && (document.addEventListener("keydown", (e4) => {
  e4.metaKey || e4.altKey || e4.ctrlKey || (document.documentElement.dataset.headlessuiFocusVisible = "");
}, true), document.addEventListener("click", (e4) => {
  e4.detail === 1 ? delete document.documentElement.dataset.headlessuiFocusVisible : e4.detail === 0 && (document.documentElement.dataset.headlessuiFocusVisible = "");
}, true));
function y(e4) {
  e4 == null || e4.focus({ preventScroll: true });
}
var S = ["textarea", "input"].join(",");
function H(e4) {
  var r9, t18;
  return (t18 = (r9 = e4 == null ? void 0 : e4.matches) == null ? void 0 : r9.call(e4, S)) != null ? t18 : false;
}
function I2(e4, r9 = (t18) => t18) {
  return e4.slice().sort((t18, l12) => {
    let o14 = r9(t18), i9 = r9(l12);
    if (o14 === null || i9 === null)
      return 0;
    let n7 = o14.compareDocumentPosition(i9);
    return n7 & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : n7 & Node.DOCUMENT_POSITION_PRECEDING ? 1 : 0;
  });
}
function _(e4, r9) {
  return O(f2(), r9, { relativeTo: e4 });
}
function O(e4, r9, { sorted: t18 = true, relativeTo: l12 = null, skipElements: o14 = [] } = {}) {
  let i9 = Array.isArray(e4) ? e4.length > 0 ? e4[0].ownerDocument : document : e4.ownerDocument, n7 = Array.isArray(e4) ? t18 ? I2(e4) : e4 : f2(e4);
  o14.length > 0 && n7.length > 1 && (n7 = n7.filter((s18) => !o14.includes(s18))), l12 = l12 != null ? l12 : i9.activeElement;
  let E9 = (() => {
    if (r9 & 5)
      return 1;
    if (r9 & 10)
      return -1;
    throw new Error("Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last");
  })(), x4 = (() => {
    if (r9 & 1)
      return 0;
    if (r9 & 2)
      return Math.max(0, n7.indexOf(l12)) - 1;
    if (r9 & 4)
      return Math.max(0, n7.indexOf(l12)) + 1;
    if (r9 & 8)
      return n7.length - 1;
    throw new Error("Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last");
  })(), p7 = r9 & 32 ? { preventScroll: true } : {}, d16 = 0, a12 = n7.length, u12;
  do {
    if (d16 >= a12 || d16 + a12 <= 0)
      return 0;
    let s18 = x4 + d16;
    if (r9 & 16)
      s18 = (s18 + a12) % a12;
    else {
      if (s18 < 0)
        return 3;
      if (s18 >= a12)
        return 1;
    }
    u12 = n7[s18], u12 == null || u12.focus(p7), d16 += E9;
  } while (u12 !== i9.activeElement);
  return r9 & 6 && H(u12) && u12.select(), 2;
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/utils/platform.js
function t6() {
  return /iPhone/gi.test(window.navigator.platform) || /Mac/gi.test(window.navigator.platform) && window.navigator.maxTouchPoints > 0;
}
function i3() {
  return /Android/gi.test(window.navigator.userAgent);
}
function n() {
  return t6() || i3();
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-document-event.js
var import_react60 = __toESM(require_react(), 1);
function d2(e4, r9, n7) {
  let o14 = s2(r9);
  (0, import_react60.useEffect)(() => {
    function t18(u12) {
      o14.current(u12);
    }
    return document.addEventListener(e4, t18, n7), () => document.removeEventListener(e4, t18, n7);
  }, [e4, n7]);
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-window-event.js
var import_react61 = __toESM(require_react(), 1);
function s6(e4, r9, n7) {
  let o14 = s2(r9);
  (0, import_react61.useEffect)(() => {
    function t18(i9) {
      o14.current(i9);
    }
    return window.addEventListener(e4, t18, n7), () => window.removeEventListener(e4, t18, n7);
  }, [e4, n7]);
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-outside-click.js
function y2(s18, m13, a12 = true) {
  let i9 = (0, import_react62.useRef)(false);
  (0, import_react62.useEffect)(() => {
    requestAnimationFrame(() => {
      i9.current = a12;
    });
  }, [a12]);
  function c14(e4, r9) {
    if (!i9.current || e4.defaultPrevented)
      return;
    let t18 = r9(e4);
    if (t18 === null || !t18.getRootNode().contains(t18) || !t18.isConnected)
      return;
    let E9 = function u12(n7) {
      return typeof n7 == "function" ? u12(n7()) : Array.isArray(n7) || n7 instanceof Set ? n7 : [n7];
    }(s18);
    for (let u12 of E9) {
      if (u12 === null)
        continue;
      let n7 = u12 instanceof HTMLElement ? u12 : u12.current;
      if (n7 != null && n7.contains(t18) || e4.composed && e4.composedPath().includes(n7))
        return;
    }
    return !h(t18, T2.Loose) && t18.tabIndex !== -1 && e4.preventDefault(), m13(e4, t18);
  }
  let o14 = (0, import_react62.useRef)(null);
  d2("pointerdown", (e4) => {
    var r9, t18;
    i9.current && (o14.current = ((t18 = (r9 = e4.composedPath) == null ? void 0 : r9.call(e4)) == null ? void 0 : t18[0]) || e4.target);
  }, true), d2("mousedown", (e4) => {
    var r9, t18;
    i9.current && (o14.current = ((t18 = (r9 = e4.composedPath) == null ? void 0 : r9.call(e4)) == null ? void 0 : t18[0]) || e4.target);
  }, true), d2("click", (e4) => {
    n() || o14.current && (c14(e4, () => o14.current), o14.current = null);
  }, true), d2("touchend", (e4) => c14(e4, () => e4.target instanceof HTMLElement ? e4.target : null), true), s6("blur", (e4) => c14(e4, () => window.document.activeElement instanceof HTMLIFrameElement ? window.document.activeElement : null), true);
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-owner.js
var import_react63 = __toESM(require_react(), 1);
function n2(...e4) {
  return (0, import_react63.useMemo)(() => o7(...e4), [...e4]);
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-resolve-button-type.js
var import_react64 = __toESM(require_react(), 1);
function i4(t18) {
  var n7;
  if (t18.type)
    return t18.type;
  let e4 = (n7 = t18.as) != null ? n7 : "button";
  if (typeof e4 == "string" && e4.toLowerCase() === "button")
    return "button";
}
function T3(t18, e4) {
  let [n7, u12] = (0, import_react64.useState)(() => i4(t18));
  return l(() => {
    u12(i4(t18));
  }, [t18.type, t18.as]), l(() => {
    n7 || e4.current && e4.current instanceof HTMLButtonElement && !e4.current.hasAttribute("type") && u12("button");
  }, [n7, e4]), n7;
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-sync-refs.js
var import_react65 = __toESM(require_react(), 1);
var u2 = Symbol();
function T4(t18, n7 = true) {
  return Object.assign(t18, { [u2]: n7 });
}
function y3(...t18) {
  let n7 = (0, import_react65.useRef)(t18);
  (0, import_react65.useEffect)(() => {
    n7.current = t18;
  }, [t18]);
  let c14 = o2((e4) => {
    for (let o14 of n7.current)
      o14 != null && (typeof o14 == "function" ? o14(e4) : o14.current = e4);
  });
  return t18.every((e4) => e4 == null || (e4 == null ? void 0 : e4[u2])) ? void 0 : c14;
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-tracked-pointer.js
var import_react66 = __toESM(require_react(), 1);
function t8(e4) {
  return [e4.screenX, e4.screenY];
}
function u3() {
  let e4 = (0, import_react66.useRef)([-1, -1]);
  return { wasMoved(r9) {
    let n7 = t8(r9);
    return e4.current[0] === n7[0] && e4.current[1] === n7[1] ? false : (e4.current = n7, true);
  }, update(r9) {
    e4.current = t8(r9);
  } };
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-tree-walker.js
var import_react67 = __toESM(require_react(), 1);
function F2({ container: e4, accept: t18, walk: r9, enabled: c14 = true }) {
  let o14 = (0, import_react67.useRef)(t18), l12 = (0, import_react67.useRef)(r9);
  (0, import_react67.useEffect)(() => {
    o14.current = t18, l12.current = r9;
  }, [t18, r9]), l(() => {
    if (!e4 || !c14)
      return;
    let n7 = o7(e4);
    if (!n7)
      return;
    let f15 = o14.current, p7 = l12.current, d16 = Object.assign((i9) => f15(i9), { acceptNode: f15 }), u12 = n7.createTreeWalker(e4, NodeFilter.SHOW_ELEMENT, d16, false);
    for (; u12.nextNode(); )
      p7(u12.currentNode);
  }, [e4, c14, o14, l12]);
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-watch.js
var import_react68 = __toESM(require_react(), 1);
function m4(u12, t18) {
  let e4 = (0, import_react68.useRef)([]), r9 = o2(u12);
  (0, import_react68.useEffect)(() => {
    let o14 = [...e4.current];
    for (let [n7, a12] of t18.entries())
      if (e4.current[n7] !== a12) {
        let l12 = r9(t18, o14);
        return e4.current = t18, l12;
      }
  }, [r9, ...t18]);
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/utils/render.js
var import_react69 = __toESM(require_react(), 1);

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/utils/class-names.js
function t9(...r9) {
  return Array.from(new Set(r9.flatMap((n7) => typeof n7 == "string" ? n7.split(" ") : []))).filter(Boolean).join(" ");
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/utils/render.js
var O2 = ((n7) => (n7[n7.None = 0] = "None", n7[n7.RenderStrategy = 1] = "RenderStrategy", n7[n7.Static = 2] = "Static", n7))(O2 || {});
var v = ((e4) => (e4[e4.Unmount = 0] = "Unmount", e4[e4.Hidden = 1] = "Hidden", e4))(v || {});
function C({ ourProps: r9, theirProps: t18, slot: e4, defaultTag: n7, features: o14, visible: a12 = true, name: f15, mergeRefs: l12 }) {
  l12 = l12 != null ? l12 : k;
  let s18 = R(t18, r9);
  if (a12)
    return m5(s18, e4, n7, f15, l12);
  let y7 = o14 != null ? o14 : 0;
  if (y7 & 2) {
    let { static: u12 = false, ...d16 } = s18;
    if (u12)
      return m5(d16, e4, n7, f15, l12);
  }
  if (y7 & 1) {
    let { unmount: u12 = true, ...d16 } = s18;
    return u(u12 ? 0 : 1, { [0]() {
      return null;
    }, [1]() {
      return m5({ ...d16, hidden: true, style: { display: "none" } }, e4, n7, f15, l12);
    } });
  }
  return m5(s18, e4, n7, f15, l12);
}
function m5(r9, t18 = {}, e4, n7, o14) {
  let { as: a12 = e4, children: f15, refName: l12 = "ref", ...s18 } = F3(r9, ["unmount", "static"]), y7 = r9.ref !== void 0 ? { [l12]: r9.ref } : {}, u12 = typeof f15 == "function" ? f15(t18) : f15;
  "className" in s18 && s18.className && typeof s18.className == "function" && (s18.className = s18.className(t18));
  let d16 = {};
  if (t18) {
    let i9 = false, c14 = [];
    for (let [T8, p7] of Object.entries(t18))
      typeof p7 == "boolean" && (i9 = true), p7 === true && c14.push(T8);
    i9 && (d16["data-headlessui-state"] = c14.join(" "));
  }
  if (a12 === import_react69.Fragment && Object.keys(x(s18)).length > 0) {
    if (!(0, import_react69.isValidElement)(u12) || Array.isArray(u12) && u12.length > 1)
      throw new Error(['Passing props on "Fragment"!', "", `The current component <${n7} /> is rendering a "Fragment".`, "However we need to passthrough the following props:", Object.keys(s18).map((p7) => `  - ${p7}`).join(`
`), "", "You can apply a few solutions:", ['Add an `as="..."` prop, to ensure that we render an actual element instead of a "Fragment".', "Render a single element as the child so that we can forward the props onto that element."].map((p7) => `  - ${p7}`).join(`
`)].join(`
`));
    let i9 = u12.props, c14 = typeof (i9 == null ? void 0 : i9.className) == "function" ? (...p7) => t9(i9 == null ? void 0 : i9.className(...p7), s18.className) : t9(i9 == null ? void 0 : i9.className, s18.className), T8 = c14 ? { className: c14 } : {};
    return (0, import_react69.cloneElement)(u12, Object.assign({}, R(u12.props, x(F3(s18, ["ref"]))), d16, y7, { ref: o14(u12.ref, y7.ref) }, T8));
  }
  return (0, import_react69.createElement)(a12, Object.assign({}, F3(s18, ["ref"]), a12 !== import_react69.Fragment && y7, a12 !== import_react69.Fragment && d16), u12);
}
function I3() {
  let r9 = (0, import_react69.useRef)([]), t18 = (0, import_react69.useCallback)((e4) => {
    for (let n7 of r9.current)
      n7 != null && (typeof n7 == "function" ? n7(e4) : n7.current = e4);
  }, []);
  return (...e4) => {
    if (!e4.every((n7) => n7 == null))
      return r9.current = e4, t18;
  };
}
function k(...r9) {
  return r9.every((t18) => t18 == null) ? void 0 : (t18) => {
    for (let e4 of r9)
      e4 != null && (typeof e4 == "function" ? e4(t18) : e4.current = t18);
  };
}
function R(...r9) {
  var n7;
  if (r9.length === 0)
    return {};
  if (r9.length === 1)
    return r9[0];
  let t18 = {}, e4 = {};
  for (let o14 of r9)
    for (let a12 in o14)
      a12.startsWith("on") && typeof o14[a12] == "function" ? ((n7 = e4[a12]) != null || (e4[a12] = []), e4[a12].push(o14[a12])) : t18[a12] = o14[a12];
  if (t18.disabled || t18["aria-disabled"])
    return Object.assign(t18, Object.fromEntries(Object.keys(e4).map((o14) => [o14, void 0])));
  for (let o14 in e4)
    Object.assign(t18, { [o14](a12, ...f15) {
      let l12 = e4[o14];
      for (let s18 of l12) {
        if ((a12 instanceof Event || (a12 == null ? void 0 : a12.nativeEvent) instanceof Event) && a12.defaultPrevented)
          return;
        s18(a12, ...f15);
      }
    } });
  return t18;
}
function U(r9) {
  var t18;
  return Object.assign((0, import_react69.forwardRef)(r9), { displayName: (t18 = r9.displayName) != null ? t18 : r9.name });
}
function x(r9) {
  let t18 = Object.assign({}, r9);
  for (let e4 in t18)
    t18[e4] === void 0 && delete t18[e4];
  return t18;
}
function F3(r9, t18 = []) {
  let e4 = Object.assign({}, r9);
  for (let n7 of t18)
    n7 in e4 && delete e4[n7];
  return e4;
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/internal/hidden.js
var p2 = "div";
var s8 = ((e4) => (e4[e4.None = 1] = "None", e4[e4.Focusable = 2] = "Focusable", e4[e4.Hidden = 4] = "Hidden", e4))(s8 || {});
function l4(d16, o14) {
  var n7;
  let { features: t18 = 1, ...e4 } = d16, r9 = { ref: o14, "aria-hidden": (t18 & 2) === 2 ? true : (n7 = e4["aria-hidden"]) != null ? n7 : void 0, style: { position: "fixed", top: 1, left: 1, width: 1, height: 0, padding: 0, margin: -1, overflow: "hidden", clip: "rect(0, 0, 0, 0)", whiteSpace: "nowrap", borderWidth: "0", ...(t18 & 4) === 4 && (t18 & 2) !== 2 && { display: "none" } } };
  return C({ ourProps: r9, theirProps: e4, slot: {}, defaultTag: p2, name: "Hidden" });
}
var f5 = U(l4);

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/internal/open-closed.js
var import_react70 = __toESM(require_react(), 1);
var n3 = (0, import_react70.createContext)(null);
n3.displayName = "OpenClosedContext";
var d5 = ((e4) => (e4[e4.Open = 1] = "Open", e4[e4.Closed = 2] = "Closed", e4[e4.Closing = 4] = "Closing", e4[e4.Opening = 8] = "Opening", e4))(d5 || {});
function u4() {
  return (0, import_react70.useContext)(n3);
}
function s9({ value: o14, children: r9 }) {
  return import_react70.default.createElement(n3.Provider, { value: o14 }, r9);
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/utils/document-ready.js
function t11(n7) {
  function e4() {
    document.readyState !== "loading" && (n7(), document.removeEventListener("DOMContentLoaded", e4));
  }
  typeof window != "undefined" && typeof document != "undefined" && (document.addEventListener("DOMContentLoaded", e4), e4());
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/utils/active-element-history.js
var t12 = [];
t11(() => {
  function e4(n7) {
    n7.target instanceof HTMLElement && n7.target !== document.body && t12[0] !== n7.target && (t12.unshift(n7.target), t12 = t12.filter((r9) => r9 != null && r9.isConnected), t12.splice(10));
  }
  window.addEventListener("click", e4, { capture: true }), window.addEventListener("mousedown", e4, { capture: true }), window.addEventListener("focus", e4, { capture: true }), document.body.addEventListener("click", e4, { capture: true }), document.body.addEventListener("mousedown", e4, { capture: true }), document.body.addEventListener("focus", e4, { capture: true });
});

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/utils/bugs.js
function r2(n7) {
  let e4 = n7.parentElement, l12 = null;
  for (; e4 && !(e4 instanceof HTMLFieldSetElement); )
    e4 instanceof HTMLLegendElement && (l12 = e4), e4 = e4.parentElement;
  let t18 = (e4 == null ? void 0 : e4.getAttribute("disabled")) === "";
  return t18 && i6(l12) ? false : t18;
}
function i6(n7) {
  if (!n7)
    return false;
  let e4 = n7.previousElementSibling;
  for (; e4 !== null; ) {
    if (e4 instanceof HTMLLegendElement)
      return false;
    e4 = e4.previousElementSibling;
  }
  return true;
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/utils/calculate-active-index.js
function u5(l12) {
  throw new Error("Unexpected object: " + l12);
}
var c4 = ((i9) => (i9[i9.First = 0] = "First", i9[i9.Previous = 1] = "Previous", i9[i9.Next = 2] = "Next", i9[i9.Last = 3] = "Last", i9[i9.Specific = 4] = "Specific", i9[i9.Nothing = 5] = "Nothing", i9))(c4 || {});
function f6(l12, n7) {
  let t18 = n7.resolveItems();
  if (t18.length <= 0)
    return null;
  let r9 = n7.resolveActiveIndex(), s18 = r9 != null ? r9 : -1;
  switch (l12.focus) {
    case 0: {
      for (let e4 = 0; e4 < t18.length; ++e4)
        if (!n7.resolveDisabled(t18[e4], e4, t18))
          return e4;
      return r9;
    }
    case 1: {
      for (let e4 = s18 - 1; e4 >= 0; --e4)
        if (!n7.resolveDisabled(t18[e4], e4, t18))
          return e4;
      return r9;
    }
    case 2: {
      for (let e4 = s18 + 1; e4 < t18.length; ++e4)
        if (!n7.resolveDisabled(t18[e4], e4, t18))
          return e4;
      return r9;
    }
    case 3: {
      for (let e4 = t18.length - 1; e4 >= 0; --e4)
        if (!n7.resolveDisabled(t18[e4], e4, t18))
          return e4;
      return r9;
    }
    case 4: {
      for (let e4 = 0; e4 < t18.length; ++e4)
        if (n7.resolveId(t18[e4], e4, t18) === l12.id)
          return e4;
      return r9;
    }
    case 5:
      return null;
    default:
      u5(l12);
  }
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/utils/form.js
function e(i9 = {}, s18 = null, t18 = []) {
  for (let [r9, n7] of Object.entries(i9))
    o10(t18, f7(s18, r9), n7);
  return t18;
}
function f7(i9, s18) {
  return i9 ? i9 + "[" + s18 + "]" : s18;
}
function o10(i9, s18, t18) {
  if (Array.isArray(t18))
    for (let [r9, n7] of t18.entries())
      o10(i9, f7(s18, r9.toString()), n7);
  else
    t18 instanceof Date ? i9.push([s18, t18.toISOString()]) : typeof t18 == "boolean" ? i9.push([s18, t18 ? "1" : "0"]) : typeof t18 == "string" ? i9.push([s18, t18]) : typeof t18 == "number" ? i9.push([s18, `${t18}`]) : t18 == null ? i9.push([s18, ""]) : e(t18, s18, i9);
}
function p4(i9) {
  var t18, r9;
  let s18 = (t18 = i9 == null ? void 0 : i9.form) != null ? t18 : i9.closest("form");
  if (s18) {
    for (let n7 of s18.elements)
      if (n7 !== i9 && (n7.tagName === "INPUT" && n7.type === "submit" || n7.tagName === "BUTTON" && n7.type === "submit" || n7.nodeName === "INPUT" && n7.type === "image")) {
        n7.click();
        return;
      }
    (r9 = s18.requestSubmit) == null || r9.call(s18);
  }
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/components/keyboard.js
var o11 = ((r9) => (r9.Space = " ", r9.Enter = "Enter", r9.Escape = "Escape", r9.Backspace = "Backspace", r9.Delete = "Delete", r9.ArrowLeft = "ArrowLeft", r9.ArrowUp = "ArrowUp", r9.ArrowRight = "ArrowRight", r9.ArrowDown = "ArrowDown", r9.Home = "Home", r9.End = "End", r9.PageUp = "PageUp", r9.PageDown = "PageDown", r9.Tab = "Tab", r9))(o11 || {});

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/components/combobox/combobox.js
var $e = ((o14) => (o14[o14.Open = 0] = "Open", o14[o14.Closed = 1] = "Closed", o14))($e || {});
var qe = ((o14) => (o14[o14.Single = 0] = "Single", o14[o14.Multi = 1] = "Multi", o14))(qe || {});
var ze = ((a12) => (a12[a12.Pointer = 0] = "Pointer", a12[a12.Focus = 1] = "Focus", a12[a12.Other = 2] = "Other", a12))(ze || {});
var Ye = ((e4) => (e4[e4.OpenCombobox = 0] = "OpenCombobox", e4[e4.CloseCombobox = 1] = "CloseCombobox", e4[e4.GoToOption = 2] = "GoToOption", e4[e4.RegisterOption = 3] = "RegisterOption", e4[e4.UnregisterOption = 4] = "UnregisterOption", e4[e4.RegisterLabel = 5] = "RegisterLabel", e4[e4.SetActivationTrigger = 6] = "SetActivationTrigger", e4[e4.UpdateVirtualOptions = 7] = "UpdateVirtualOptions", e4))(Ye || {});
function de(t18, r9 = (o14) => o14) {
  let o14 = t18.activeOptionIndex !== null ? t18.options[t18.activeOptionIndex] : null, a12 = r9(t18.options.slice()), i9 = a12.length > 0 && a12[0].dataRef.current.order !== null ? a12.sort((p7, c14) => p7.dataRef.current.order - c14.dataRef.current.order) : I2(a12, (p7) => p7.dataRef.current.domRef.current), u12 = o14 ? i9.indexOf(o14) : null;
  return u12 === -1 && (u12 = null), { options: i9, activeOptionIndex: u12 };
}
var Qe = { [1](t18) {
  var r9;
  return (r9 = t18.dataRef.current) != null && r9.disabled || t18.comboboxState === 1 ? t18 : { ...t18, activeOptionIndex: null, comboboxState: 1 };
}, [0](t18) {
  var r9, o14;
  if ((r9 = t18.dataRef.current) != null && r9.disabled || t18.comboboxState === 0)
    return t18;
  if ((o14 = t18.dataRef.current) != null && o14.value) {
    let a12 = t18.dataRef.current.calculateIndex(t18.dataRef.current.value);
    if (a12 !== -1)
      return { ...t18, activeOptionIndex: a12, comboboxState: 0 };
  }
  return { ...t18, comboboxState: 0 };
}, [2](t18, r9) {
  var u12, p7, c14, e4, l12;
  if ((u12 = t18.dataRef.current) != null && u12.disabled || (p7 = t18.dataRef.current) != null && p7.optionsRef.current && !((c14 = t18.dataRef.current) != null && c14.optionsPropsRef.current.static) && t18.comboboxState === 1)
    return t18;
  if (t18.virtual) {
    let T8 = r9.focus === c4.Specific ? r9.idx : f6(r9, { resolveItems: () => t18.virtual.options, resolveActiveIndex: () => {
      var f15, v6;
      return (v6 = (f15 = t18.activeOptionIndex) != null ? f15 : t18.virtual.options.findIndex((S9) => !t18.virtual.disabled(S9))) != null ? v6 : null;
    }, resolveDisabled: t18.virtual.disabled, resolveId() {
      throw new Error("Function not implemented.");
    } }), g5 = (e4 = r9.trigger) != null ? e4 : 2;
    return t18.activeOptionIndex === T8 && t18.activationTrigger === g5 ? t18 : { ...t18, activeOptionIndex: T8, activationTrigger: g5 };
  }
  let o14 = de(t18);
  if (o14.activeOptionIndex === null) {
    let T8 = o14.options.findIndex((g5) => !g5.dataRef.current.disabled);
    T8 !== -1 && (o14.activeOptionIndex = T8);
  }
  let a12 = r9.focus === c4.Specific ? r9.idx : f6(r9, { resolveItems: () => o14.options, resolveActiveIndex: () => o14.activeOptionIndex, resolveId: (T8) => T8.id, resolveDisabled: (T8) => T8.dataRef.current.disabled }), i9 = (l12 = r9.trigger) != null ? l12 : 2;
  return t18.activeOptionIndex === a12 && t18.activationTrigger === i9 ? t18 : { ...t18, ...o14, activeOptionIndex: a12, activationTrigger: i9 };
}, [3]: (t18, r9) => {
  var u12, p7, c14;
  if ((u12 = t18.dataRef.current) != null && u12.virtual)
    return { ...t18, options: [...t18.options, r9.payload] };
  let o14 = r9.payload, a12 = de(t18, (e4) => (e4.push(o14), e4));
  t18.activeOptionIndex === null && (p7 = t18.dataRef.current) != null && p7.isSelected(r9.payload.dataRef.current.value) && (a12.activeOptionIndex = a12.options.indexOf(o14));
  let i9 = { ...t18, ...a12, activationTrigger: 2 };
  return (c14 = t18.dataRef.current) != null && c14.__demoMode && t18.dataRef.current.value === void 0 && (i9.activeOptionIndex = 0), i9;
}, [4]: (t18, r9) => {
  var a12;
  if ((a12 = t18.dataRef.current) != null && a12.virtual)
    return { ...t18, options: t18.options.filter((i9) => i9.id !== r9.id) };
  let o14 = de(t18, (i9) => {
    let u12 = i9.findIndex((p7) => p7.id === r9.id);
    return u12 !== -1 && i9.splice(u12, 1), i9;
  });
  return { ...t18, ...o14, activationTrigger: 2 };
}, [5]: (t18, r9) => t18.labelId === r9.id ? t18 : { ...t18, labelId: r9.id }, [6]: (t18, r9) => t18.activationTrigger === r9.trigger ? t18 : { ...t18, activationTrigger: r9.trigger }, [7]: (t18, r9) => {
  var a12;
  if (((a12 = t18.virtual) == null ? void 0 : a12.options) === r9.options)
    return t18;
  let o14 = t18.activeOptionIndex;
  if (t18.activeOptionIndex !== null) {
    let i9 = r9.options.indexOf(t18.virtual.options[t18.activeOptionIndex]);
    i9 !== -1 ? o14 = i9 : o14 = null;
  }
  return { ...t18, activeOptionIndex: o14, virtual: Object.assign({}, t18.virtual, { options: r9.options }) };
} };
var be = (0, import_react71.createContext)(null);
be.displayName = "ComboboxActionsContext";
function ee(t18) {
  let r9 = (0, import_react71.useContext)(be);
  if (r9 === null) {
    let o14 = new Error(`<${t18} /> is missing a parent <Combobox /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(o14, ee), o14;
  }
  return r9;
}
var Ce = (0, import_react71.createContext)(null);
function Ze(t18) {
  var c14;
  let r9 = j2("VirtualProvider"), [o14, a12] = (0, import_react71.useMemo)(() => {
    let e4 = r9.optionsRef.current;
    if (!e4)
      return [0, 0];
    let l12 = window.getComputedStyle(e4);
    return [parseFloat(l12.paddingBlockStart || l12.paddingTop), parseFloat(l12.paddingBlockEnd || l12.paddingBottom)];
  }, [r9.optionsRef.current]), i9 = useVirtualizer({ scrollPaddingStart: o14, scrollPaddingEnd: a12, count: r9.virtual.options.length, estimateSize() {
    return 40;
  }, getScrollElement() {
    var e4;
    return (e4 = r9.optionsRef.current) != null ? e4 : null;
  }, overscan: 12 }), [u12, p7] = (0, import_react71.useState)(0);
  return l(() => {
    p7((e4) => e4 + 1);
  }, [(c14 = r9.virtual) == null ? void 0 : c14.options]), import_react71.default.createElement(Ce.Provider, { value: i9 }, import_react71.default.createElement("div", { style: { position: "relative", width: "100%", height: `${i9.getTotalSize()}px` }, ref: (e4) => {
    if (e4) {
      if (typeof process != "undefined" && process.env.JEST_WORKER_ID !== void 0 || r9.activationTrigger === 0)
        return;
      r9.activeOptionIndex !== null && r9.virtual.options.length > r9.activeOptionIndex && i9.scrollToIndex(r9.activeOptionIndex);
    }
  } }, i9.getVirtualItems().map((e4) => {
    var l12;
    return import_react71.default.createElement(import_react71.Fragment, { key: e4.key }, import_react71.default.cloneElement((l12 = t18.children) == null ? void 0 : l12.call(t18, { option: r9.virtual.options[e4.index], open: r9.comboboxState === 0 }), { key: `${u12}-${e4.key}`, "data-index": e4.index, "aria-setsize": r9.virtual.options.length, "aria-posinset": e4.index + 1, style: { position: "absolute", top: 0, left: 0, transform: `translateY(${e4.start}px)`, overflowAnchor: "none" } }));
  })));
}
var ce = (0, import_react71.createContext)(null);
ce.displayName = "ComboboxDataContext";
function j2(t18) {
  let r9 = (0, import_react71.useContext)(ce);
  if (r9 === null) {
    let o14 = new Error(`<${t18} /> is missing a parent <Combobox /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(o14, j2), o14;
  }
  return r9;
}
function et(t18, r9) {
  return u(r9.type, Qe, t18, r9);
}
var tt = import_react71.Fragment;
function ot(t18, r9) {
  var fe5;
  let { value: o14, defaultValue: a12, onChange: i9, form: u12, name: p7, by: c14 = null, disabled: e4 = false, __demoMode: l12 = false, nullable: T8 = false, multiple: g5 = false, immediate: f15 = false, virtual: v6 = null, ...S9 } = t18, R5 = false, s18 = null, [I10 = g5 ? [] : void 0, V5] = T(o14, i9, a12), [_5, E9] = (0, import_react71.useReducer)(et, { dataRef: (0, import_react71.createRef)(), comboboxState: l12 ? 0 : 1, options: [], virtual: s18 ? { options: s18.options, disabled: (fe5 = s18.disabled) != null ? fe5 : () => false } : null, activeOptionIndex: null, activationTrigger: 2, labelId: null }), k4 = (0, import_react71.useRef)(false), J6 = (0, import_react71.useRef)({ static: false, hold: false }), K6 = (0, import_react71.useRef)(null), z5 = (0, import_react71.useRef)(null), te6 = (0, import_react71.useRef)(null), X6 = (0, import_react71.useRef)(null), x4 = o2(typeof c14 == "string" ? (d16, b9) => {
    let P5 = c14;
    return (d16 == null ? void 0 : d16[P5]) === (b9 == null ? void 0 : b9[P5]);
  } : c14 != null ? c14 : (d16, b9) => d16 === b9), O4 = o2((d16) => s18 ? c14 === null ? s18.options.indexOf(d16) : s18.options.findIndex((b9) => x4(b9, d16)) : _5.options.findIndex((b9) => x4(b9.dataRef.current.value, d16))), L2 = (0, import_react71.useCallback)((d16) => u(n7.mode, { [1]: () => I10.some((b9) => x4(b9, d16)), [0]: () => x4(I10, d16) }), [I10]), oe4 = o2((d16) => _5.activeOptionIndex === O4(d16)), n7 = (0, import_react71.useMemo)(() => ({ ..._5, immediate: R5, optionsPropsRef: J6, labelRef: K6, inputRef: z5, buttonRef: te6, optionsRef: X6, value: I10, defaultValue: a12, disabled: e4, mode: g5 ? 1 : 0, virtual: _5.virtual, get activeOptionIndex() {
    if (k4.current && _5.activeOptionIndex === null && (s18 ? s18.options.length > 0 : _5.options.length > 0)) {
      if (s18) {
        let b9 = s18.options.findIndex((P5) => {
          var G4, Y4;
          return !((Y4 = (G4 = s18 == null ? void 0 : s18.disabled) == null ? void 0 : G4.call(s18, P5)) != null && Y4);
        });
        if (b9 !== -1)
          return b9;
      }
      let d16 = _5.options.findIndex((b9) => !b9.dataRef.current.disabled);
      if (d16 !== -1)
        return d16;
    }
    return _5.activeOptionIndex;
  }, calculateIndex: O4, compare: x4, isSelected: L2, isActive: oe4, nullable: T8, __demoMode: l12 }), [I10, a12, e4, g5, T8, l12, _5, s18]);
  l(() => {
    s18 && E9({ type: 7, options: s18.options });
  }, [s18, s18 == null ? void 0 : s18.options]), l(() => {
    _5.dataRef.current = n7;
  }, [n7]), y2([n7.buttonRef, n7.inputRef, n7.optionsRef], () => le4.closeCombobox(), n7.comboboxState === 0);
  let F9 = (0, import_react71.useMemo)(() => {
    var d16, b9, P5;
    return { open: n7.comboboxState === 0, disabled: e4, activeIndex: n7.activeOptionIndex, activeOption: n7.activeOptionIndex === null ? null : n7.virtual ? n7.virtual.options[(d16 = n7.activeOptionIndex) != null ? d16 : 0] : (P5 = (b9 = n7.options[n7.activeOptionIndex]) == null ? void 0 : b9.dataRef.current.value) != null ? P5 : null, value: I10 };
  }, [n7, e4, I10]), A4 = o2(() => {
    if (n7.activeOptionIndex !== null) {
      if (n7.virtual)
        ae4(n7.virtual.options[n7.activeOptionIndex]);
      else {
        let { dataRef: d16 } = n7.options[n7.activeOptionIndex];
        ae4(d16.current.value);
      }
      le4.goToOption(c4.Specific, n7.activeOptionIndex);
    }
  }), h10 = o2(() => {
    E9({ type: 0 }), k4.current = true;
  }), C7 = o2(() => {
    E9({ type: 1 }), k4.current = false;
  }), D7 = o2((d16, b9, P5) => (k4.current = false, d16 === c4.Specific ? E9({ type: 2, focus: c4.Specific, idx: b9, trigger: P5 }) : E9({ type: 2, focus: d16, trigger: P5 }))), N7 = o2((d16, b9) => (E9({ type: 3, payload: { id: d16, dataRef: b9 } }), () => {
    n7.isActive(b9.current.value) && (k4.current = true), E9({ type: 4, id: d16 });
  })), ye6 = o2((d16) => (E9({ type: 5, id: d16 }), () => E9({ type: 5, id: null }))), ae4 = o2((d16) => u(n7.mode, { [0]() {
    return V5 == null ? void 0 : V5(d16);
  }, [1]() {
    let b9 = n7.value.slice(), P5 = b9.findIndex((G4) => x4(G4, d16));
    return P5 === -1 ? b9.push(d16) : b9.splice(P5, 1), V5 == null ? void 0 : V5(b9);
  } })), Re5 = o2((d16) => {
    E9({ type: 6, trigger: d16 });
  }), le4 = (0, import_react71.useMemo)(() => ({ onChange: ae4, registerOption: N7, registerLabel: ye6, goToOption: D7, closeCombobox: C7, openCombobox: h10, setActivationTrigger: Re5, selectActiveOption: A4 }), []), Ae6 = r9 === null ? {} : { ref: r9 }, ne6 = (0, import_react71.useRef)(null), Se6 = p();
  return (0, import_react71.useEffect)(() => {
    ne6.current && a12 !== void 0 && Se6.addEventListener(ne6.current, "reset", () => {
      V5 == null || V5(a12);
    });
  }, [ne6, V5]), import_react71.default.createElement(be.Provider, { value: le4 }, import_react71.default.createElement(ce.Provider, { value: n7 }, import_react71.default.createElement(s9, { value: u(n7.comboboxState, { [0]: d5.Open, [1]: d5.Closed }) }, p7 != null && I10 != null && e({ [p7]: I10 }).map(([d16, b9], P5) => import_react71.default.createElement(f5, { features: s8.Hidden, ref: P5 === 0 ? (G4) => {
    var Y4;
    ne6.current = (Y4 = G4 == null ? void 0 : G4.closest("form")) != null ? Y4 : null;
  } : void 0, ...x({ key: d16, as: "input", type: "hidden", hidden: true, readOnly: true, form: u12, name: d16, value: b9 }) })), C({ ourProps: Ae6, theirProps: S9, slot: F9, defaultTag: tt, name: "Combobox" }))));
}
var nt = "input";
function rt(t18, r9) {
  var X6, x4, O4, L2, oe4;
  let o14 = I(), { id: a12 = `headlessui-combobox-input-${o14}`, onChange: i9, displayValue: u12, type: p7 = "text", ...c14 } = t18, e4 = j2("Combobox.Input"), l12 = ee("Combobox.Input"), T8 = y3(e4.inputRef, r9), g5 = n2(e4.inputRef), f15 = (0, import_react71.useRef)(false), v6 = p(), S9 = o2(() => {
    l12.onChange(null), e4.optionsRef.current && (e4.optionsRef.current.scrollTop = 0), l12.goToOption(c4.Nothing);
  }), R5 = function() {
    var n7;
    return typeof u12 == "function" && e4.value !== void 0 ? (n7 = u12(e4.value)) != null ? n7 : "" : typeof e4.value == "string" ? e4.value : "";
  }();
  m4(([n7, F9], [A4, h10]) => {
    if (f15.current)
      return;
    let C7 = e4.inputRef.current;
    C7 && ((h10 === 0 && F9 === 1 || n7 !== A4) && (C7.value = n7), requestAnimationFrame(() => {
      if (f15.current || !C7 || (g5 == null ? void 0 : g5.activeElement) !== C7)
        return;
      let { selectionStart: D7, selectionEnd: N7 } = C7;
      Math.abs((N7 != null ? N7 : 0) - (D7 != null ? D7 : 0)) === 0 && D7 === 0 && C7.setSelectionRange(C7.value.length, C7.value.length);
    }));
  }, [R5, e4.comboboxState, g5]), m4(([n7], [F9]) => {
    if (n7 === 0 && F9 === 1) {
      if (f15.current)
        return;
      let A4 = e4.inputRef.current;
      if (!A4)
        return;
      let h10 = A4.value, { selectionStart: C7, selectionEnd: D7, selectionDirection: N7 } = A4;
      A4.value = "", A4.value = h10, N7 !== null ? A4.setSelectionRange(C7, D7, N7) : A4.setSelectionRange(C7, D7);
    }
  }, [e4.comboboxState]);
  let s18 = (0, import_react71.useRef)(false), I10 = o2(() => {
    s18.current = true;
  }), V5 = o2(() => {
    v6.nextFrame(() => {
      s18.current = false;
    });
  }), _5 = o2((n7) => {
    switch (f15.current = true, n7.key) {
      case o11.Enter:
        if (f15.current = false, e4.comboboxState !== 0 || s18.current)
          return;
        if (n7.preventDefault(), n7.stopPropagation(), e4.activeOptionIndex === null) {
          l12.closeCombobox();
          return;
        }
        l12.selectActiveOption(), e4.mode === 0 && l12.closeCombobox();
        break;
      case o11.ArrowDown:
        return f15.current = false, n7.preventDefault(), n7.stopPropagation(), u(e4.comboboxState, { [0]: () => l12.goToOption(c4.Next), [1]: () => l12.openCombobox() });
      case o11.ArrowUp:
        return f15.current = false, n7.preventDefault(), n7.stopPropagation(), u(e4.comboboxState, { [0]: () => l12.goToOption(c4.Previous), [1]: () => {
          l12.openCombobox(), v6.nextFrame(() => {
            e4.value || l12.goToOption(c4.Last);
          });
        } });
      case o11.Home:
        if (n7.shiftKey)
          break;
        return f15.current = false, n7.preventDefault(), n7.stopPropagation(), l12.goToOption(c4.First);
      case o11.PageUp:
        return f15.current = false, n7.preventDefault(), n7.stopPropagation(), l12.goToOption(c4.First);
      case o11.End:
        if (n7.shiftKey)
          break;
        return f15.current = false, n7.preventDefault(), n7.stopPropagation(), l12.goToOption(c4.Last);
      case o11.PageDown:
        return f15.current = false, n7.preventDefault(), n7.stopPropagation(), l12.goToOption(c4.Last);
      case o11.Escape:
        return f15.current = false, e4.comboboxState !== 0 ? void 0 : (n7.preventDefault(), e4.optionsRef.current && !e4.optionsPropsRef.current.static && n7.stopPropagation(), e4.nullable && e4.mode === 0 && e4.value === null && S9(), l12.closeCombobox());
      case o11.Tab:
        if (f15.current = false, e4.comboboxState !== 0)
          return;
        e4.mode === 0 && e4.activationTrigger !== 1 && l12.selectActiveOption(), l12.closeCombobox();
        break;
    }
  }), E9 = o2((n7) => {
    i9 == null || i9(n7), e4.nullable && e4.mode === 0 && n7.target.value === "" && S9(), l12.openCombobox();
  }), k4 = o2((n7) => {
    var A4, h10, C7;
    let F9 = (A4 = n7.relatedTarget) != null ? A4 : t12.find((D7) => D7 !== n7.currentTarget);
    if (f15.current = false, !((h10 = e4.optionsRef.current) != null && h10.contains(F9)) && !((C7 = e4.buttonRef.current) != null && C7.contains(F9)) && e4.comboboxState === 0)
      return n7.preventDefault(), e4.mode === 0 && (e4.nullable && e4.value === null ? S9() : e4.activationTrigger !== 1 && l12.selectActiveOption()), l12.closeCombobox();
  }), J6 = o2((n7) => {
    var A4, h10, C7;
    let F9 = (A4 = n7.relatedTarget) != null ? A4 : t12.find((D7) => D7 !== n7.currentTarget);
    (h10 = e4.buttonRef.current) != null && h10.contains(F9) || (C7 = e4.optionsRef.current) != null && C7.contains(F9) || e4.disabled || e4.immediate && e4.comboboxState !== 0 && (l12.openCombobox(), v6.nextFrame(() => {
      l12.setActivationTrigger(1);
    }));
  }), K6 = i2(() => {
    if (e4.labelId)
      return [e4.labelId].join(" ");
  }, [e4.labelId]), z5 = (0, import_react71.useMemo)(() => ({ open: e4.comboboxState === 0, disabled: e4.disabled }), [e4]), te6 = { ref: T8, id: a12, role: "combobox", type: p7, "aria-controls": (X6 = e4.optionsRef.current) == null ? void 0 : X6.id, "aria-expanded": e4.comboboxState === 0, "aria-activedescendant": e4.activeOptionIndex === null ? void 0 : e4.virtual ? (x4 = e4.options.find((n7) => {
    var F9;
    return !((F9 = e4.virtual) != null && F9.disabled(n7.dataRef.current.value)) && e4.compare(n7.dataRef.current.value, e4.virtual.options[e4.activeOptionIndex]);
  })) == null ? void 0 : x4.id : (O4 = e4.options[e4.activeOptionIndex]) == null ? void 0 : O4.id, "aria-labelledby": K6, "aria-autocomplete": "list", defaultValue: (oe4 = (L2 = t18.defaultValue) != null ? L2 : e4.defaultValue !== void 0 ? u12 == null ? void 0 : u12(e4.defaultValue) : null) != null ? oe4 : e4.defaultValue, disabled: e4.disabled, onCompositionStart: I10, onCompositionEnd: V5, onKeyDown: _5, onChange: E9, onFocus: J6, onBlur: k4 };
  return C({ ourProps: te6, theirProps: c14, slot: z5, defaultTag: nt, name: "Combobox.Input" });
}
var at = "button";
function lt(t18, r9) {
  var S9;
  let o14 = j2("Combobox.Button"), a12 = ee("Combobox.Button"), i9 = y3(o14.buttonRef, r9), u12 = I(), { id: p7 = `headlessui-combobox-button-${u12}`, ...c14 } = t18, e4 = p(), l12 = o2((R5) => {
    switch (R5.key) {
      case o11.ArrowDown:
        return R5.preventDefault(), R5.stopPropagation(), o14.comboboxState === 1 && a12.openCombobox(), e4.nextFrame(() => {
          var s18;
          return (s18 = o14.inputRef.current) == null ? void 0 : s18.focus({ preventScroll: true });
        });
      case o11.ArrowUp:
        return R5.preventDefault(), R5.stopPropagation(), o14.comboboxState === 1 && (a12.openCombobox(), e4.nextFrame(() => {
          o14.value || a12.goToOption(c4.Last);
        })), e4.nextFrame(() => {
          var s18;
          return (s18 = o14.inputRef.current) == null ? void 0 : s18.focus({ preventScroll: true });
        });
      case o11.Escape:
        return o14.comboboxState !== 0 ? void 0 : (R5.preventDefault(), o14.optionsRef.current && !o14.optionsPropsRef.current.static && R5.stopPropagation(), a12.closeCombobox(), e4.nextFrame(() => {
          var s18;
          return (s18 = o14.inputRef.current) == null ? void 0 : s18.focus({ preventScroll: true });
        }));
      default:
        return;
    }
  }), T8 = o2((R5) => {
    if (r2(R5.currentTarget))
      return R5.preventDefault();
    o14.comboboxState === 0 ? a12.closeCombobox() : (R5.preventDefault(), a12.openCombobox()), e4.nextFrame(() => {
      var s18;
      return (s18 = o14.inputRef.current) == null ? void 0 : s18.focus({ preventScroll: true });
    });
  }), g5 = i2(() => {
    if (o14.labelId)
      return [o14.labelId, p7].join(" ");
  }, [o14.labelId, p7]), f15 = (0, import_react71.useMemo)(() => ({ open: o14.comboboxState === 0, disabled: o14.disabled, value: o14.value }), [o14]), v6 = { ref: i9, id: p7, type: T3(t18, o14.buttonRef), tabIndex: -1, "aria-haspopup": "listbox", "aria-controls": (S9 = o14.optionsRef.current) == null ? void 0 : S9.id, "aria-expanded": o14.comboboxState === 0, "aria-labelledby": g5, disabled: o14.disabled, onClick: T8, onKeyDown: l12 };
  return C({ ourProps: v6, theirProps: c14, slot: f15, defaultTag: at, name: "Combobox.Button" });
}
var it = "label";
function ut(t18, r9) {
  let o14 = I(), { id: a12 = `headlessui-combobox-label-${o14}`, ...i9 } = t18, u12 = j2("Combobox.Label"), p7 = ee("Combobox.Label"), c14 = y3(u12.labelRef, r9);
  l(() => p7.registerLabel(a12), [a12]);
  let e4 = o2(() => {
    var g5;
    return (g5 = u12.inputRef.current) == null ? void 0 : g5.focus({ preventScroll: true });
  }), l12 = (0, import_react71.useMemo)(() => ({ open: u12.comboboxState === 0, disabled: u12.disabled }), [u12]);
  return C({ ourProps: { ref: c14, id: a12, onClick: e4 }, theirProps: i9, slot: l12, defaultTag: it, name: "Combobox.Label" });
}
var pt = "ul";
var st = O2.RenderStrategy | O2.Static;
function dt(t18, r9) {
  let o14 = I(), { id: a12 = `headlessui-combobox-options-${o14}`, hold: i9 = false, ...u12 } = t18, p7 = j2("Combobox.Options"), c14 = y3(p7.optionsRef, r9), e4 = u4(), l12 = (() => e4 !== null ? (e4 & d5.Open) === d5.Open : p7.comboboxState === 0)();
  l(() => {
    var v6;
    p7.optionsPropsRef.current.static = (v6 = t18.static) != null ? v6 : false;
  }, [p7.optionsPropsRef, t18.static]), l(() => {
    p7.optionsPropsRef.current.hold = i9;
  }, [p7.optionsPropsRef, i9]), F2({ container: p7.optionsRef.current, enabled: p7.comboboxState === 0, accept(v6) {
    return v6.getAttribute("role") === "option" ? NodeFilter.FILTER_REJECT : v6.hasAttribute("role") ? NodeFilter.FILTER_SKIP : NodeFilter.FILTER_ACCEPT;
  }, walk(v6) {
    v6.setAttribute("role", "none");
  } });
  let T8 = i2(() => {
    var v6, S9;
    return (S9 = p7.labelId) != null ? S9 : (v6 = p7.buttonRef.current) == null ? void 0 : v6.id;
  }, [p7.labelId, p7.buttonRef.current]), g5 = (0, import_react71.useMemo)(() => ({ open: p7.comboboxState === 0, option: void 0 }), [p7]), f15 = { "aria-labelledby": T8, role: "listbox", "aria-multiselectable": p7.mode === 1 ? true : void 0, id: a12, ref: c14 };
  return p7.virtual && p7.comboboxState === 0 && Object.assign(u12, { children: import_react71.default.createElement(Ze, null, u12.children) }), C({ ourProps: f15, theirProps: u12, slot: g5, defaultTag: pt, features: st, visible: l12, name: "Combobox.Options" });
}
var bt = "li";
function ct(t18, r9) {
  var X6;
  let o14 = I(), { id: a12 = `headlessui-combobox-option-${o14}`, disabled: i9 = false, value: u12, order: p7 = null, ...c14 } = t18, e4 = j2("Combobox.Option"), l12 = ee("Combobox.Option"), T8 = e4.virtual ? e4.activeOptionIndex === e4.calculateIndex(u12) : e4.activeOptionIndex === null ? false : ((X6 = e4.options[e4.activeOptionIndex]) == null ? void 0 : X6.id) === a12, g5 = e4.isSelected(u12), f15 = (0, import_react71.useRef)(null), v6 = s2({ disabled: i9, value: u12, domRef: f15, order: p7 }), S9 = (0, import_react71.useContext)(Ce), R5 = y3(r9, f15, S9 ? S9.measureElement : null), s18 = o2(() => l12.onChange(u12));
  l(() => l12.registerOption(a12, v6), [v6, a12]);
  let I10 = (0, import_react71.useRef)(!(e4.virtual || e4.__demoMode));
  l(() => {
    if (!e4.virtual || !e4.__demoMode)
      return;
    let x4 = o4();
    return x4.requestAnimationFrame(() => {
      I10.current = true;
    }), x4.dispose;
  }, [e4.virtual, e4.__demoMode]), l(() => {
    if (!I10.current || e4.comboboxState !== 0 || !T8 || e4.activationTrigger === 0)
      return;
    let x4 = o4();
    return x4.requestAnimationFrame(() => {
      var O4, L2;
      (L2 = (O4 = f15.current) == null ? void 0 : O4.scrollIntoView) == null || L2.call(O4, { block: "nearest" });
    }), x4.dispose;
  }, [f15, T8, e4.comboboxState, e4.activationTrigger, e4.activeOptionIndex]);
  let V5 = o2((x4) => {
    var O4;
    if (i9 || (O4 = e4.virtual) != null && O4.disabled(u12))
      return x4.preventDefault();
    s18(), n() || requestAnimationFrame(() => {
      var L2;
      return (L2 = e4.inputRef.current) == null ? void 0 : L2.focus({ preventScroll: true });
    }), e4.mode === 0 && requestAnimationFrame(() => l12.closeCombobox());
  }), _5 = o2(() => {
    var O4;
    if (i9 || (O4 = e4.virtual) != null && O4.disabled(u12))
      return l12.goToOption(c4.Nothing);
    let x4 = e4.calculateIndex(u12);
    l12.goToOption(c4.Specific, x4);
  }), E9 = u3(), k4 = o2((x4) => E9.update(x4)), J6 = o2((x4) => {
    var L2;
    if (!E9.wasMoved(x4) || i9 || (L2 = e4.virtual) != null && L2.disabled(u12) || T8)
      return;
    let O4 = e4.calculateIndex(u12);
    l12.goToOption(c4.Specific, O4, 0);
  }), K6 = o2((x4) => {
    var O4;
    E9.wasMoved(x4) && (i9 || (O4 = e4.virtual) != null && O4.disabled(u12) || T8 && (e4.optionsPropsRef.current.hold || l12.goToOption(c4.Nothing)));
  }), z5 = (0, import_react71.useMemo)(() => ({ active: T8, selected: g5, disabled: i9 }), [T8, g5, i9]);
  return C({ ourProps: { id: a12, ref: R5, role: "option", tabIndex: i9 === true ? void 0 : -1, "aria-disabled": i9 === true ? true : void 0, "aria-selected": g5, disabled: void 0, onClick: V5, onFocus: _5, onPointerEnter: k4, onMouseEnter: k4, onPointerMove: J6, onMouseMove: J6, onPointerLeave: K6, onMouseLeave: K6 }, theirProps: c14, slot: z5, defaultTag: bt, name: "Combobox.Option" });
}
var ft = U(ot);
var mt = U(lt);
var Tt = U(rt);
var xt = U(ut);
var gt = U(dt);
var vt = U(ct);
var qt = Object.assign(ft, { Input: Tt, Button: mt, Label: xt, Options: gt, Option: vt });

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/components/dialog/dialog.js
var import_react82 = __toESM(require_react(), 1);

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/components/focus-trap/focus-trap.js
var import_react76 = __toESM(require_react(), 1);

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-event-listener.js
var import_react72 = __toESM(require_react(), 1);
function E3(n7, e4, a12, t18) {
  let i9 = s2(a12);
  (0, import_react72.useEffect)(() => {
    n7 = n7 != null ? n7 : window;
    function r9(o14) {
      i9.current(o14);
    }
    return n7.addEventListener(e4, r9, t18), () => n7.removeEventListener(e4, r9, t18);
  }, [n7, e4, t18]);
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-is-mounted.js
var import_react73 = __toESM(require_react(), 1);
function f8() {
  let e4 = (0, import_react73.useRef)(false);
  return l(() => (e4.current = true, () => {
    e4.current = false;
  }), []), e4;
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-on-unmount.js
var import_react74 = __toESM(require_react(), 1);
function c5(t18) {
  let r9 = o2(t18), e4 = (0, import_react74.useRef)(false);
  (0, import_react74.useEffect)(() => (e4.current = false, () => {
    e4.current = true, t3(() => {
      e4.current && r9();
    });
  }), [r9]);
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-tab-direction.js
var import_react75 = __toESM(require_react(), 1);
var s10 = ((r9) => (r9[r9.Forwards = 0] = "Forwards", r9[r9.Backwards = 1] = "Backwards", r9))(s10 || {});
function n5() {
  let e4 = (0, import_react75.useRef)(0);
  return s6("keydown", (o14) => {
    o14.key === "Tab" && (e4.current = o14.shiftKey ? 1 : 0);
  }, true), e4;
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/components/focus-trap/focus-trap.js
function P2(t18) {
  if (!t18)
    return /* @__PURE__ */ new Set();
  if (typeof t18 == "function")
    return new Set(t18());
  let n7 = /* @__PURE__ */ new Set();
  for (let e4 of t18.current)
    e4.current instanceof HTMLElement && n7.add(e4.current);
  return n7;
}
var X = "div";
var _2 = ((r9) => (r9[r9.None = 1] = "None", r9[r9.InitialFocus = 2] = "InitialFocus", r9[r9.TabLock = 4] = "TabLock", r9[r9.FocusLock = 8] = "FocusLock", r9[r9.RestoreFocus = 16] = "RestoreFocus", r9[r9.All = 30] = "All", r9))(_2 || {});
function z(t18, n7) {
  let e4 = (0, import_react76.useRef)(null), o14 = y3(e4, n7), { initialFocus: l12, containers: c14, features: r9 = 30, ...s18 } = t18;
  l2() || (r9 = 1);
  let i9 = n2(e4);
  Y({ ownerDocument: i9 }, Boolean(r9 & 16));
  let u12 = Z({ ownerDocument: i9, container: e4, initialFocus: l12 }, Boolean(r9 & 2));
  $({ ownerDocument: i9, container: e4, containers: c14, previousActiveElement: u12 }, Boolean(r9 & 8));
  let y7 = n5(), R5 = o2((a12) => {
    let m13 = e4.current;
    if (!m13)
      return;
    ((B4) => B4())(() => {
      u(y7.current, { [s10.Forwards]: () => {
        O(m13, M.First, { skipElements: [a12.relatedTarget] });
      }, [s10.Backwards]: () => {
        O(m13, M.Last, { skipElements: [a12.relatedTarget] });
      } });
    });
  }), h10 = p(), H6 = (0, import_react76.useRef)(false), j6 = { ref: o14, onKeyDown(a12) {
    a12.key == "Tab" && (H6.current = true, h10.requestAnimationFrame(() => {
      H6.current = false;
    }));
  }, onBlur(a12) {
    let m13 = P2(c14);
    e4.current instanceof HTMLElement && m13.add(e4.current);
    let T8 = a12.relatedTarget;
    T8 instanceof HTMLElement && T8.dataset.headlessuiFocusGuard !== "true" && (S3(m13, T8) || (H6.current ? O(e4.current, u(y7.current, { [s10.Forwards]: () => M.Next, [s10.Backwards]: () => M.Previous }) | M.WrapAround, { relativeTo: a12.target }) : a12.target instanceof HTMLElement && y(a12.target)));
  } };
  return import_react76.default.createElement(import_react76.default.Fragment, null, Boolean(r9 & 4) && import_react76.default.createElement(f5, { as: "button", type: "button", "data-headlessui-focus-guard": true, onFocus: R5, features: s8.Focusable }), C({ ourProps: j6, theirProps: s18, defaultTag: X, name: "FocusTrap" }), Boolean(r9 & 4) && import_react76.default.createElement(f5, { as: "button", type: "button", "data-headlessui-focus-guard": true, onFocus: R5, features: s8.Focusable }));
}
var D2 = U(z);
var de2 = Object.assign(D2, { features: _2 });
function Q(t18 = true) {
  let n7 = (0, import_react76.useRef)(t12.slice());
  return m4(([e4], [o14]) => {
    o14 === true && e4 === false && t3(() => {
      n7.current.splice(0);
    }), o14 === false && e4 === true && (n7.current = t12.slice());
  }, [t18, t12, n7]), o2(() => {
    var e4;
    return (e4 = n7.current.find((o14) => o14 != null && o14.isConnected)) != null ? e4 : null;
  });
}
function Y({ ownerDocument: t18 }, n7) {
  let e4 = Q(n7);
  m4(() => {
    n7 || (t18 == null ? void 0 : t18.activeElement) === (t18 == null ? void 0 : t18.body) && y(e4());
  }, [n7]), c5(() => {
    n7 && y(e4());
  });
}
function Z({ ownerDocument: t18, container: n7, initialFocus: e4 }, o14) {
  let l12 = (0, import_react76.useRef)(null), c14 = f8();
  return m4(() => {
    if (!o14)
      return;
    let r9 = n7.current;
    r9 && t3(() => {
      if (!c14.current)
        return;
      let s18 = t18 == null ? void 0 : t18.activeElement;
      if (e4 != null && e4.current) {
        if ((e4 == null ? void 0 : e4.current) === s18) {
          l12.current = s18;
          return;
        }
      } else if (r9.contains(s18)) {
        l12.current = s18;
        return;
      }
      e4 != null && e4.current ? y(e4.current) : O(r9, M.First) === N.Error && console.warn("There are no focusable elements inside the <FocusTrap />"), l12.current = t18 == null ? void 0 : t18.activeElement;
    });
  }, [o14]), l12;
}
function $({ ownerDocument: t18, container: n7, containers: e4, previousActiveElement: o14 }, l12) {
  let c14 = f8();
  E3(t18 == null ? void 0 : t18.defaultView, "focus", (r9) => {
    if (!l12 || !c14.current)
      return;
    let s18 = P2(e4);
    n7.current instanceof HTMLElement && s18.add(n7.current);
    let i9 = o14.current;
    if (!i9)
      return;
    let u12 = r9.target;
    u12 && u12 instanceof HTMLElement ? S3(s18, u12) ? (o14.current = u12, y(u12)) : (r9.preventDefault(), r9.stopPropagation(), y(i9)) : y(o14.current);
  }, true);
}
function S3(t18, n7) {
  for (let e4 of t18)
    if (e4.contains(n7))
      return true;
  return false;
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/components/portal/portal.js
var import_react78 = __toESM(require_react(), 1);
var import_react_dom2 = __toESM(require_react_dom(), 1);

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/internal/portal-force-root.js
var import_react77 = __toESM(require_react(), 1);
var e2 = (0, import_react77.createContext)(false);
function a3() {
  return (0, import_react77.useContext)(e2);
}
function l6(o14) {
  return import_react77.default.createElement(e2.Provider, { value: o14.force }, o14.children);
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/components/portal/portal.js
function F4(p7) {
  let n7 = a3(), l12 = (0, import_react78.useContext)(_3), e4 = n2(p7), [a12, o14] = (0, import_react78.useState)(() => {
    if (!n7 && l12 !== null || s.isServer)
      return null;
    let t18 = e4 == null ? void 0 : e4.getElementById("headlessui-portal-root");
    if (t18)
      return t18;
    if (e4 === null)
      return null;
    let r9 = e4.createElement("div");
    return r9.setAttribute("id", "headlessui-portal-root"), e4.body.appendChild(r9);
  });
  return (0, import_react78.useEffect)(() => {
    a12 !== null && (e4 != null && e4.body.contains(a12) || e4 == null || e4.body.appendChild(a12));
  }, [a12, e4]), (0, import_react78.useEffect)(() => {
    n7 || l12 !== null && o14(l12.current);
  }, [l12, o14, n7]), a12;
}
var U3 = import_react78.Fragment;
function N3(p7, n7) {
  let l12 = p7, e4 = (0, import_react78.useRef)(null), a12 = y3(T4((u12) => {
    e4.current = u12;
  }), n7), o14 = n2(e4), t18 = F4(e4), [r9] = (0, import_react78.useState)(() => {
    var u12;
    return s.isServer ? null : (u12 = o14 == null ? void 0 : o14.createElement("div")) != null ? u12 : null;
  }), i9 = (0, import_react78.useContext)(f9), v6 = l2();
  return l(() => {
    !t18 || !r9 || t18.contains(r9) || (r9.setAttribute("data-headlessui-portal", ""), t18.appendChild(r9));
  }, [t18, r9]), l(() => {
    if (r9 && i9)
      return i9.register(r9);
  }, [i9, r9]), c5(() => {
    var u12;
    !t18 || !r9 || (r9 instanceof Node && t18.contains(r9) && t18.removeChild(r9), t18.childNodes.length <= 0 && ((u12 = t18.parentElement) == null || u12.removeChild(t18)));
  }), v6 ? !t18 || !r9 ? null : (0, import_react_dom2.createPortal)(C({ ourProps: { ref: a12 }, theirProps: l12, defaultTag: U3, name: "Portal" }), r9) : null;
}
var S4 = import_react78.Fragment;
var _3 = (0, import_react78.createContext)(null);
function j3(p7, n7) {
  let { target: l12, ...e4 } = p7, o14 = { ref: y3(n7) };
  return import_react78.default.createElement(_3.Provider, { value: l12 }, C({ ourProps: o14, theirProps: e4, defaultTag: S4, name: "Popover.Group" }));
}
var f9 = (0, import_react78.createContext)(null);
function ee2() {
  let p7 = (0, import_react78.useContext)(f9), n7 = (0, import_react78.useRef)([]), l12 = o2((o14) => (n7.current.push(o14), p7 && p7.register(o14), () => e4(o14))), e4 = o2((o14) => {
    let t18 = n7.current.indexOf(o14);
    t18 !== -1 && n7.current.splice(t18, 1), p7 && p7.unregister(o14);
  }), a12 = (0, import_react78.useMemo)(() => ({ register: l12, unregister: e4, portals: n7 }), [l12, e4, n7]);
  return [n7, (0, import_react78.useMemo)(() => function({ children: t18 }) {
    return import_react78.default.createElement(f9.Provider, { value: a12 }, t18);
  }, [a12])];
}
var D3 = U(N3);
var I4 = U(j3);
var te = Object.assign(D3, { Group: I4 });

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/use-sync-external-store-shim/index.js
var e3 = __toESM(require_react(), 1);

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/use-sync-external-store-shim/useSyncExternalStoreShimClient.js
var l7 = __toESM(require_react(), 1);
function i7(e4, t18) {
  return e4 === t18 && (e4 !== 0 || 1 / e4 === 1 / t18) || e4 !== e4 && t18 !== t18;
}
var d9 = typeof Object.is == "function" ? Object.is : i7;
var { useState: u7, useEffect: h3, useLayoutEffect: f10, useDebugValue: p5 } = l7;
function y4(e4, t18, c14) {
  const a12 = t18(), [{ inst: n7 }, o14] = u7({ inst: { value: a12, getSnapshot: t18 } });
  return f10(() => {
    n7.value = a12, n7.getSnapshot = t18, r5(n7) && o14({ inst: n7 });
  }, [e4, a12, t18]), h3(() => (r5(n7) && o14({ inst: n7 }), e4(() => {
    r5(n7) && o14({ inst: n7 });
  })), [e4]), p5(a12), a12;
}
function r5(e4) {
  const t18 = e4.getSnapshot, c14 = e4.value;
  try {
    const a12 = t18();
    return !d9(c14, a12);
  } catch {
    return true;
  }
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/use-sync-external-store-shim/useSyncExternalStoreShimServer.js
function t15(r9, e4, n7) {
  return e4();
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/use-sync-external-store-shim/index.js
var r6 = typeof window != "undefined" && typeof window.document != "undefined" && typeof window.document.createElement != "undefined";
var s12 = !r6;
var c7 = s12 ? t15 : y4;
var a4 = "useSyncExternalStore" in e3 ? ((n7) => n7.useSyncExternalStore)(e3) : c7;

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-store.js
function S5(t18) {
  return a4(t18.subscribe, t18.getSnapshot, t18.getSnapshot);
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/utils/store.js
function a5(o14, r9) {
  let t18 = o14(), n7 = /* @__PURE__ */ new Set();
  return { getSnapshot() {
    return t18;
  }, subscribe(e4) {
    return n7.add(e4), () => n7.delete(e4);
  }, dispatch(e4, ...s18) {
    let i9 = r9[e4].call(t18, ...s18);
    i9 && (t18 = i9, n7.forEach((c14) => c14()));
  } };
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/document-overflow/adjust-scrollbar-padding.js
function c8() {
  let o14;
  return { before({ doc: e4 }) {
    var l12;
    let n7 = e4.documentElement;
    o14 = ((l12 = e4.defaultView) != null ? l12 : window).innerWidth - n7.clientWidth;
  }, after({ doc: e4, d: n7 }) {
    let t18 = e4.documentElement, l12 = t18.clientWidth - t18.offsetWidth, r9 = o14 - l12;
    n7.style(t18, "paddingRight", `${r9}px`);
  } };
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/document-overflow/handle-ios-locking.js
function d10() {
  return t6() ? { before({ doc: r9, d: l12, meta: c14 }) {
    function o14(a12) {
      return c14.containers.flatMap((n7) => n7()).some((n7) => n7.contains(a12));
    }
    l12.microTask(() => {
      var s18;
      if (window.getComputedStyle(r9.documentElement).scrollBehavior !== "auto") {
        let t18 = o4();
        t18.style(r9.documentElement, "scrollBehavior", "auto"), l12.add(() => l12.microTask(() => t18.dispose()));
      }
      let a12 = (s18 = window.scrollY) != null ? s18 : window.pageYOffset, n7 = null;
      l12.addEventListener(r9, "click", (t18) => {
        if (t18.target instanceof HTMLElement)
          try {
            let e4 = t18.target.closest("a");
            if (!e4)
              return;
            let { hash: f15 } = new URL(e4.href), i9 = r9.querySelector(f15);
            i9 && !o14(i9) && (n7 = i9);
          } catch {
          }
      }, true), l12.addEventListener(r9, "touchstart", (t18) => {
        if (t18.target instanceof HTMLElement)
          if (o14(t18.target)) {
            let e4 = t18.target;
            for (; e4.parentElement && o14(e4.parentElement); )
              e4 = e4.parentElement;
            l12.style(e4, "overscrollBehavior", "contain");
          } else
            l12.style(t18.target, "touchAction", "none");
      }), l12.addEventListener(r9, "touchmove", (t18) => {
        if (t18.target instanceof HTMLElement)
          if (o14(t18.target)) {
            let e4 = t18.target;
            for (; e4.parentElement && e4.dataset.headlessuiPortal !== "" && !(e4.scrollHeight > e4.clientHeight || e4.scrollWidth > e4.clientWidth); )
              e4 = e4.parentElement;
            e4.dataset.headlessuiPortal === "" && t18.preventDefault();
          } else
            t18.preventDefault();
      }, { passive: false }), l12.add(() => {
        var e4;
        let t18 = (e4 = window.scrollY) != null ? e4 : window.pageYOffset;
        a12 !== t18 && window.scrollTo(0, a12), n7 && n7.isConnected && (n7.scrollIntoView({ block: "nearest" }), n7 = null);
      });
    });
  } } : {};
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/document-overflow/prevent-scroll.js
function l8() {
  return { before({ doc: e4, d: o14 }) {
    o14.style(e4.documentElement, "overflow", "hidden");
  } };
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/document-overflow/overflow-store.js
function m7(e4) {
  let n7 = {};
  for (let t18 of e4)
    Object.assign(n7, t18(n7));
  return n7;
}
var a6 = a5(() => /* @__PURE__ */ new Map(), { PUSH(e4, n7) {
  var o14;
  let t18 = (o14 = this.get(e4)) != null ? o14 : { doc: e4, count: 0, d: o4(), meta: /* @__PURE__ */ new Set() };
  return t18.count++, t18.meta.add(n7), this.set(e4, t18), this;
}, POP(e4, n7) {
  let t18 = this.get(e4);
  return t18 && (t18.count--, t18.meta.delete(n7)), this;
}, SCROLL_PREVENT({ doc: e4, d: n7, meta: t18 }) {
  let o14 = { doc: e4, d: n7, meta: m7(t18) }, c14 = [d10(), c8(), l8()];
  c14.forEach(({ before: r9 }) => r9 == null ? void 0 : r9(o14)), c14.forEach(({ after: r9 }) => r9 == null ? void 0 : r9(o14));
}, SCROLL_ALLOW({ d: e4 }) {
  e4.dispose();
}, TEARDOWN({ doc: e4 }) {
  this.delete(e4);
} });
a6.subscribe(() => {
  let e4 = a6.getSnapshot(), n7 = /* @__PURE__ */ new Map();
  for (let [t18] of e4)
    n7.set(t18, t18.documentElement.style.overflow);
  for (let t18 of e4.values()) {
    let o14 = n7.get(t18.doc) === "hidden", c14 = t18.count !== 0;
    (c14 && !o14 || !c14 && o14) && a6.dispatch(t18.count > 0 ? "SCROLL_PREVENT" : "SCROLL_ALLOW", t18), t18.count === 0 && a6.dispatch("TEARDOWN", t18);
  }
});

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/document-overflow/use-document-overflow.js
function p6(e4, r9, n7) {
  let f15 = S5(a6), o14 = e4 ? f15.get(e4) : void 0, i9 = o14 ? o14.count > 0 : false;
  return l(() => {
    if (!(!e4 || !r9))
      return a6.dispatch("PUSH", e4, n7), () => a6.dispatch("POP", e4, n7);
  }, [r9, e4]), i9;
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-inert.js
var u8 = /* @__PURE__ */ new Map();
var t16 = /* @__PURE__ */ new Map();
function b2(r9, l12 = true) {
  l(() => {
    var o14;
    if (!l12)
      return;
    let e4 = typeof r9 == "function" ? r9() : r9.current;
    if (!e4)
      return;
    function a12() {
      var d16;
      if (!e4)
        return;
      let i9 = (d16 = t16.get(e4)) != null ? d16 : 1;
      if (i9 === 1 ? t16.delete(e4) : t16.set(e4, i9 - 1), i9 !== 1)
        return;
      let n7 = u8.get(e4);
      n7 && (n7["aria-hidden"] === null ? e4.removeAttribute("aria-hidden") : e4.setAttribute("aria-hidden", n7["aria-hidden"]), e4.inert = n7.inert, u8.delete(e4));
    }
    let f15 = (o14 = t16.get(e4)) != null ? o14 : 0;
    return t16.set(e4, f15 + 1), f15 !== 0 || (u8.set(e4, { "aria-hidden": e4.getAttribute("aria-hidden"), inert: e4.inert }), e4.setAttribute("aria-hidden", "true"), e4.inert = true), a12;
  }, [r9, l12]);
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-root-containers.js
var import_react79 = __toESM(require_react(), 1);
function N4({ defaultContainers: o14 = [], portals: r9, mainTreeNodeRef: u12 } = {}) {
  var f15;
  let t18 = (0, import_react79.useRef)((f15 = u12 == null ? void 0 : u12.current) != null ? f15 : null), l12 = n2(t18), c14 = o2(() => {
    var i9, s18, a12;
    let n7 = [];
    for (let e4 of o14)
      e4 !== null && (e4 instanceof HTMLElement ? n7.push(e4) : "current" in e4 && e4.current instanceof HTMLElement && n7.push(e4.current));
    if (r9 != null && r9.current)
      for (let e4 of r9.current)
        n7.push(e4);
    for (let e4 of (i9 = l12 == null ? void 0 : l12.querySelectorAll("html > *, body > *")) != null ? i9 : [])
      e4 !== document.body && e4 !== document.head && e4 instanceof HTMLElement && e4.id !== "headlessui-portal-root" && (e4.contains(t18.current) || e4.contains((a12 = (s18 = t18.current) == null ? void 0 : s18.getRootNode()) == null ? void 0 : a12.host) || n7.some((L2) => e4.contains(L2)) || n7.push(e4));
    return n7;
  });
  return { resolveContainers: c14, contains: o2((n7) => c14().some((i9) => i9.contains(n7))), mainTreeNodeRef: t18, MainTreeNode: (0, import_react79.useMemo)(() => function() {
    return u12 != null ? null : import_react79.default.createElement(f5, { features: s8.Hidden, ref: t18 });
  }, [t18, u12]) };
}
function y5() {
  let o14 = (0, import_react79.useRef)(null);
  return { mainTreeNodeRef: o14, MainTreeNode: (0, import_react79.useMemo)(() => function() {
    return import_react79.default.createElement(f5, { features: s8.Hidden, ref: o14 });
  }, [o14]) };
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/internal/stack-context.js
var import_react80 = __toESM(require_react(), 1);
var a7 = (0, import_react80.createContext)(() => {
});
a7.displayName = "StackContext";
var s13 = ((e4) => (e4[e4.Add = 0] = "Add", e4[e4.Remove = 1] = "Remove", e4))(s13 || {});
function x2() {
  return (0, import_react80.useContext)(a7);
}
function b3({ children: i9, onUpdate: r9, type: e4, element: n7, enabled: u12 }) {
  let l12 = x2(), o14 = o2((...t18) => {
    r9 == null || r9(...t18), l12(...t18);
  });
  return l(() => {
    let t18 = u12 === void 0 || u12 === true;
    return t18 && o14(0, e4, n7), () => {
      t18 && o14(1, e4, n7);
    };
  }, [o14, e4, n7, u12]), import_react80.default.createElement(a7.Provider, { value: o14 }, i9);
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/components/description/description.js
var import_react81 = __toESM(require_react(), 1);
var d13 = (0, import_react81.createContext)(null);
function f11() {
  let r9 = (0, import_react81.useContext)(d13);
  if (r9 === null) {
    let t18 = new Error("You used a <Description /> component, but it is not inside a relevant parent.");
    throw Error.captureStackTrace && Error.captureStackTrace(t18, f11), t18;
  }
  return r9;
}
function w3() {
  let [r9, t18] = (0, import_react81.useState)([]);
  return [r9.length > 0 ? r9.join(" ") : void 0, (0, import_react81.useMemo)(() => function(e4) {
    let i9 = o2((s18) => (t18((o14) => [...o14, s18]), () => t18((o14) => {
      let p7 = o14.slice(), c14 = p7.indexOf(s18);
      return c14 !== -1 && p7.splice(c14, 1), p7;
    }))), n7 = (0, import_react81.useMemo)(() => ({ register: i9, slot: e4.slot, name: e4.name, props: e4.props }), [i9, e4.slot, e4.name, e4.props]);
    return import_react81.default.createElement(d13.Provider, { value: n7 }, e4.children);
  }, [t18])];
}
var I5 = "p";
function S6(r9, t18) {
  let a12 = I(), { id: e4 = `headlessui-description-${a12}`, ...i9 } = r9, n7 = f11(), s18 = y3(t18);
  l(() => n7.register(e4), [e4, n7.register]);
  let o14 = { ref: s18, ...n7.props, id: e4 };
  return C({ ourProps: o14, theirProps: i9, slot: n7.slot || {}, defaultTag: I5, name: n7.name || "Description" });
}
var h4 = U(S6);
var G = Object.assign(h4, {});

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/components/dialog/dialog.js
var Me = ((r9) => (r9[r9.Open = 0] = "Open", r9[r9.Closed = 1] = "Closed", r9))(Me || {});
var we = ((e4) => (e4[e4.SetTitleId = 0] = "SetTitleId", e4))(we || {});
var He = { [0](t18, e4) {
  return t18.titleId === e4.id ? t18 : { ...t18, titleId: e4.id };
} };
var I6 = (0, import_react82.createContext)(null);
I6.displayName = "DialogContext";
function b4(t18) {
  let e4 = (0, import_react82.useContext)(I6);
  if (e4 === null) {
    let r9 = new Error(`<${t18} /> is missing a parent <Dialog /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(r9, b4), r9;
  }
  return e4;
}
function Be(t18, e4, r9 = () => [document.body]) {
  p6(t18, e4, (i9) => {
    var n7;
    return { containers: [...(n7 = i9.containers) != null ? n7 : [], r9] };
  });
}
function Ge(t18, e4) {
  return u(e4.type, He, t18, e4);
}
var Ne = "div";
var Ue = O2.RenderStrategy | O2.Static;
function We(t18, e4) {
  let r9 = I(), { id: i9 = `headlessui-dialog-${r9}`, open: n7, onClose: l12, initialFocus: s18, role: a12 = "dialog", __demoMode: T8 = false, ...m13 } = t18, [M8, f15] = (0, import_react82.useState)(0), U6 = (0, import_react82.useRef)(false);
  a12 = function() {
    return a12 === "dialog" || a12 === "alertdialog" ? a12 : (U6.current || (U6.current = true, console.warn(`Invalid role [${a12}] passed to <Dialog />. Only \`dialog\` and and \`alertdialog\` are supported. Using \`dialog\` instead.`)), "dialog");
  }();
  let E9 = u4();
  n7 === void 0 && E9 !== null && (n7 = (E9 & d5.Open) === d5.Open);
  let D7 = (0, import_react82.useRef)(null), ee9 = y3(D7, e4), g5 = n2(D7), W = t18.hasOwnProperty("open") || E9 !== null, $7 = t18.hasOwnProperty("onClose");
  if (!W && !$7)
    throw new Error("You have to provide an `open` and an `onClose` prop to the `Dialog` component.");
  if (!W)
    throw new Error("You provided an `onClose` prop to the `Dialog`, but forgot an `open` prop.");
  if (!$7)
    throw new Error("You provided an `open` prop to the `Dialog`, but forgot an `onClose` prop.");
  if (typeof n7 != "boolean")
    throw new Error(`You provided an \`open\` prop to the \`Dialog\`, but the value is not a boolean. Received: ${n7}`);
  if (typeof l12 != "function")
    throw new Error(`You provided an \`onClose\` prop to the \`Dialog\`, but the value is not a function. Received: ${l12}`);
  let p7 = n7 ? 0 : 1, [h10, te6] = (0, import_react82.useReducer)(Ge, { titleId: null, descriptionId: null, panelRef: (0, import_react82.createRef)() }), P5 = o2(() => l12(false)), Y4 = o2((o14) => te6({ type: 0, id: o14 })), S9 = l2() ? T8 ? false : p7 === 0 : false, x4 = M8 > 1, j6 = (0, import_react82.useContext)(I6) !== null, [oe4, re6] = ee2(), ne6 = { get current() {
    var o14;
    return (o14 = h10.panelRef.current) != null ? o14 : D7.current;
  } }, { resolveContainers: w6, mainTreeNodeRef: L2, MainTreeNode: le4 } = N4({ portals: oe4, defaultContainers: [ne6] }), ae4 = x4 ? "parent" : "leaf", J6 = E9 !== null ? (E9 & d5.Closing) === d5.Closing : false, ie5 = (() => j6 || J6 ? false : S9)(), se5 = (0, import_react82.useCallback)(() => {
    var o14, c14;
    return (c14 = Array.from((o14 = g5 == null ? void 0 : g5.querySelectorAll("body > *")) != null ? o14 : []).find((d16) => d16.id === "headlessui-portal-root" ? false : d16.contains(L2.current) && d16 instanceof HTMLElement)) != null ? c14 : null;
  }, [L2]);
  b2(se5, ie5);
  let pe3 = (() => x4 ? true : S9)(), de7 = (0, import_react82.useCallback)(() => {
    var o14, c14;
    return (c14 = Array.from((o14 = g5 == null ? void 0 : g5.querySelectorAll("[data-headlessui-portal]")) != null ? o14 : []).find((d16) => d16.contains(L2.current) && d16 instanceof HTMLElement)) != null ? c14 : null;
  }, [L2]);
  b2(de7, pe3);
  let ue8 = (() => !(!S9 || x4))();
  y2(w6, P5, ue8);
  let fe5 = (() => !(x4 || p7 !== 0))();
  E3(g5 == null ? void 0 : g5.defaultView, "keydown", (o14) => {
    fe5 && (o14.defaultPrevented || o14.key === o11.Escape && (o14.preventDefault(), o14.stopPropagation(), P5()));
  });
  let ge5 = (() => !(J6 || p7 !== 0 || j6))();
  Be(g5, ge5, w6), (0, import_react82.useEffect)(() => {
    if (p7 !== 0 || !D7.current)
      return;
    let o14 = new ResizeObserver((c14) => {
      for (let d16 of c14) {
        let F9 = d16.target.getBoundingClientRect();
        F9.x === 0 && F9.y === 0 && F9.width === 0 && F9.height === 0 && P5();
      }
    });
    return o14.observe(D7.current), () => o14.disconnect();
  }, [p7, D7, P5]);
  let [Te4, ce5] = w3(), De5 = (0, import_react82.useMemo)(() => [{ dialogState: p7, close: P5, setTitleId: Y4 }, h10], [p7, h10, P5, Y4]), X6 = (0, import_react82.useMemo)(() => ({ open: p7 === 0 }), [p7]), me5 = { ref: ee9, id: i9, role: a12, "aria-modal": p7 === 0 ? true : void 0, "aria-labelledby": h10.titleId, "aria-describedby": Te4 };
  return import_react82.default.createElement(b3, { type: "Dialog", enabled: p7 === 0, element: D7, onUpdate: o2((o14, c14) => {
    c14 === "Dialog" && u(o14, { [s13.Add]: () => f15((d16) => d16 + 1), [s13.Remove]: () => f15((d16) => d16 - 1) });
  }) }, import_react82.default.createElement(l6, { force: true }, import_react82.default.createElement(te, null, import_react82.default.createElement(I6.Provider, { value: De5 }, import_react82.default.createElement(te.Group, { target: D7 }, import_react82.default.createElement(l6, { force: false }, import_react82.default.createElement(ce5, { slot: X6, name: "Dialog.Description" }, import_react82.default.createElement(de2, { initialFocus: s18, containers: w6, features: S9 ? u(ae4, { parent: de2.features.RestoreFocus, leaf: de2.features.All & ~de2.features.FocusLock }) : de2.features.None }, import_react82.default.createElement(re6, null, C({ ourProps: me5, theirProps: m13, slot: X6, defaultTag: Ne, features: Ue, visible: p7 === 0, name: "Dialog" }))))))))), import_react82.default.createElement(le4, null));
}
var $e2 = "div";
function Ye2(t18, e4) {
  let r9 = I(), { id: i9 = `headlessui-dialog-overlay-${r9}`, ...n7 } = t18, [{ dialogState: l12, close: s18 }] = b4("Dialog.Overlay"), a12 = y3(e4), T8 = o2((f15) => {
    if (f15.target === f15.currentTarget) {
      if (r2(f15.currentTarget))
        return f15.preventDefault();
      f15.preventDefault(), f15.stopPropagation(), s18();
    }
  }), m13 = (0, import_react82.useMemo)(() => ({ open: l12 === 0 }), [l12]);
  return C({ ourProps: { ref: a12, id: i9, "aria-hidden": true, onClick: T8 }, theirProps: n7, slot: m13, defaultTag: $e2, name: "Dialog.Overlay" });
}
var je = "div";
function Je(t18, e4) {
  let r9 = I(), { id: i9 = `headlessui-dialog-backdrop-${r9}`, ...n7 } = t18, [{ dialogState: l12 }, s18] = b4("Dialog.Backdrop"), a12 = y3(e4);
  (0, import_react82.useEffect)(() => {
    if (s18.panelRef.current === null)
      throw new Error("A <Dialog.Backdrop /> component is being used, but a <Dialog.Panel /> component is missing.");
  }, [s18.panelRef]);
  let T8 = (0, import_react82.useMemo)(() => ({ open: l12 === 0 }), [l12]);
  return import_react82.default.createElement(l6, { force: true }, import_react82.default.createElement(te, null, C({ ourProps: { ref: a12, id: i9, "aria-hidden": true }, theirProps: n7, slot: T8, defaultTag: je, name: "Dialog.Backdrop" })));
}
var Xe = "div";
function Ke(t18, e4) {
  let r9 = I(), { id: i9 = `headlessui-dialog-panel-${r9}`, ...n7 } = t18, [{ dialogState: l12 }, s18] = b4("Dialog.Panel"), a12 = y3(e4, s18.panelRef), T8 = (0, import_react82.useMemo)(() => ({ open: l12 === 0 }), [l12]), m13 = o2((f15) => {
    f15.stopPropagation();
  });
  return C({ ourProps: { ref: a12, id: i9, onClick: m13 }, theirProps: n7, slot: T8, defaultTag: Xe, name: "Dialog.Panel" });
}
var Ve2 = "h2";
function qe2(t18, e4) {
  let r9 = I(), { id: i9 = `headlessui-dialog-title-${r9}`, ...n7 } = t18, [{ dialogState: l12, setTitleId: s18 }] = b4("Dialog.Title"), a12 = y3(e4);
  (0, import_react82.useEffect)(() => (s18(i9), () => s18(null)), [i9, s18]);
  let T8 = (0, import_react82.useMemo)(() => ({ open: l12 === 0 }), [l12]);
  return C({ ourProps: { ref: a12, id: i9 }, theirProps: n7, slot: T8, defaultTag: Ve2, name: "Dialog.Title" });
}
var ze2 = U(We);
var Qe2 = U(Je);
var Ze2 = U(Ke);
var et2 = U(Ye2);
var tt2 = U(qe2);
var _t = Object.assign(ze2, { Backdrop: Qe2, Panel: Ze2, Overlay: et2, Title: tt2, Description: G });

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/components/disclosure/disclosure.js
var import_react84 = __toESM(require_react(), 1);

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/utils/start-transition.js
var import_react83 = __toESM(require_react(), 1);
var t17;
var a8 = (t17 = import_react83.default.startTransition) != null ? t17 : function(i9) {
  i9();
};

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/components/disclosure/disclosure.js
var Q2 = ((o14) => (o14[o14.Open = 0] = "Open", o14[o14.Closed = 1] = "Closed", o14))(Q2 || {});
var V2 = ((t18) => (t18[t18.ToggleDisclosure = 0] = "ToggleDisclosure", t18[t18.CloseDisclosure = 1] = "CloseDisclosure", t18[t18.SetButtonId = 2] = "SetButtonId", t18[t18.SetPanelId = 3] = "SetPanelId", t18[t18.LinkPanel = 4] = "LinkPanel", t18[t18.UnlinkPanel = 5] = "UnlinkPanel", t18))(V2 || {});
var Y2 = { [0]: (e4) => ({ ...e4, disclosureState: u(e4.disclosureState, { [0]: 1, [1]: 0 }) }), [1]: (e4) => e4.disclosureState === 1 ? e4 : { ...e4, disclosureState: 1 }, [4](e4) {
  return e4.linkedPanel === true ? e4 : { ...e4, linkedPanel: true };
}, [5](e4) {
  return e4.linkedPanel === false ? e4 : { ...e4, linkedPanel: false };
}, [2](e4, n7) {
  return e4.buttonId === n7.buttonId ? e4 : { ...e4, buttonId: n7.buttonId };
}, [3](e4, n7) {
  return e4.panelId === n7.panelId ? e4 : { ...e4, panelId: n7.panelId };
} };
var M3 = (0, import_react84.createContext)(null);
M3.displayName = "DisclosureContext";
function _4(e4) {
  let n7 = (0, import_react84.useContext)(M3);
  if (n7 === null) {
    let o14 = new Error(`<${e4} /> is missing a parent <Disclosure /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(o14, _4), o14;
  }
  return n7;
}
var v2 = (0, import_react84.createContext)(null);
v2.displayName = "DisclosureAPIContext";
function K2(e4) {
  let n7 = (0, import_react84.useContext)(v2);
  if (n7 === null) {
    let o14 = new Error(`<${e4} /> is missing a parent <Disclosure /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(o14, K2), o14;
  }
  return n7;
}
var F5 = (0, import_react84.createContext)(null);
F5.displayName = "DisclosurePanelContext";
function Z2() {
  return (0, import_react84.useContext)(F5);
}
function ee3(e4, n7) {
  return u(n7.type, Y2, e4, n7);
}
var te2 = import_react84.Fragment;
function ne(e4, n7) {
  let { defaultOpen: o14 = false, ...i9 } = e4, f15 = (0, import_react84.useRef)(null), l12 = y3(n7, T4((u12) => {
    f15.current = u12;
  }, e4.as === void 0 || e4.as === import_react84.Fragment)), t18 = (0, import_react84.useRef)(null), d16 = (0, import_react84.useRef)(null), s18 = (0, import_react84.useReducer)(ee3, { disclosureState: o14 ? 0 : 1, linkedPanel: false, buttonRef: d16, panelRef: t18, buttonId: null, panelId: null }), [{ disclosureState: c14, buttonId: a12 }, D7] = s18, p7 = o2((u12) => {
    D7({ type: 1 });
    let y7 = o7(f15);
    if (!y7 || !a12)
      return;
    let r9 = (() => u12 ? u12 instanceof HTMLElement ? u12 : u12.current instanceof HTMLElement ? u12.current : y7.getElementById(a12) : y7.getElementById(a12))();
    r9 == null || r9.focus();
  }), P5 = (0, import_react84.useMemo)(() => ({ close: p7 }), [p7]), T8 = (0, import_react84.useMemo)(() => ({ open: c14 === 0, close: p7 }), [c14, p7]), C7 = { ref: l12 };
  return import_react84.default.createElement(M3.Provider, { value: s18 }, import_react84.default.createElement(v2.Provider, { value: P5 }, import_react84.default.createElement(s9, { value: u(c14, { [0]: d5.Open, [1]: d5.Closed }) }, C({ ourProps: C7, theirProps: i9, slot: T8, defaultTag: te2, name: "Disclosure" }))));
}
var le = "button";
function oe(e4, n7) {
  let o14 = I(), { id: i9 = `headlessui-disclosure-button-${o14}`, ...f15 } = e4, [l12, t18] = _4("Disclosure.Button"), d16 = Z2(), s18 = d16 === null ? false : d16 === l12.panelId, c14 = (0, import_react84.useRef)(null), a12 = y3(c14, n7, s18 ? null : l12.buttonRef), D7 = I3();
  (0, import_react84.useEffect)(() => {
    if (!s18)
      return t18({ type: 2, buttonId: i9 }), () => {
        t18({ type: 2, buttonId: null });
      };
  }, [i9, t18, s18]);
  let p7 = o2((r9) => {
    var m13;
    if (s18) {
      if (l12.disclosureState === 1)
        return;
      switch (r9.key) {
        case o11.Space:
        case o11.Enter:
          r9.preventDefault(), r9.stopPropagation(), t18({ type: 0 }), (m13 = l12.buttonRef.current) == null || m13.focus();
          break;
      }
    } else
      switch (r9.key) {
        case o11.Space:
        case o11.Enter:
          r9.preventDefault(), r9.stopPropagation(), t18({ type: 0 });
          break;
      }
  }), P5 = o2((r9) => {
    switch (r9.key) {
      case o11.Space:
        r9.preventDefault();
        break;
    }
  }), T8 = o2((r9) => {
    var m13;
    r2(r9.currentTarget) || e4.disabled || (s18 ? (t18({ type: 0 }), (m13 = l12.buttonRef.current) == null || m13.focus()) : t18({ type: 0 }));
  }), C7 = (0, import_react84.useMemo)(() => ({ open: l12.disclosureState === 0 }), [l12]), u12 = T3(e4, c14), y7 = s18 ? { ref: a12, type: u12, onKeyDown: p7, onClick: T8 } : { ref: a12, id: i9, type: u12, "aria-expanded": l12.disclosureState === 0, "aria-controls": l12.linkedPanel ? l12.panelId : void 0, onKeyDown: p7, onKeyUp: P5, onClick: T8 };
  return C({ mergeRefs: D7, ourProps: y7, theirProps: f15, slot: C7, defaultTag: le, name: "Disclosure.Button" });
}
var re = "div";
var se = O2.RenderStrategy | O2.Static;
function ue2(e4, n7) {
  let o14 = I(), { id: i9 = `headlessui-disclosure-panel-${o14}`, ...f15 } = e4, [l12, t18] = _4("Disclosure.Panel"), { close: d16 } = K2("Disclosure.Panel"), s18 = I3(), c14 = y3(n7, l12.panelRef, (T8) => {
    a8(() => t18({ type: T8 ? 4 : 5 }));
  });
  (0, import_react84.useEffect)(() => (t18({ type: 3, panelId: i9 }), () => {
    t18({ type: 3, panelId: null });
  }), [i9, t18]);
  let a12 = u4(), D7 = (() => a12 !== null ? (a12 & d5.Open) === d5.Open : l12.disclosureState === 0)(), p7 = (0, import_react84.useMemo)(() => ({ open: l12.disclosureState === 0, close: d16 }), [l12, d16]), P5 = { ref: c14, id: i9 };
  return import_react84.default.createElement(F5.Provider, { value: l12.panelId }, C({ mergeRefs: s18, ourProps: P5, theirProps: f15, slot: p7, defaultTag: re, features: se, visible: D7, name: "Disclosure.Panel" }));
}
var ie2 = U(ne);
var ae = U(oe);
var pe = U(ue2);
var Ae2 = Object.assign(ie2, { Button: ae, Panel: pe });

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/components/listbox/listbox.js
var import_react86 = __toESM(require_react(), 1);

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-text-value.js
var import_react85 = __toESM(require_react(), 1);

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/utils/get-text-value.js
var a9 = /([\u2700-\u27BF]|[\uE000-\uF8FF]|\uD83C[\uDC00-\uDFFF]|\uD83D[\uDC00-\uDFFF]|[\u2011-\u26FF]|\uD83E[\uDD10-\uDDFF])/g;
function o12(e4) {
  var r9, i9;
  let n7 = (r9 = e4.innerText) != null ? r9 : "", t18 = e4.cloneNode(true);
  if (!(t18 instanceof HTMLElement))
    return n7;
  let u12 = false;
  for (let f15 of t18.querySelectorAll('[hidden],[aria-hidden],[role="img"]'))
    f15.remove(), u12 = true;
  let l12 = u12 ? (i9 = t18.innerText) != null ? i9 : "" : n7;
  return a9.test(l12) && (l12 = l12.replace(a9, "")), l12;
}
function g3(e4) {
  let n7 = e4.getAttribute("aria-label");
  if (typeof n7 == "string")
    return n7.trim();
  let t18 = e4.getAttribute("aria-labelledby");
  if (t18) {
    let u12 = t18.split(" ").map((l12) => {
      let r9 = document.getElementById(l12);
      if (r9) {
        let i9 = r9.getAttribute("aria-label");
        return typeof i9 == "string" ? i9.trim() : o12(r9).trim();
      }
      return null;
    }).filter(Boolean);
    if (u12.length > 0)
      return u12.join(", ");
  }
  return o12(e4).trim();
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-text-value.js
function s14(c14) {
  let t18 = (0, import_react85.useRef)(""), r9 = (0, import_react85.useRef)("");
  return o2(() => {
    let e4 = c14.current;
    if (!e4)
      return "";
    let u12 = e4.innerText;
    if (t18.current === u12)
      return r9.current;
    let n7 = g3(e4).trim().toLowerCase();
    return t18.current = u12, r9.current = n7, n7;
  });
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/components/listbox/listbox.js
var Be2 = ((n7) => (n7[n7.Open = 0] = "Open", n7[n7.Closed = 1] = "Closed", n7))(Be2 || {});
var He2 = ((n7) => (n7[n7.Single = 0] = "Single", n7[n7.Multi = 1] = "Multi", n7))(He2 || {});
var Ge2 = ((n7) => (n7[n7.Pointer = 0] = "Pointer", n7[n7.Other = 1] = "Other", n7))(Ge2 || {});
var Ne2 = ((i9) => (i9[i9.OpenListbox = 0] = "OpenListbox", i9[i9.CloseListbox = 1] = "CloseListbox", i9[i9.GoToOption = 2] = "GoToOption", i9[i9.Search = 3] = "Search", i9[i9.ClearSearch = 4] = "ClearSearch", i9[i9.RegisterOption = 5] = "RegisterOption", i9[i9.UnregisterOption = 6] = "UnregisterOption", i9[i9.RegisterLabel = 7] = "RegisterLabel", i9))(Ne2 || {});
function z2(e4, a12 = (n7) => n7) {
  let n7 = e4.activeOptionIndex !== null ? e4.options[e4.activeOptionIndex] : null, r9 = I2(a12(e4.options.slice()), (t18) => t18.dataRef.current.domRef.current), l12 = n7 ? r9.indexOf(n7) : null;
  return l12 === -1 && (l12 = null), { options: r9, activeOptionIndex: l12 };
}
var je2 = { [1](e4) {
  return e4.dataRef.current.disabled || e4.listboxState === 1 ? e4 : { ...e4, activeOptionIndex: null, listboxState: 1 };
}, [0](e4) {
  if (e4.dataRef.current.disabled || e4.listboxState === 0)
    return e4;
  let a12 = e4.activeOptionIndex, { isSelected: n7 } = e4.dataRef.current, r9 = e4.options.findIndex((l12) => n7(l12.dataRef.current.value));
  return r9 !== -1 && (a12 = r9), { ...e4, listboxState: 0, activeOptionIndex: a12 };
}, [2](e4, a12) {
  var l12;
  if (e4.dataRef.current.disabled || e4.listboxState === 1)
    return e4;
  let n7 = z2(e4), r9 = f6(a12, { resolveItems: () => n7.options, resolveActiveIndex: () => n7.activeOptionIndex, resolveId: (t18) => t18.id, resolveDisabled: (t18) => t18.dataRef.current.disabled });
  return { ...e4, ...n7, searchQuery: "", activeOptionIndex: r9, activationTrigger: (l12 = a12.trigger) != null ? l12 : 1 };
}, [3]: (e4, a12) => {
  if (e4.dataRef.current.disabled || e4.listboxState === 1)
    return e4;
  let r9 = e4.searchQuery !== "" ? 0 : 1, l12 = e4.searchQuery + a12.value.toLowerCase(), p7 = (e4.activeOptionIndex !== null ? e4.options.slice(e4.activeOptionIndex + r9).concat(e4.options.slice(0, e4.activeOptionIndex + r9)) : e4.options).find((i9) => {
    var b9;
    return !i9.dataRef.current.disabled && ((b9 = i9.dataRef.current.textValue) == null ? void 0 : b9.startsWith(l12));
  }), u12 = p7 ? e4.options.indexOf(p7) : -1;
  return u12 === -1 || u12 === e4.activeOptionIndex ? { ...e4, searchQuery: l12 } : { ...e4, searchQuery: l12, activeOptionIndex: u12, activationTrigger: 1 };
}, [4](e4) {
  return e4.dataRef.current.disabled || e4.listboxState === 1 || e4.searchQuery === "" ? e4 : { ...e4, searchQuery: "" };
}, [5]: (e4, a12) => {
  let n7 = { id: a12.id, dataRef: a12.dataRef }, r9 = z2(e4, (l12) => [...l12, n7]);
  return e4.activeOptionIndex === null && e4.dataRef.current.isSelected(a12.dataRef.current.value) && (r9.activeOptionIndex = r9.options.indexOf(n7)), { ...e4, ...r9 };
}, [6]: (e4, a12) => {
  let n7 = z2(e4, (r9) => {
    let l12 = r9.findIndex((t18) => t18.id === a12.id);
    return l12 !== -1 && r9.splice(l12, 1), r9;
  });
  return { ...e4, ...n7, activationTrigger: 1 };
}, [7]: (e4, a12) => ({ ...e4, labelId: a12.id }) };
var J = (0, import_react86.createContext)(null);
J.displayName = "ListboxActionsContext";
function k2(e4) {
  let a12 = (0, import_react86.useContext)(J);
  if (a12 === null) {
    let n7 = new Error(`<${e4} /> is missing a parent <Listbox /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(n7, k2), n7;
  }
  return a12;
}
var q2 = (0, import_react86.createContext)(null);
q2.displayName = "ListboxDataContext";
function w4(e4) {
  let a12 = (0, import_react86.useContext)(q2);
  if (a12 === null) {
    let n7 = new Error(`<${e4} /> is missing a parent <Listbox /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(n7, w4), n7;
  }
  return a12;
}
function Ve3(e4, a12) {
  return u(a12.type, je2, e4, a12);
}
var Ke2 = import_react86.Fragment;
function Qe3(e4, a12) {
  let { value: n7, defaultValue: r9, form: l12, name: t18, onChange: p7, by: u12 = (s18, c14) => s18 === c14, disabled: i9 = false, horizontal: b9 = false, multiple: R5 = false, ...m13 } = e4;
  const P5 = b9 ? "horizontal" : "vertical";
  let S9 = y3(a12), [g5 = R5 ? [] : void 0, x4] = T(n7, p7, r9), [T8, o14] = (0, import_react86.useReducer)(Ve3, { dataRef: (0, import_react86.createRef)(), listboxState: 1, options: [], searchQuery: "", labelId: null, activeOptionIndex: null, activationTrigger: 1 }), L2 = (0, import_react86.useRef)({ static: false, hold: false }), U6 = (0, import_react86.useRef)(null), B4 = (0, import_react86.useRef)(null), W = (0, import_react86.useRef)(null), I10 = o2(typeof u12 == "string" ? (s18, c14) => {
    let O4 = u12;
    return (s18 == null ? void 0 : s18[O4]) === (c14 == null ? void 0 : c14[O4]);
  } : u12), A4 = (0, import_react86.useCallback)((s18) => u(d16.mode, { [1]: () => g5.some((c14) => I10(c14, s18)), [0]: () => I10(g5, s18) }), [g5]), d16 = (0, import_react86.useMemo)(() => ({ ...T8, value: g5, disabled: i9, mode: R5 ? 1 : 0, orientation: P5, compare: I10, isSelected: A4, optionsPropsRef: L2, labelRef: U6, buttonRef: B4, optionsRef: W }), [g5, i9, R5, T8]);
  l(() => {
    T8.dataRef.current = d16;
  }, [d16]), y2([d16.buttonRef, d16.optionsRef], (s18, c14) => {
    var O4;
    o14({ type: 1 }), h(c14, T2.Loose) || (s18.preventDefault(), (O4 = d16.buttonRef.current) == null || O4.focus());
  }, d16.listboxState === 0);
  let H6 = (0, import_react86.useMemo)(() => ({ open: d16.listboxState === 0, disabled: i9, value: g5 }), [d16, i9, g5]), ie5 = o2((s18) => {
    let c14 = d16.options.find((O4) => O4.id === s18);
    c14 && X6(c14.dataRef.current.value);
  }), re6 = o2(() => {
    if (d16.activeOptionIndex !== null) {
      let { dataRef: s18, id: c14 } = d16.options[d16.activeOptionIndex];
      X6(s18.current.value), o14({ type: 2, focus: c4.Specific, id: c14 });
    }
  }), ae4 = o2(() => o14({ type: 0 })), le4 = o2(() => o14({ type: 1 })), se5 = o2((s18, c14, O4) => s18 === c4.Specific ? o14({ type: 2, focus: c4.Specific, id: c14, trigger: O4 }) : o14({ type: 2, focus: s18, trigger: O4 })), pe3 = o2((s18, c14) => (o14({ type: 5, id: s18, dataRef: c14 }), () => o14({ type: 6, id: s18 }))), ue8 = o2((s18) => (o14({ type: 7, id: s18 }), () => o14({ type: 7, id: null }))), X6 = o2((s18) => u(d16.mode, { [0]() {
    return x4 == null ? void 0 : x4(s18);
  }, [1]() {
    let c14 = d16.value.slice(), O4 = c14.findIndex((C7) => I10(C7, s18));
    return O4 === -1 ? c14.push(s18) : c14.splice(O4, 1), x4 == null ? void 0 : x4(c14);
  } })), de7 = o2((s18) => o14({ type: 3, value: s18 })), ce5 = o2(() => o14({ type: 4 })), fe5 = (0, import_react86.useMemo)(() => ({ onChange: X6, registerOption: pe3, registerLabel: ue8, goToOption: se5, closeListbox: le4, openListbox: ae4, selectActiveOption: re6, selectOption: ie5, search: de7, clearSearch: ce5 }), []), Te4 = { ref: S9 }, G4 = (0, import_react86.useRef)(null), be5 = p();
  return (0, import_react86.useEffect)(() => {
    G4.current && r9 !== void 0 && be5.addEventListener(G4.current, "reset", () => {
      x4 == null || x4(r9);
    });
  }, [G4, x4]), import_react86.default.createElement(J.Provider, { value: fe5 }, import_react86.default.createElement(q2.Provider, { value: d16 }, import_react86.default.createElement(s9, { value: u(d16.listboxState, { [0]: d5.Open, [1]: d5.Closed }) }, t18 != null && g5 != null && e({ [t18]: g5 }).map(([s18, c14], O4) => import_react86.default.createElement(f5, { features: s8.Hidden, ref: O4 === 0 ? (C7) => {
    var Y4;
    G4.current = (Y4 = C7 == null ? void 0 : C7.closest("form")) != null ? Y4 : null;
  } : void 0, ...x({ key: s18, as: "input", type: "hidden", hidden: true, readOnly: true, form: l12, name: s18, value: c14 }) })), C({ ourProps: Te4, theirProps: m13, slot: H6, defaultTag: Ke2, name: "Listbox" }))));
}
var We2 = "button";
function Xe2(e4, a12) {
  var x4;
  let n7 = I(), { id: r9 = `headlessui-listbox-button-${n7}`, ...l12 } = e4, t18 = w4("Listbox.Button"), p7 = k2("Listbox.Button"), u12 = y3(t18.buttonRef, a12), i9 = p(), b9 = o2((T8) => {
    switch (T8.key) {
      case o11.Space:
      case o11.Enter:
      case o11.ArrowDown:
        T8.preventDefault(), p7.openListbox(), i9.nextFrame(() => {
          t18.value || p7.goToOption(c4.First);
        });
        break;
      case o11.ArrowUp:
        T8.preventDefault(), p7.openListbox(), i9.nextFrame(() => {
          t18.value || p7.goToOption(c4.Last);
        });
        break;
    }
  }), R5 = o2((T8) => {
    switch (T8.key) {
      case o11.Space:
        T8.preventDefault();
        break;
    }
  }), m13 = o2((T8) => {
    if (r2(T8.currentTarget))
      return T8.preventDefault();
    t18.listboxState === 0 ? (p7.closeListbox(), i9.nextFrame(() => {
      var o14;
      return (o14 = t18.buttonRef.current) == null ? void 0 : o14.focus({ preventScroll: true });
    })) : (T8.preventDefault(), p7.openListbox());
  }), P5 = i2(() => {
    if (t18.labelId)
      return [t18.labelId, r9].join(" ");
  }, [t18.labelId, r9]), S9 = (0, import_react86.useMemo)(() => ({ open: t18.listboxState === 0, disabled: t18.disabled, value: t18.value }), [t18]), g5 = { ref: u12, id: r9, type: T3(e4, t18.buttonRef), "aria-haspopup": "listbox", "aria-controls": (x4 = t18.optionsRef.current) == null ? void 0 : x4.id, "aria-expanded": t18.listboxState === 0, "aria-labelledby": P5, disabled: t18.disabled, onKeyDown: b9, onKeyUp: R5, onClick: m13 };
  return C({ ourProps: g5, theirProps: l12, slot: S9, defaultTag: We2, name: "Listbox.Button" });
}
var $e3 = "label";
function ze3(e4, a12) {
  let n7 = I(), { id: r9 = `headlessui-listbox-label-${n7}`, ...l12 } = e4, t18 = w4("Listbox.Label"), p7 = k2("Listbox.Label"), u12 = y3(t18.labelRef, a12);
  l(() => p7.registerLabel(r9), [r9]);
  let i9 = o2(() => {
    var m13;
    return (m13 = t18.buttonRef.current) == null ? void 0 : m13.focus({ preventScroll: true });
  }), b9 = (0, import_react86.useMemo)(() => ({ open: t18.listboxState === 0, disabled: t18.disabled }), [t18]);
  return C({ ourProps: { ref: u12, id: r9, onClick: i9 }, theirProps: l12, slot: b9, defaultTag: $e3, name: "Listbox.Label" });
}
var Je2 = "ul";
var qe3 = O2.RenderStrategy | O2.Static;
function Ye3(e4, a12) {
  var T8;
  let n7 = I(), { id: r9 = `headlessui-listbox-options-${n7}`, ...l12 } = e4, t18 = w4("Listbox.Options"), p7 = k2("Listbox.Options"), u12 = y3(t18.optionsRef, a12), i9 = p(), b9 = p(), R5 = u4(), m13 = (() => R5 !== null ? (R5 & d5.Open) === d5.Open : t18.listboxState === 0)();
  (0, import_react86.useEffect)(() => {
    var L2;
    let o14 = t18.optionsRef.current;
    o14 && t18.listboxState === 0 && o14 !== ((L2 = o7(o14)) == null ? void 0 : L2.activeElement) && o14.focus({ preventScroll: true });
  }, [t18.listboxState, t18.optionsRef]);
  let P5 = o2((o14) => {
    switch (b9.dispose(), o14.key) {
      case o11.Space:
        if (t18.searchQuery !== "")
          return o14.preventDefault(), o14.stopPropagation(), p7.search(o14.key);
      case o11.Enter:
        if (o14.preventDefault(), o14.stopPropagation(), t18.activeOptionIndex !== null) {
          let { dataRef: L2 } = t18.options[t18.activeOptionIndex];
          p7.onChange(L2.current.value);
        }
        t18.mode === 0 && (p7.closeListbox(), o4().nextFrame(() => {
          var L2;
          return (L2 = t18.buttonRef.current) == null ? void 0 : L2.focus({ preventScroll: true });
        }));
        break;
      case u(t18.orientation, { vertical: o11.ArrowDown, horizontal: o11.ArrowRight }):
        return o14.preventDefault(), o14.stopPropagation(), p7.goToOption(c4.Next);
      case u(t18.orientation, { vertical: o11.ArrowUp, horizontal: o11.ArrowLeft }):
        return o14.preventDefault(), o14.stopPropagation(), p7.goToOption(c4.Previous);
      case o11.Home:
      case o11.PageUp:
        return o14.preventDefault(), o14.stopPropagation(), p7.goToOption(c4.First);
      case o11.End:
      case o11.PageDown:
        return o14.preventDefault(), o14.stopPropagation(), p7.goToOption(c4.Last);
      case o11.Escape:
        return o14.preventDefault(), o14.stopPropagation(), p7.closeListbox(), i9.nextFrame(() => {
          var L2;
          return (L2 = t18.buttonRef.current) == null ? void 0 : L2.focus({ preventScroll: true });
        });
      case o11.Tab:
        o14.preventDefault(), o14.stopPropagation();
        break;
      default:
        o14.key.length === 1 && (p7.search(o14.key), b9.setTimeout(() => p7.clearSearch(), 350));
        break;
    }
  }), S9 = i2(() => {
    var o14;
    return (o14 = t18.buttonRef.current) == null ? void 0 : o14.id;
  }, [t18.buttonRef.current]), g5 = (0, import_react86.useMemo)(() => ({ open: t18.listboxState === 0 }), [t18]), x4 = { "aria-activedescendant": t18.activeOptionIndex === null || (T8 = t18.options[t18.activeOptionIndex]) == null ? void 0 : T8.id, "aria-multiselectable": t18.mode === 1 ? true : void 0, "aria-labelledby": S9, "aria-orientation": t18.orientation, id: r9, onKeyDown: P5, role: "listbox", tabIndex: 0, ref: u12 };
  return C({ ourProps: x4, theirProps: l12, slot: g5, defaultTag: Je2, features: qe3, visible: m13, name: "Listbox.Options" });
}
var Ze3 = "li";
function et3(e4, a12) {
  let n7 = I(), { id: r9 = `headlessui-listbox-option-${n7}`, disabled: l12 = false, value: t18, ...p7 } = e4, u12 = w4("Listbox.Option"), i9 = k2("Listbox.Option"), b9 = u12.activeOptionIndex !== null ? u12.options[u12.activeOptionIndex].id === r9 : false, R5 = u12.isSelected(t18), m13 = (0, import_react86.useRef)(null), P5 = s14(m13), S9 = s2({ disabled: l12, value: t18, domRef: m13, get textValue() {
    return P5();
  } }), g5 = y3(a12, m13);
  l(() => {
    if (u12.listboxState !== 0 || !b9 || u12.activationTrigger === 0)
      return;
    let A4 = o4();
    return A4.requestAnimationFrame(() => {
      var d16, H6;
      (H6 = (d16 = m13.current) == null ? void 0 : d16.scrollIntoView) == null || H6.call(d16, { block: "nearest" });
    }), A4.dispose;
  }, [m13, b9, u12.listboxState, u12.activationTrigger, u12.activeOptionIndex]), l(() => i9.registerOption(r9, S9), [S9, r9]);
  let x4 = o2((A4) => {
    if (l12)
      return A4.preventDefault();
    i9.onChange(t18), u12.mode === 0 && (i9.closeListbox(), o4().nextFrame(() => {
      var d16;
      return (d16 = u12.buttonRef.current) == null ? void 0 : d16.focus({ preventScroll: true });
    }));
  }), T8 = o2(() => {
    if (l12)
      return i9.goToOption(c4.Nothing);
    i9.goToOption(c4.Specific, r9);
  }), o14 = u3(), L2 = o2((A4) => o14.update(A4)), U6 = o2((A4) => {
    o14.wasMoved(A4) && (l12 || b9 || i9.goToOption(c4.Specific, r9, 0));
  }), B4 = o2((A4) => {
    o14.wasMoved(A4) && (l12 || b9 && i9.goToOption(c4.Nothing));
  }), W = (0, import_react86.useMemo)(() => ({ active: b9, selected: R5, disabled: l12 }), [b9, R5, l12]);
  return C({ ourProps: { id: r9, ref: g5, role: "option", tabIndex: l12 === true ? void 0 : -1, "aria-disabled": l12 === true ? true : void 0, "aria-selected": R5, disabled: void 0, onClick: x4, onFocus: T8, onPointerEnter: L2, onMouseEnter: L2, onPointerMove: U6, onMouseMove: U6, onPointerLeave: B4, onMouseLeave: B4 }, theirProps: p7, slot: W, defaultTag: Ze3, name: "Listbox.Option" });
}
var tt3 = U(Qe3);
var ot2 = U(Xe2);
var nt2 = U(ze3);
var it2 = U(Ye3);
var rt2 = U(et3);
var It = Object.assign(tt3, { Button: ot2, Label: nt2, Options: it2, Option: rt2 });

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/components/menu/menu.js
var import_react87 = __toESM(require_react(), 1);
var me2 = ((r9) => (r9[r9.Open = 0] = "Open", r9[r9.Closed = 1] = "Closed", r9))(me2 || {});
var de3 = ((r9) => (r9[r9.Pointer = 0] = "Pointer", r9[r9.Other = 1] = "Other", r9))(de3 || {});
var fe = ((a12) => (a12[a12.OpenMenu = 0] = "OpenMenu", a12[a12.CloseMenu = 1] = "CloseMenu", a12[a12.GoToItem = 2] = "GoToItem", a12[a12.Search = 3] = "Search", a12[a12.ClearSearch = 4] = "ClearSearch", a12[a12.RegisterItem = 5] = "RegisterItem", a12[a12.UnregisterItem = 6] = "UnregisterItem", a12))(fe || {});
function w5(e4, u12 = (r9) => r9) {
  let r9 = e4.activeItemIndex !== null ? e4.items[e4.activeItemIndex] : null, s18 = I2(u12(e4.items.slice()), (t18) => t18.dataRef.current.domRef.current), i9 = r9 ? s18.indexOf(r9) : null;
  return i9 === -1 && (i9 = null), { items: s18, activeItemIndex: i9 };
}
var Te = { [1](e4) {
  return e4.menuState === 1 ? e4 : { ...e4, activeItemIndex: null, menuState: 1 };
}, [0](e4) {
  return e4.menuState === 0 ? e4 : { ...e4, __demoMode: false, menuState: 0 };
}, [2]: (e4, u12) => {
  var i9;
  let r9 = w5(e4), s18 = f6(u12, { resolveItems: () => r9.items, resolveActiveIndex: () => r9.activeItemIndex, resolveId: (t18) => t18.id, resolveDisabled: (t18) => t18.dataRef.current.disabled });
  return { ...e4, ...r9, searchQuery: "", activeItemIndex: s18, activationTrigger: (i9 = u12.trigger) != null ? i9 : 1 };
}, [3]: (e4, u12) => {
  let s18 = e4.searchQuery !== "" ? 0 : 1, i9 = e4.searchQuery + u12.value.toLowerCase(), o14 = (e4.activeItemIndex !== null ? e4.items.slice(e4.activeItemIndex + s18).concat(e4.items.slice(0, e4.activeItemIndex + s18)) : e4.items).find((l12) => {
    var m13;
    return ((m13 = l12.dataRef.current.textValue) == null ? void 0 : m13.startsWith(i9)) && !l12.dataRef.current.disabled;
  }), a12 = o14 ? e4.items.indexOf(o14) : -1;
  return a12 === -1 || a12 === e4.activeItemIndex ? { ...e4, searchQuery: i9 } : { ...e4, searchQuery: i9, activeItemIndex: a12, activationTrigger: 1 };
}, [4](e4) {
  return e4.searchQuery === "" ? e4 : { ...e4, searchQuery: "", searchActiveItemIndex: null };
}, [5]: (e4, u12) => {
  let r9 = w5(e4, (s18) => [...s18, { id: u12.id, dataRef: u12.dataRef }]);
  return { ...e4, ...r9 };
}, [6]: (e4, u12) => {
  let r9 = w5(e4, (s18) => {
    let i9 = s18.findIndex((t18) => t18.id === u12.id);
    return i9 !== -1 && s18.splice(i9, 1), s18;
  });
  return { ...e4, ...r9, activationTrigger: 1 };
} };
var U4 = (0, import_react87.createContext)(null);
U4.displayName = "MenuContext";
function C3(e4) {
  let u12 = (0, import_react87.useContext)(U4);
  if (u12 === null) {
    let r9 = new Error(`<${e4} /> is missing a parent <Menu /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(r9, C3), r9;
  }
  return u12;
}
function ye3(e4, u12) {
  return u(u12.type, Te, e4, u12);
}
var Ie2 = import_react87.Fragment;
function Me2(e4, u12) {
  let { __demoMode: r9 = false, ...s18 } = e4, i9 = (0, import_react87.useReducer)(ye3, { __demoMode: r9, menuState: r9 ? 0 : 1, buttonRef: (0, import_react87.createRef)(), itemsRef: (0, import_react87.createRef)(), items: [], searchQuery: "", activeItemIndex: null, activationTrigger: 1 }), [{ menuState: t18, itemsRef: o14, buttonRef: a12 }, l12] = i9, m13 = y3(u12);
  y2([a12, o14], (g5, R5) => {
    var p7;
    l12({ type: 1 }), h(R5, T2.Loose) || (g5.preventDefault(), (p7 = a12.current) == null || p7.focus());
  }, t18 === 0);
  let I10 = o2(() => {
    l12({ type: 1 });
  }), A4 = (0, import_react87.useMemo)(() => ({ open: t18 === 0, close: I10 }), [t18, I10]), f15 = { ref: m13 };
  return import_react87.default.createElement(U4.Provider, { value: i9 }, import_react87.default.createElement(s9, { value: u(t18, { [0]: d5.Open, [1]: d5.Closed }) }, C({ ourProps: f15, theirProps: s18, slot: A4, defaultTag: Ie2, name: "Menu" })));
}
var ge2 = "button";
function Re(e4, u12) {
  var R5;
  let r9 = I(), { id: s18 = `headlessui-menu-button-${r9}`, ...i9 } = e4, [t18, o14] = C3("Menu.Button"), a12 = y3(t18.buttonRef, u12), l12 = p(), m13 = o2((p7) => {
    switch (p7.key) {
      case o11.Space:
      case o11.Enter:
      case o11.ArrowDown:
        p7.preventDefault(), p7.stopPropagation(), o14({ type: 0 }), l12.nextFrame(() => o14({ type: 2, focus: c4.First }));
        break;
      case o11.ArrowUp:
        p7.preventDefault(), p7.stopPropagation(), o14({ type: 0 }), l12.nextFrame(() => o14({ type: 2, focus: c4.Last }));
        break;
    }
  }), I10 = o2((p7) => {
    switch (p7.key) {
      case o11.Space:
        p7.preventDefault();
        break;
    }
  }), A4 = o2((p7) => {
    if (r2(p7.currentTarget))
      return p7.preventDefault();
    e4.disabled || (t18.menuState === 0 ? (o14({ type: 1 }), l12.nextFrame(() => {
      var M8;
      return (M8 = t18.buttonRef.current) == null ? void 0 : M8.focus({ preventScroll: true });
    })) : (p7.preventDefault(), o14({ type: 0 })));
  }), f15 = (0, import_react87.useMemo)(() => ({ open: t18.menuState === 0 }), [t18]), g5 = { ref: a12, id: s18, type: T3(e4, t18.buttonRef), "aria-haspopup": "menu", "aria-controls": (R5 = t18.itemsRef.current) == null ? void 0 : R5.id, "aria-expanded": t18.menuState === 0, onKeyDown: m13, onKeyUp: I10, onClick: A4 };
  return C({ ourProps: g5, theirProps: i9, slot: f15, defaultTag: ge2, name: "Menu.Button" });
}
var Ae3 = "div";
var be2 = O2.RenderStrategy | O2.Static;
function Ee2(e4, u12) {
  var M8, b9;
  let r9 = I(), { id: s18 = `headlessui-menu-items-${r9}`, ...i9 } = e4, [t18, o14] = C3("Menu.Items"), a12 = y3(t18.itemsRef, u12), l12 = n2(t18.itemsRef), m13 = p(), I10 = u4(), A4 = (() => I10 !== null ? (I10 & d5.Open) === d5.Open : t18.menuState === 0)();
  (0, import_react87.useEffect)(() => {
    let n7 = t18.itemsRef.current;
    n7 && t18.menuState === 0 && n7 !== (l12 == null ? void 0 : l12.activeElement) && n7.focus({ preventScroll: true });
  }, [t18.menuState, t18.itemsRef, l12]), F2({ container: t18.itemsRef.current, enabled: t18.menuState === 0, accept(n7) {
    return n7.getAttribute("role") === "menuitem" ? NodeFilter.FILTER_REJECT : n7.hasAttribute("role") ? NodeFilter.FILTER_SKIP : NodeFilter.FILTER_ACCEPT;
  }, walk(n7) {
    n7.setAttribute("role", "none");
  } });
  let f15 = o2((n7) => {
    var E9, x4;
    switch (m13.dispose(), n7.key) {
      case o11.Space:
        if (t18.searchQuery !== "")
          return n7.preventDefault(), n7.stopPropagation(), o14({ type: 3, value: n7.key });
      case o11.Enter:
        if (n7.preventDefault(), n7.stopPropagation(), o14({ type: 1 }), t18.activeItemIndex !== null) {
          let { dataRef: S9 } = t18.items[t18.activeItemIndex];
          (x4 = (E9 = S9.current) == null ? void 0 : E9.domRef.current) == null || x4.click();
        }
        D(t18.buttonRef.current);
        break;
      case o11.ArrowDown:
        return n7.preventDefault(), n7.stopPropagation(), o14({ type: 2, focus: c4.Next });
      case o11.ArrowUp:
        return n7.preventDefault(), n7.stopPropagation(), o14({ type: 2, focus: c4.Previous });
      case o11.Home:
      case o11.PageUp:
        return n7.preventDefault(), n7.stopPropagation(), o14({ type: 2, focus: c4.First });
      case o11.End:
      case o11.PageDown:
        return n7.preventDefault(), n7.stopPropagation(), o14({ type: 2, focus: c4.Last });
      case o11.Escape:
        n7.preventDefault(), n7.stopPropagation(), o14({ type: 1 }), o4().nextFrame(() => {
          var S9;
          return (S9 = t18.buttonRef.current) == null ? void 0 : S9.focus({ preventScroll: true });
        });
        break;
      case o11.Tab:
        n7.preventDefault(), n7.stopPropagation(), o14({ type: 1 }), o4().nextFrame(() => {
          _(t18.buttonRef.current, n7.shiftKey ? M.Previous : M.Next);
        });
        break;
      default:
        n7.key.length === 1 && (o14({ type: 3, value: n7.key }), m13.setTimeout(() => o14({ type: 4 }), 350));
        break;
    }
  }), g5 = o2((n7) => {
    switch (n7.key) {
      case o11.Space:
        n7.preventDefault();
        break;
    }
  }), R5 = (0, import_react87.useMemo)(() => ({ open: t18.menuState === 0 }), [t18]), p7 = { "aria-activedescendant": t18.activeItemIndex === null || (M8 = t18.items[t18.activeItemIndex]) == null ? void 0 : M8.id, "aria-labelledby": (b9 = t18.buttonRef.current) == null ? void 0 : b9.id, id: s18, onKeyDown: f15, onKeyUp: g5, role: "menu", tabIndex: 0, ref: a12 };
  return C({ ourProps: p7, theirProps: i9, slot: R5, defaultTag: Ae3, features: be2, visible: A4, name: "Menu.Items" });
}
var Se = import_react87.Fragment;
function xe2(e4, u12) {
  let r9 = I(), { id: s18 = `headlessui-menu-item-${r9}`, disabled: i9 = false, ...t18 } = e4, [o14, a12] = C3("Menu.Item"), l12 = o14.activeItemIndex !== null ? o14.items[o14.activeItemIndex].id === s18 : false, m13 = (0, import_react87.useRef)(null), I10 = y3(u12, m13);
  l(() => {
    if (o14.__demoMode || o14.menuState !== 0 || !l12 || o14.activationTrigger === 0)
      return;
    let T8 = o4();
    return T8.requestAnimationFrame(() => {
      var P5, B4;
      (B4 = (P5 = m13.current) == null ? void 0 : P5.scrollIntoView) == null || B4.call(P5, { block: "nearest" });
    }), T8.dispose;
  }, [o14.__demoMode, m13, l12, o14.menuState, o14.activationTrigger, o14.activeItemIndex]);
  let A4 = s14(m13), f15 = (0, import_react87.useRef)({ disabled: i9, domRef: m13, get textValue() {
    return A4();
  } });
  l(() => {
    f15.current.disabled = i9;
  }, [f15, i9]), l(() => (a12({ type: 5, id: s18, dataRef: f15 }), () => a12({ type: 6, id: s18 })), [f15, s18]);
  let g5 = o2(() => {
    a12({ type: 1 });
  }), R5 = o2((T8) => {
    if (i9)
      return T8.preventDefault();
    a12({ type: 1 }), D(o14.buttonRef.current);
  }), p7 = o2(() => {
    if (i9)
      return a12({ type: 2, focus: c4.Nothing });
    a12({ type: 2, focus: c4.Specific, id: s18 });
  }), M8 = u3(), b9 = o2((T8) => M8.update(T8)), n7 = o2((T8) => {
    M8.wasMoved(T8) && (i9 || l12 || a12({ type: 2, focus: c4.Specific, id: s18, trigger: 0 }));
  }), E9 = o2((T8) => {
    M8.wasMoved(T8) && (i9 || l12 && a12({ type: 2, focus: c4.Nothing }));
  }), x4 = (0, import_react87.useMemo)(() => ({ active: l12, disabled: i9, close: g5 }), [l12, i9, g5]);
  return C({ ourProps: { id: s18, ref: I10, role: "menuitem", tabIndex: i9 === true ? void 0 : -1, "aria-disabled": i9 === true ? true : void 0, disabled: void 0, onClick: R5, onFocus: p7, onPointerEnter: b9, onMouseEnter: b9, onPointerMove: n7, onMouseMove: n7, onPointerLeave: E9, onMouseLeave: E9 }, theirProps: t18, slot: x4, defaultTag: Se, name: "Menu.Item" });
}
var Pe3 = U(Me2);
var ve = U(Re);
var he = U(Ee2);
var De = U(xe2);
var qe4 = Object.assign(Pe3, { Button: ve, Items: he, Item: De });

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/components/popover/popover.js
var import_react88 = __toESM(require_react(), 1);
var he2 = ((u12) => (u12[u12.Open = 0] = "Open", u12[u12.Closed = 1] = "Closed", u12))(he2 || {});
var He3 = ((e4) => (e4[e4.TogglePopover = 0] = "TogglePopover", e4[e4.ClosePopover = 1] = "ClosePopover", e4[e4.SetButton = 2] = "SetButton", e4[e4.SetButtonId = 3] = "SetButtonId", e4[e4.SetPanel = 4] = "SetPanel", e4[e4.SetPanelId = 5] = "SetPanelId", e4))(He3 || {});
var Ge3 = { [0]: (t18) => {
  let o14 = { ...t18, popoverState: u(t18.popoverState, { [0]: 1, [1]: 0 }) };
  return o14.popoverState === 0 && (o14.__demoMode = false), o14;
}, [1](t18) {
  return t18.popoverState === 1 ? t18 : { ...t18, popoverState: 1 };
}, [2](t18, o14) {
  return t18.button === o14.button ? t18 : { ...t18, button: o14.button };
}, [3](t18, o14) {
  return t18.buttonId === o14.buttonId ? t18 : { ...t18, buttonId: o14.buttonId };
}, [4](t18, o14) {
  return t18.panel === o14.panel ? t18 : { ...t18, panel: o14.panel };
}, [5](t18, o14) {
  return t18.panelId === o14.panelId ? t18 : { ...t18, panelId: o14.panelId };
} };
var ue3 = (0, import_react88.createContext)(null);
ue3.displayName = "PopoverContext";
function oe2(t18) {
  let o14 = (0, import_react88.useContext)(ue3);
  if (o14 === null) {
    let u12 = new Error(`<${t18} /> is missing a parent <Popover /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(u12, oe2), u12;
  }
  return o14;
}
var ie3 = (0, import_react88.createContext)(null);
ie3.displayName = "PopoverAPIContext";
function fe2(t18) {
  let o14 = (0, import_react88.useContext)(ie3);
  if (o14 === null) {
    let u12 = new Error(`<${t18} /> is missing a parent <Popover /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(u12, fe2), u12;
  }
  return o14;
}
var Pe4 = (0, import_react88.createContext)(null);
Pe4.displayName = "PopoverGroupContext";
function Ee3() {
  return (0, import_react88.useContext)(Pe4);
}
var re2 = (0, import_react88.createContext)(null);
re2.displayName = "PopoverPanelContext";
function Ne3() {
  return (0, import_react88.useContext)(re2);
}
function ke(t18, o14) {
  return u(o14.type, Ge3, t18, o14);
}
var we2 = "div";
function Ue2(t18, o14) {
  var B4;
  let { __demoMode: u12 = false, ...M8 } = t18, x4 = (0, import_react88.useRef)(null), n7 = y3(o14, T4((l12) => {
    x4.current = l12;
  })), e4 = (0, import_react88.useRef)([]), c14 = (0, import_react88.useReducer)(ke, { __demoMode: u12, popoverState: u12 ? 0 : 1, buttons: e4, button: null, buttonId: null, panel: null, panelId: null, beforePanelSentinel: (0, import_react88.createRef)(), afterPanelSentinel: (0, import_react88.createRef)() }), [{ popoverState: f15, button: s18, buttonId: I10, panel: a12, panelId: v6, beforePanelSentinel: y7, afterPanelSentinel: A4 }, P5] = c14, p7 = n2((B4 = x4.current) != null ? B4 : s18), E9 = (0, import_react88.useMemo)(() => {
    if (!s18 || !a12)
      return false;
    for (let W of document.querySelectorAll("body > *"))
      if (Number(W == null ? void 0 : W.contains(s18)) ^ Number(W == null ? void 0 : W.contains(a12)))
        return true;
    let l12 = f2(), S9 = l12.indexOf(s18), q7 = (S9 + l12.length - 1) % l12.length, U6 = (S9 + 1) % l12.length, z5 = l12[q7], be5 = l12[U6];
    return !a12.contains(z5) && !a12.contains(be5);
  }, [s18, a12]), F9 = s2(I10), D7 = s2(v6), _5 = (0, import_react88.useMemo)(() => ({ buttonId: F9, panelId: D7, close: () => P5({ type: 1 }) }), [F9, D7, P5]), O4 = Ee3(), L2 = O4 == null ? void 0 : O4.registerPopover, $7 = o2(() => {
    var l12;
    return (l12 = O4 == null ? void 0 : O4.isFocusWithinPopoverGroup()) != null ? l12 : (p7 == null ? void 0 : p7.activeElement) && ((s18 == null ? void 0 : s18.contains(p7.activeElement)) || (a12 == null ? void 0 : a12.contains(p7.activeElement)));
  });
  (0, import_react88.useEffect)(() => L2 == null ? void 0 : L2(_5), [L2, _5]);
  let [i9, b9] = ee2(), T8 = N4({ mainTreeNodeRef: O4 == null ? void 0 : O4.mainTreeNodeRef, portals: i9, defaultContainers: [s18, a12] });
  E3(p7 == null ? void 0 : p7.defaultView, "focus", (l12) => {
    var S9, q7, U6, z5;
    l12.target !== window && l12.target instanceof HTMLElement && f15 === 0 && ($7() || s18 && a12 && (T8.contains(l12.target) || (q7 = (S9 = y7.current) == null ? void 0 : S9.contains) != null && q7.call(S9, l12.target) || (z5 = (U6 = A4.current) == null ? void 0 : U6.contains) != null && z5.call(U6, l12.target) || P5({ type: 1 })));
  }, true), y2(T8.resolveContainers, (l12, S9) => {
    P5({ type: 1 }), h(S9, T2.Loose) || (l12.preventDefault(), s18 == null || s18.focus());
  }, f15 === 0);
  let d16 = o2((l12) => {
    P5({ type: 1 });
    let S9 = (() => l12 ? l12 instanceof HTMLElement ? l12 : "current" in l12 && l12.current instanceof HTMLElement ? l12.current : s18 : s18)();
    S9 == null || S9.focus();
  }), r9 = (0, import_react88.useMemo)(() => ({ close: d16, isPortalled: E9 }), [d16, E9]), m13 = (0, import_react88.useMemo)(() => ({ open: f15 === 0, close: d16 }), [f15, d16]), g5 = { ref: n7 };
  return import_react88.default.createElement(re2.Provider, { value: null }, import_react88.default.createElement(ue3.Provider, { value: c14 }, import_react88.default.createElement(ie3.Provider, { value: r9 }, import_react88.default.createElement(s9, { value: u(f15, { [0]: d5.Open, [1]: d5.Closed }) }, import_react88.default.createElement(b9, null, C({ ourProps: g5, theirProps: M8, slot: m13, defaultTag: we2, name: "Popover" }), import_react88.default.createElement(T8.MainTreeNode, null))))));
}
var We3 = "button";
function Ke3(t18, o14) {
  let u12 = I(), { id: M8 = `headlessui-popover-button-${u12}`, ...x4 } = t18, [n7, e4] = oe2("Popover.Button"), { isPortalled: c14 } = fe2("Popover.Button"), f15 = (0, import_react88.useRef)(null), s18 = `headlessui-focus-sentinel-${I()}`, I10 = Ee3(), a12 = I10 == null ? void 0 : I10.closeOthers, y7 = Ne3() !== null;
  (0, import_react88.useEffect)(() => {
    if (!y7)
      return e4({ type: 3, buttonId: M8 }), () => {
        e4({ type: 3, buttonId: null });
      };
  }, [y7, M8, e4]);
  let [A4] = (0, import_react88.useState)(() => Symbol()), P5 = y3(f15, o14, y7 ? null : (r9) => {
    if (r9)
      n7.buttons.current.push(A4);
    else {
      let m13 = n7.buttons.current.indexOf(A4);
      m13 !== -1 && n7.buttons.current.splice(m13, 1);
    }
    n7.buttons.current.length > 1 && console.warn("You are already using a <Popover.Button /> but only 1 <Popover.Button /> is supported."), r9 && e4({ type: 2, button: r9 });
  }), p7 = y3(f15, o14), E9 = n2(f15), F9 = o2((r9) => {
    var m13, g5, B4;
    if (y7) {
      if (n7.popoverState === 1)
        return;
      switch (r9.key) {
        case o11.Space:
        case o11.Enter:
          r9.preventDefault(), (g5 = (m13 = r9.target).click) == null || g5.call(m13), e4({ type: 1 }), (B4 = n7.button) == null || B4.focus();
          break;
      }
    } else
      switch (r9.key) {
        case o11.Space:
        case o11.Enter:
          r9.preventDefault(), r9.stopPropagation(), n7.popoverState === 1 && (a12 == null || a12(n7.buttonId)), e4({ type: 0 });
          break;
        case o11.Escape:
          if (n7.popoverState !== 0)
            return a12 == null ? void 0 : a12(n7.buttonId);
          if (!f15.current || E9 != null && E9.activeElement && !f15.current.contains(E9.activeElement))
            return;
          r9.preventDefault(), r9.stopPropagation(), e4({ type: 1 });
          break;
      }
  }), D7 = o2((r9) => {
    y7 || r9.key === o11.Space && r9.preventDefault();
  }), _5 = o2((r9) => {
    var m13, g5;
    r2(r9.currentTarget) || t18.disabled || (y7 ? (e4({ type: 1 }), (m13 = n7.button) == null || m13.focus()) : (r9.preventDefault(), r9.stopPropagation(), n7.popoverState === 1 && (a12 == null || a12(n7.buttonId)), e4({ type: 0 }), (g5 = n7.button) == null || g5.focus()));
  }), O4 = o2((r9) => {
    r9.preventDefault(), r9.stopPropagation();
  }), L2 = n7.popoverState === 0, $7 = (0, import_react88.useMemo)(() => ({ open: L2 }), [L2]), i9 = T3(t18, f15), b9 = y7 ? { ref: p7, type: i9, onKeyDown: F9, onClick: _5 } : { ref: P5, id: n7.buttonId, type: i9, "aria-expanded": n7.popoverState === 0, "aria-controls": n7.panel ? n7.panelId : void 0, onKeyDown: F9, onKeyUp: D7, onClick: _5, onMouseDown: O4 }, T8 = n5(), d16 = o2(() => {
    let r9 = n7.panel;
    if (!r9)
      return;
    function m13() {
      u(T8.current, { [s10.Forwards]: () => O(r9, M.First), [s10.Backwards]: () => O(r9, M.Last) }) === N.Error && O(f2().filter((B4) => B4.dataset.headlessuiFocusGuard !== "true"), u(T8.current, { [s10.Forwards]: M.Next, [s10.Backwards]: M.Previous }), { relativeTo: n7.button });
    }
    m13();
  });
  return import_react88.default.createElement(import_react88.default.Fragment, null, C({ ourProps: b9, theirProps: x4, slot: $7, defaultTag: We3, name: "Popover.Button" }), L2 && !y7 && c14 && import_react88.default.createElement(f5, { id: s18, features: s8.Focusable, "data-headlessui-focus-guard": true, as: "button", type: "button", onFocus: d16 }));
}
var je3 = "div";
var Ve4 = O2.RenderStrategy | O2.Static;
function $e4(t18, o14) {
  let u12 = I(), { id: M8 = `headlessui-popover-overlay-${u12}`, ...x4 } = t18, [{ popoverState: n7 }, e4] = oe2("Popover.Overlay"), c14 = y3(o14), f15 = u4(), s18 = (() => f15 !== null ? (f15 & d5.Open) === d5.Open : n7 === 0)(), I10 = o2((y7) => {
    if (r2(y7.currentTarget))
      return y7.preventDefault();
    e4({ type: 1 });
  }), a12 = (0, import_react88.useMemo)(() => ({ open: n7 === 0 }), [n7]);
  return C({ ourProps: { ref: c14, id: M8, "aria-hidden": true, onClick: I10 }, theirProps: x4, slot: a12, defaultTag: je3, features: Ve4, visible: s18, name: "Popover.Overlay" });
}
var Je3 = "div";
var Xe3 = O2.RenderStrategy | O2.Static;
function Ye4(t18, o14) {
  let u12 = I(), { id: M8 = `headlessui-popover-panel-${u12}`, focus: x4 = false, ...n7 } = t18, [e4, c14] = oe2("Popover.Panel"), { close: f15, isPortalled: s18 } = fe2("Popover.Panel"), I10 = `headlessui-focus-sentinel-before-${I()}`, a12 = `headlessui-focus-sentinel-after-${I()}`, v6 = (0, import_react88.useRef)(null), y7 = y3(v6, o14, (i9) => {
    c14({ type: 4, panel: i9 });
  }), A4 = n2(v6), P5 = I3();
  l(() => (c14({ type: 5, panelId: M8 }), () => {
    c14({ type: 5, panelId: null });
  }), [M8, c14]);
  let p7 = u4(), E9 = (() => p7 !== null ? (p7 & d5.Open) === d5.Open : e4.popoverState === 0)(), F9 = o2((i9) => {
    var b9;
    switch (i9.key) {
      case o11.Escape:
        if (e4.popoverState !== 0 || !v6.current || A4 != null && A4.activeElement && !v6.current.contains(A4.activeElement))
          return;
        i9.preventDefault(), i9.stopPropagation(), c14({ type: 1 }), (b9 = e4.button) == null || b9.focus();
        break;
    }
  });
  (0, import_react88.useEffect)(() => {
    var i9;
    t18.static || e4.popoverState === 1 && ((i9 = t18.unmount) == null || i9) && c14({ type: 4, panel: null });
  }, [e4.popoverState, t18.unmount, t18.static, c14]), (0, import_react88.useEffect)(() => {
    if (e4.__demoMode || !x4 || e4.popoverState !== 0 || !v6.current)
      return;
    let i9 = A4 == null ? void 0 : A4.activeElement;
    v6.current.contains(i9) || O(v6.current, M.First);
  }, [e4.__demoMode, x4, v6, e4.popoverState]);
  let D7 = (0, import_react88.useMemo)(() => ({ open: e4.popoverState === 0, close: f15 }), [e4, f15]), _5 = { ref: y7, id: M8, onKeyDown: F9, onBlur: x4 && e4.popoverState === 0 ? (i9) => {
    var T8, d16, r9, m13, g5;
    let b9 = i9.relatedTarget;
    b9 && v6.current && ((T8 = v6.current) != null && T8.contains(b9) || (c14({ type: 1 }), ((r9 = (d16 = e4.beforePanelSentinel.current) == null ? void 0 : d16.contains) != null && r9.call(d16, b9) || (g5 = (m13 = e4.afterPanelSentinel.current) == null ? void 0 : m13.contains) != null && g5.call(m13, b9)) && b9.focus({ preventScroll: true })));
  } : void 0, tabIndex: -1 }, O4 = n5(), L2 = o2(() => {
    let i9 = v6.current;
    if (!i9)
      return;
    function b9() {
      u(O4.current, { [s10.Forwards]: () => {
        var d16;
        O(i9, M.First) === N.Error && ((d16 = e4.afterPanelSentinel.current) == null || d16.focus());
      }, [s10.Backwards]: () => {
        var T8;
        (T8 = e4.button) == null || T8.focus({ preventScroll: true });
      } });
    }
    b9();
  }), $7 = o2(() => {
    let i9 = v6.current;
    if (!i9)
      return;
    function b9() {
      u(O4.current, { [s10.Forwards]: () => {
        var B4;
        if (!e4.button)
          return;
        let T8 = f2(), d16 = T8.indexOf(e4.button), r9 = T8.slice(0, d16 + 1), g5 = [...T8.slice(d16 + 1), ...r9];
        for (let l12 of g5.slice())
          if (l12.dataset.headlessuiFocusGuard === "true" || (B4 = e4.panel) != null && B4.contains(l12)) {
            let S9 = g5.indexOf(l12);
            S9 !== -1 && g5.splice(S9, 1);
          }
        O(g5, M.First, { sorted: false });
      }, [s10.Backwards]: () => {
        var d16;
        O(i9, M.Previous) === N.Error && ((d16 = e4.button) == null || d16.focus());
      } });
    }
    b9();
  });
  return import_react88.default.createElement(re2.Provider, { value: M8 }, E9 && s18 && import_react88.default.createElement(f5, { id: I10, ref: e4.beforePanelSentinel, features: s8.Focusable, "data-headlessui-focus-guard": true, as: "button", type: "button", onFocus: L2 }), C({ mergeRefs: P5, ourProps: _5, theirProps: n7, slot: D7, defaultTag: Je3, features: Xe3, visible: E9, name: "Popover.Panel" }), E9 && s18 && import_react88.default.createElement(f5, { id: a12, ref: e4.afterPanelSentinel, features: s8.Focusable, "data-headlessui-focus-guard": true, as: "button", type: "button", onFocus: $7 }));
}
var qe5 = "div";
function ze4(t18, o14) {
  let u12 = (0, import_react88.useRef)(null), M8 = y3(u12, o14), [x4, n7] = (0, import_react88.useState)([]), e4 = y5(), c14 = o2((P5) => {
    n7((p7) => {
      let E9 = p7.indexOf(P5);
      if (E9 !== -1) {
        let F9 = p7.slice();
        return F9.splice(E9, 1), F9;
      }
      return p7;
    });
  }), f15 = o2((P5) => (n7((p7) => [...p7, P5]), () => c14(P5))), s18 = o2(() => {
    var E9;
    let P5 = o7(u12);
    if (!P5)
      return false;
    let p7 = P5.activeElement;
    return (E9 = u12.current) != null && E9.contains(p7) ? true : x4.some((F9) => {
      var D7, _5;
      return ((D7 = P5.getElementById(F9.buttonId.current)) == null ? void 0 : D7.contains(p7)) || ((_5 = P5.getElementById(F9.panelId.current)) == null ? void 0 : _5.contains(p7));
    });
  }), I10 = o2((P5) => {
    for (let p7 of x4)
      p7.buttonId.current !== P5 && p7.close();
  }), a12 = (0, import_react88.useMemo)(() => ({ registerPopover: f15, unregisterPopover: c14, isFocusWithinPopoverGroup: s18, closeOthers: I10, mainTreeNodeRef: e4.mainTreeNodeRef }), [f15, c14, s18, I10, e4.mainTreeNodeRef]), v6 = (0, import_react88.useMemo)(() => ({}), []), y7 = t18, A4 = { ref: M8 };
  return import_react88.default.createElement(Pe4.Provider, { value: a12 }, C({ ourProps: A4, theirProps: y7, slot: v6, defaultTag: qe5, name: "Popover.Group" }), import_react88.default.createElement(e4.MainTreeNode, null));
}
var Qe4 = U(Ue2);
var Ze4 = U(Ke3);
var et4 = U($e4);
var tt4 = U(Ye4);
var ot3 = U(ze4);
var Ct = Object.assign(Qe4, { Button: Ze4, Overlay: et4, Panel: tt4, Group: ot3 });

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/components/radio-group/radio-group.js
var import_react91 = __toESM(require_react(), 1);

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/components/label/label.js
var import_react89 = __toESM(require_react(), 1);
var d14 = (0, import_react89.createContext)(null);
function u11() {
  let a12 = (0, import_react89.useContext)(d14);
  if (a12 === null) {
    let t18 = new Error("You used a <Label /> component, but it is not inside a relevant parent.");
    throw Error.captureStackTrace && Error.captureStackTrace(t18, u11), t18;
  }
  return a12;
}
function F6() {
  let [a12, t18] = (0, import_react89.useState)([]);
  return [a12.length > 0 ? a12.join(" ") : void 0, (0, import_react89.useMemo)(() => function(e4) {
    let s18 = o2((r9) => (t18((l12) => [...l12, r9]), () => t18((l12) => {
      let n7 = l12.slice(), p7 = n7.indexOf(r9);
      return p7 !== -1 && n7.splice(p7, 1), n7;
    }))), o14 = (0, import_react89.useMemo)(() => ({ register: s18, slot: e4.slot, name: e4.name, props: e4.props }), [s18, e4.slot, e4.name, e4.props]);
    return import_react89.default.createElement(d14.Provider, { value: o14 }, e4.children);
  }, [t18])];
}
var A = "label";
function h8(a12, t18) {
  let i9 = I(), { id: e4 = `headlessui-label-${i9}`, passive: s18 = false, ...o14 } = a12, r9 = u11(), l12 = y3(t18);
  l(() => r9.register(e4), [e4, r9.register]);
  let n7 = { ref: l12, ...r9.props, id: e4 };
  return s18 && ("onClick" in n7 && (delete n7.htmlFor, delete n7.onClick), "onClick" in o14 && delete o14.onClick), C({ ourProps: n7, theirProps: o14, slot: r9.slot || {}, defaultTag: A, name: r9.name || "Label" });
}
var v4 = U(h8);
var B2 = Object.assign(v4, {});

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-flags.js
var import_react90 = __toESM(require_react(), 1);
function c11(a12 = 0) {
  let [l12, r9] = (0, import_react90.useState)(a12), t18 = f8(), o14 = (0, import_react90.useCallback)((e4) => {
    t18.current && r9((u12) => u12 | e4);
  }, [l12, t18]), m13 = (0, import_react90.useCallback)((e4) => Boolean(l12 & e4), [l12]), s18 = (0, import_react90.useCallback)((e4) => {
    t18.current && r9((u12) => u12 & ~e4);
  }, [r9, t18]), g5 = (0, import_react90.useCallback)((e4) => {
    t18.current && r9((u12) => u12 ^ e4);
  }, [r9]);
  return { flags: l12, addFlag: o14, hasFlag: m13, removeFlag: s18, toggleFlag: g5 };
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/components/radio-group/radio-group.js
var Ge4 = ((t18) => (t18[t18.RegisterOption = 0] = "RegisterOption", t18[t18.UnregisterOption = 1] = "UnregisterOption", t18))(Ge4 || {});
var Ce2 = { [0](o14, r9) {
  let t18 = [...o14.options, { id: r9.id, element: r9.element, propsRef: r9.propsRef }];
  return { ...o14, options: I2(t18, (p7) => p7.element.current) };
}, [1](o14, r9) {
  let t18 = o14.options.slice(), p7 = o14.options.findIndex((T8) => T8.id === r9.id);
  return p7 === -1 ? o14 : (t18.splice(p7, 1), { ...o14, options: t18 });
} };
var B3 = (0, import_react91.createContext)(null);
B3.displayName = "RadioGroupDataContext";
function oe3(o14) {
  let r9 = (0, import_react91.useContext)(B3);
  if (r9 === null) {
    let t18 = new Error(`<${o14} /> is missing a parent <RadioGroup /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(t18, oe3), t18;
  }
  return r9;
}
var $3 = (0, import_react91.createContext)(null);
$3.displayName = "RadioGroupActionsContext";
function ne2(o14) {
  let r9 = (0, import_react91.useContext)($3);
  if (r9 === null) {
    let t18 = new Error(`<${o14} /> is missing a parent <RadioGroup /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(t18, ne2), t18;
  }
  return r9;
}
function ke2(o14, r9) {
  return u(r9.type, Ce2, o14, r9);
}
var Le2 = "div";
function he3(o14, r9) {
  let t18 = I(), { id: p7 = `headlessui-radiogroup-${t18}`, value: T8, defaultValue: v6, form: M8, name: m13, onChange: H6, by: _5 = (e4, i9) => e4 === i9, disabled: G4 = false, ...N7 } = o14, y7 = o2(typeof _5 == "string" ? (e4, i9) => {
    let n7 = _5;
    return (e4 == null ? void 0 : e4[n7]) === (i9 == null ? void 0 : i9[n7]);
  } : _5), [P5, L2] = (0, import_react91.useReducer)(ke2, { options: [] }), a12 = P5.options, [h10, R5] = F6(), [C7, U6] = w3(), k4 = (0, import_react91.useRef)(null), W = y3(k4, r9), [l12, s18] = T(T8, H6, v6), b9 = (0, import_react91.useMemo)(() => a12.find((e4) => !e4.propsRef.current.disabled), [a12]), x4 = (0, import_react91.useMemo)(() => a12.some((e4) => y7(e4.propsRef.current.value, l12)), [a12, l12]), d16 = o2((e4) => {
    var n7;
    if (G4 || y7(e4, l12))
      return false;
    let i9 = (n7 = a12.find((f15) => y7(f15.propsRef.current.value, e4))) == null ? void 0 : n7.propsRef.current;
    return i9 != null && i9.disabled ? false : (s18 == null || s18(e4), true);
  });
  F2({ container: k4.current, accept(e4) {
    return e4.getAttribute("role") === "radio" ? NodeFilter.FILTER_REJECT : e4.hasAttribute("role") ? NodeFilter.FILTER_SKIP : NodeFilter.FILTER_ACCEPT;
  }, walk(e4) {
    e4.setAttribute("role", "none");
  } });
  let F9 = o2((e4) => {
    let i9 = k4.current;
    if (!i9)
      return;
    let n7 = o7(i9), f15 = a12.filter((u12) => u12.propsRef.current.disabled === false).map((u12) => u12.element.current);
    switch (e4.key) {
      case o11.Enter:
        p4(e4.currentTarget);
        break;
      case o11.ArrowLeft:
      case o11.ArrowUp:
        if (e4.preventDefault(), e4.stopPropagation(), O(f15, M.Previous | M.WrapAround) === N.Success) {
          let g5 = a12.find((K6) => K6.element.current === (n7 == null ? void 0 : n7.activeElement));
          g5 && d16(g5.propsRef.current.value);
        }
        break;
      case o11.ArrowRight:
      case o11.ArrowDown:
        if (e4.preventDefault(), e4.stopPropagation(), O(f15, M.Next | M.WrapAround) === N.Success) {
          let g5 = a12.find((K6) => K6.element.current === (n7 == null ? void 0 : n7.activeElement));
          g5 && d16(g5.propsRef.current.value);
        }
        break;
      case o11.Space:
        {
          e4.preventDefault(), e4.stopPropagation();
          let u12 = a12.find((g5) => g5.element.current === (n7 == null ? void 0 : n7.activeElement));
          u12 && d16(u12.propsRef.current.value);
        }
        break;
    }
  }), c14 = o2((e4) => (L2({ type: 0, ...e4 }), () => L2({ type: 1, id: e4.id }))), w6 = (0, import_react91.useMemo)(() => ({ value: l12, firstOption: b9, containsCheckedOption: x4, disabled: G4, compare: y7, ...P5 }), [l12, b9, x4, G4, y7, P5]), ie5 = (0, import_react91.useMemo)(() => ({ registerOption: c14, change: d16 }), [c14, d16]), ae4 = { ref: W, id: p7, role: "radiogroup", "aria-labelledby": h10, "aria-describedby": C7, onKeyDown: F9 }, pe3 = (0, import_react91.useMemo)(() => ({ value: l12 }), [l12]), I10 = (0, import_react91.useRef)(null), le4 = p();
  return (0, import_react91.useEffect)(() => {
    I10.current && v6 !== void 0 && le4.addEventListener(I10.current, "reset", () => {
      d16(v6);
    });
  }, [I10, d16]), import_react91.default.createElement(U6, { name: "RadioGroup.Description" }, import_react91.default.createElement(R5, { name: "RadioGroup.Label" }, import_react91.default.createElement($3.Provider, { value: ie5 }, import_react91.default.createElement(B3.Provider, { value: w6 }, m13 != null && l12 != null && e({ [m13]: l12 }).map(([e4, i9], n7) => import_react91.default.createElement(f5, { features: s8.Hidden, ref: n7 === 0 ? (f15) => {
    var u12;
    I10.current = (u12 = f15 == null ? void 0 : f15.closest("form")) != null ? u12 : null;
  } : void 0, ...x({ key: e4, as: "input", type: "radio", checked: i9 != null, hidden: true, readOnly: true, form: M8, name: e4, value: i9 }) })), C({ ourProps: ae4, theirProps: N7, slot: pe3, defaultTag: Le2, name: "RadioGroup" })))));
}
var xe3 = ((t18) => (t18[t18.Empty = 1] = "Empty", t18[t18.Active = 2] = "Active", t18))(xe3 || {});
var Fe2 = "div";
function we3(o14, r9) {
  var F9;
  let t18 = I(), { id: p7 = `headlessui-radiogroup-option-${t18}`, value: T8, disabled: v6 = false, ...M8 } = o14, m13 = (0, import_react91.useRef)(null), H6 = y3(m13, r9), [_5, G4] = F6(), [N7, y7] = w3(), { addFlag: P5, removeFlag: L2, hasFlag: a12 } = c11(1), h10 = s2({ value: T8, disabled: v6 }), R5 = oe3("RadioGroup.Option"), C7 = ne2("RadioGroup.Option");
  l(() => C7.registerOption({ id: p7, element: m13, propsRef: h10 }), [p7, C7, m13, h10]);
  let U6 = o2((c14) => {
    var w6;
    if (r2(c14.currentTarget))
      return c14.preventDefault();
    C7.change(T8) && (P5(2), (w6 = m13.current) == null || w6.focus());
  }), k4 = o2((c14) => {
    if (r2(c14.currentTarget))
      return c14.preventDefault();
    P5(2);
  }), W = o2(() => L2(2)), l12 = ((F9 = R5.firstOption) == null ? void 0 : F9.id) === p7, s18 = R5.disabled || v6, b9 = R5.compare(R5.value, T8), x4 = { ref: H6, id: p7, role: "radio", "aria-checked": b9 ? "true" : "false", "aria-labelledby": _5, "aria-describedby": N7, "aria-disabled": s18 ? true : void 0, tabIndex: (() => s18 ? -1 : b9 || !R5.containsCheckedOption && l12 ? 0 : -1)(), onClick: s18 ? void 0 : U6, onFocus: s18 ? void 0 : k4, onBlur: s18 ? void 0 : W }, d16 = (0, import_react91.useMemo)(() => ({ checked: b9, disabled: s18, active: a12(2) }), [b9, s18, a12]);
  return import_react91.default.createElement(y7, { name: "RadioGroup.Description" }, import_react91.default.createElement(G4, { name: "RadioGroup.Label" }, C({ ourProps: x4, theirProps: M8, slot: d16, defaultTag: Fe2, name: "RadioGroup.Option" })));
}
var Ie3 = U(he3);
var Se2 = U(we3);
var it3 = Object.assign(Ie3, { Option: Se2, Label: B2, Description: G });

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/components/switch/switch.js
var import_react92 = __toESM(require_react(), 1);
var b6 = (0, import_react92.createContext)(null);
b6.displayName = "GroupContext";
var Y3 = import_react92.Fragment;
function Z5(s18) {
  var d16;
  let [n7, p7] = (0, import_react92.useState)(null), [c14, f15] = F6(), [r9, h10] = w3(), l12 = (0, import_react92.useMemo)(() => ({ switch: n7, setSwitch: p7, labelledby: c14, describedby: r9 }), [n7, p7, c14, r9]), T8 = {}, y7 = s18;
  return import_react92.default.createElement(h10, { name: "Switch.Description" }, import_react92.default.createElement(f15, { name: "Switch.Label", props: { htmlFor: (d16 = l12.switch) == null ? void 0 : d16.id, onClick(t18) {
    n7 && (t18.currentTarget.tagName === "LABEL" && t18.preventDefault(), n7.click(), n7.focus({ preventScroll: true }));
  } } }, import_react92.default.createElement(b6.Provider, { value: l12 }, C({ ourProps: T8, theirProps: y7, defaultTag: Y3, name: "Switch.Group" }))));
}
var ee6 = "button";
function te4(s18, n7) {
  let p7 = I(), { id: c14 = `headlessui-switch-${p7}`, checked: f15, defaultChecked: r9 = false, onChange: h10, name: l12, value: T8, form: y7, ...d16 } = s18, t18 = (0, import_react92.useContext)(b6), u12 = (0, import_react92.useRef)(null), g5 = y3(u12, n7, t18 === null ? null : t18.setSwitch), [o14, a12] = T(f15, h10, r9), S9 = o2(() => a12 == null ? void 0 : a12(!o14)), D7 = o2((e4) => {
    if (r2(e4.currentTarget))
      return e4.preventDefault();
    e4.preventDefault(), S9();
  }), C7 = o2((e4) => {
    e4.key === o11.Space ? (e4.preventDefault(), S9()) : e4.key === o11.Enter && p4(e4.currentTarget);
  }), L2 = o2((e4) => e4.preventDefault()), x4 = (0, import_react92.useMemo)(() => ({ checked: o14 }), [o14]), v6 = { id: c14, ref: g5, role: "switch", type: T3(s18, u12), tabIndex: 0, "aria-checked": o14, "aria-labelledby": t18 == null ? void 0 : t18.labelledby, "aria-describedby": t18 == null ? void 0 : t18.describedby, onClick: D7, onKeyUp: C7, onKeyPress: L2 }, G4 = p();
  return (0, import_react92.useEffect)(() => {
    var w6;
    let e4 = (w6 = u12.current) == null ? void 0 : w6.closest("form");
    e4 && r9 !== void 0 && G4.addEventListener(e4, "reset", () => {
      a12(r9);
    });
  }, [u12, a12]), import_react92.default.createElement(import_react92.default.Fragment, null, l12 != null && o14 && import_react92.default.createElement(f5, { features: s8.Hidden, ...x({ as: "input", type: "checkbox", hidden: true, readOnly: true, form: y7, checked: o14, name: l12, value: T8 }) }), C({ ourProps: v6, theirProps: d16, slot: x4, defaultTag: ee6, name: "Switch" }));
}
var ne3 = U(te4);
var re3 = Z5;
var we4 = Object.assign(ne3, { Group: re3, Label: B2, Description: G });

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/components/tabs/tabs.js
var import_react94 = __toESM(require_react(), 1);

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/internal/focus-sentinel.js
var import_react93 = __toESM(require_react(), 1);
function b7({ onFocus: n7 }) {
  let [r9, o14] = (0, import_react93.useState)(true), u12 = f8();
  return r9 ? import_react93.default.createElement(f5, { as: "button", type: "button", features: s8.Focusable, onFocus: (a12) => {
    a12.preventDefault();
    let e4, i9 = 50;
    function t18() {
      if (i9-- <= 0) {
        e4 && cancelAnimationFrame(e4);
        return;
      }
      if (n7()) {
        if (cancelAnimationFrame(e4), !u12.current)
          return;
        o14(false);
        return;
      }
      e4 = requestAnimationFrame(t18);
    }
    e4 = requestAnimationFrame(t18);
  } }) : null;
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/utils/stable-collection.js
var r8 = __toESM(require_react(), 1);
var s16 = r8.createContext(null);
function a10() {
  return { groups: /* @__PURE__ */ new Map(), get(n7, t18) {
    var c14;
    let e4 = this.groups.get(n7);
    e4 || (e4 = /* @__PURE__ */ new Map(), this.groups.set(n7, e4));
    let l12 = (c14 = e4.get(t18)) != null ? c14 : 0;
    e4.set(t18, l12 + 1);
    let o14 = Array.from(e4.keys()).indexOf(t18);
    function i9() {
      let u12 = e4.get(t18);
      u12 > 1 ? e4.set(t18, u12 - 1) : e4.delete(t18);
    }
    return [o14, i9];
  } };
}
function C5({ children: n7 }) {
  let t18 = r8.useRef(a10());
  return r8.createElement(s16.Provider, { value: t18 }, n7);
}
function d15(n7) {
  let t18 = r8.useContext(s16);
  if (!t18)
    throw new Error("You must wrap your component in a <StableCollection>");
  let e4 = f14(), [l12, o14] = t18.current.get(n7, e4);
  return r8.useEffect(() => o14, []), l12;
}
function f14() {
  var l12, o14, i9;
  let n7 = (i9 = (o14 = (l12 = r8.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED) == null ? void 0 : l12.ReactCurrentOwner) == null ? void 0 : o14.current) != null ? i9 : null;
  if (!n7)
    return Symbol();
  let t18 = [], e4 = n7;
  for (; e4; )
    t18.push(e4.index), e4 = e4.return;
  return "$." + t18.join(".");
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/components/tabs/tabs.js
var ue5 = ((t18) => (t18[t18.Forwards = 0] = "Forwards", t18[t18.Backwards = 1] = "Backwards", t18))(ue5 || {});
var Te2 = ((o14) => (o14[o14.Less = -1] = "Less", o14[o14.Equal = 0] = "Equal", o14[o14.Greater = 1] = "Greater", o14))(Te2 || {});
var de5 = ((r9) => (r9[r9.SetSelectedIndex = 0] = "SetSelectedIndex", r9[r9.RegisterTab = 1] = "RegisterTab", r9[r9.UnregisterTab = 2] = "UnregisterTab", r9[r9.RegisterPanel = 3] = "RegisterPanel", r9[r9.UnregisterPanel = 4] = "UnregisterPanel", r9))(de5 || {});
var ce3 = { [0](e4, n7) {
  var u12;
  let t18 = I2(e4.tabs, (T8) => T8.current), o14 = I2(e4.panels, (T8) => T8.current), s18 = t18.filter((T8) => {
    var l12;
    return !((l12 = T8.current) != null && l12.hasAttribute("disabled"));
  }), r9 = { ...e4, tabs: t18, panels: o14 };
  if (n7.index < 0 || n7.index > t18.length - 1) {
    let T8 = u(Math.sign(n7.index - e4.selectedIndex), { [-1]: () => 1, [0]: () => u(Math.sign(n7.index), { [-1]: () => 0, [0]: () => 0, [1]: () => 1 }), [1]: () => 0 });
    if (s18.length === 0)
      return r9;
    let l12 = u(T8, { [0]: () => t18.indexOf(s18[0]), [1]: () => t18.indexOf(s18[s18.length - 1]) });
    return { ...r9, selectedIndex: l12 === -1 ? e4.selectedIndex : l12 };
  }
  let i9 = t18.slice(0, n7.index), b9 = [...t18.slice(n7.index), ...i9].find((T8) => s18.includes(T8));
  if (!b9)
    return r9;
  let c14 = (u12 = t18.indexOf(b9)) != null ? u12 : e4.selectedIndex;
  return c14 === -1 && (c14 = e4.selectedIndex), { ...r9, selectedIndex: c14 };
}, [1](e4, n7) {
  var r9;
  if (e4.tabs.includes(n7.tab))
    return e4;
  let t18 = e4.tabs[e4.selectedIndex], o14 = I2([...e4.tabs, n7.tab], (i9) => i9.current), s18 = (r9 = o14.indexOf(t18)) != null ? r9 : e4.selectedIndex;
  return s18 === -1 && (s18 = e4.selectedIndex), { ...e4, tabs: o14, selectedIndex: s18 };
}, [2](e4, n7) {
  return { ...e4, tabs: e4.tabs.filter((t18) => t18 !== n7.tab) };
}, [3](e4, n7) {
  return e4.panels.includes(n7.panel) ? e4 : { ...e4, panels: I2([...e4.panels, n7.panel], (t18) => t18.current) };
}, [4](e4, n7) {
  return { ...e4, panels: e4.panels.filter((t18) => t18 !== n7.panel) };
} };
var X3 = (0, import_react94.createContext)(null);
X3.displayName = "TabsDataContext";
function h9(e4) {
  let n7 = (0, import_react94.useContext)(X3);
  if (n7 === null) {
    let t18 = new Error(`<${e4} /> is missing a parent <Tab.Group /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(t18, h9), t18;
  }
  return n7;
}
var $4 = (0, import_react94.createContext)(null);
$4.displayName = "TabsActionsContext";
function q4(e4) {
  let n7 = (0, import_react94.useContext)($4);
  if (n7 === null) {
    let t18 = new Error(`<${e4} /> is missing a parent <Tab.Group /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(t18, q4), t18;
  }
  return n7;
}
function fe3(e4, n7) {
  return u(n7.type, ce3, e4, n7);
}
var be3 = import_react94.Fragment;
function me3(e4, n7) {
  let { defaultIndex: t18 = 0, vertical: o14 = false, manual: s18 = false, onChange: r9, selectedIndex: i9 = null, ...R5 } = e4;
  const b9 = o14 ? "vertical" : "horizontal", c14 = s18 ? "manual" : "auto";
  let u12 = i9 !== null, T8 = y3(n7), [l12, d16] = (0, import_react94.useReducer)(fe3, { selectedIndex: i9 != null ? i9 : t18, tabs: [], panels: [] }), x4 = (0, import_react94.useMemo)(() => ({ selectedIndex: l12.selectedIndex }), [l12.selectedIndex]), m13 = s2(r9 || (() => {
  })), g5 = s2(l12.tabs), E9 = (0, import_react94.useMemo)(() => ({ orientation: b9, activation: c14, ...l12 }), [b9, c14, l12]), S9 = o2((p7) => (d16({ type: 1, tab: p7 }), () => d16({ type: 2, tab: p7 }))), A4 = o2((p7) => (d16({ type: 3, panel: p7 }), () => d16({ type: 4, panel: p7 }))), L2 = o2((p7) => {
    M8.current !== p7 && m13.current(p7), u12 || d16({ type: 0, index: p7 });
  }), M8 = s2(u12 ? e4.selectedIndex : l12.selectedIndex), N7 = (0, import_react94.useMemo)(() => ({ registerTab: S9, registerPanel: A4, change: L2 }), []);
  l(() => {
    d16({ type: 0, index: i9 != null ? i9 : t18 });
  }, [i9]), l(() => {
    if (M8.current === void 0 || l12.tabs.length <= 0)
      return;
    let p7 = I2(l12.tabs, (a12) => a12.current);
    p7.some((a12, f15) => l12.tabs[f15] !== a12) && L2(p7.indexOf(l12.tabs[M8.current]));
  });
  let B4 = { ref: T8 };
  return import_react94.default.createElement(C5, null, import_react94.default.createElement($4.Provider, { value: N7 }, import_react94.default.createElement(X3.Provider, { value: E9 }, E9.tabs.length <= 0 && import_react94.default.createElement(b7, { onFocus: () => {
    var p7, I10;
    for (let a12 of g5.current)
      if (((p7 = a12.current) == null ? void 0 : p7.tabIndex) === 0)
        return (I10 = a12.current) == null || I10.focus(), true;
    return false;
  } }), C({ ourProps: B4, theirProps: R5, slot: x4, defaultTag: be3, name: "Tabs" }))));
}
var Pe5 = "div";
function ye4(e4, n7) {
  let { orientation: t18, selectedIndex: o14 } = h9("Tab.List"), s18 = y3(n7);
  return C({ ourProps: { ref: s18, role: "tablist", "aria-orientation": t18 }, theirProps: e4, slot: { selectedIndex: o14 }, defaultTag: Pe5, name: "Tabs.List" });
}
var xe4 = "button";
function ge4(e4, n7) {
  var p7, I10;
  let t18 = I(), { id: o14 = `headlessui-tabs-tab-${t18}`, ...s18 } = e4, { orientation: r9, activation: i9, selectedIndex: R5, tabs: b9, panels: c14 } = h9("Tab"), u12 = q4("Tab"), T8 = h9("Tab"), l12 = (0, import_react94.useRef)(null), d16 = y3(l12, n7);
  l(() => u12.registerTab(l12), [u12, l12]);
  let x4 = d15("tabs"), m13 = b9.indexOf(l12);
  m13 === -1 && (m13 = x4);
  let g5 = m13 === R5, E9 = o2((a12) => {
    var j6;
    let f15 = a12();
    if (f15 === N.Success && i9 === "auto") {
      let W = (j6 = o7(l12)) == null ? void 0 : j6.activeElement, z5 = T8.tabs.findIndex((te6) => te6.current === W);
      z5 !== -1 && u12.change(z5);
    }
    return f15;
  }), S9 = o2((a12) => {
    let f15 = b9.map((W) => W.current).filter(Boolean);
    if (a12.key === o11.Space || a12.key === o11.Enter) {
      a12.preventDefault(), a12.stopPropagation(), u12.change(m13);
      return;
    }
    switch (a12.key) {
      case o11.Home:
      case o11.PageUp:
        return a12.preventDefault(), a12.stopPropagation(), E9(() => O(f15, M.First));
      case o11.End:
      case o11.PageDown:
        return a12.preventDefault(), a12.stopPropagation(), E9(() => O(f15, M.Last));
    }
    if (E9(() => u(r9, { vertical() {
      return a12.key === o11.ArrowUp ? O(f15, M.Previous | M.WrapAround) : a12.key === o11.ArrowDown ? O(f15, M.Next | M.WrapAround) : N.Error;
    }, horizontal() {
      return a12.key === o11.ArrowLeft ? O(f15, M.Previous | M.WrapAround) : a12.key === o11.ArrowRight ? O(f15, M.Next | M.WrapAround) : N.Error;
    } })) === N.Success)
      return a12.preventDefault();
  }), A4 = (0, import_react94.useRef)(false), L2 = o2(() => {
    var a12;
    A4.current || (A4.current = true, (a12 = l12.current) == null || a12.focus({ preventScroll: true }), u12.change(m13), t3(() => {
      A4.current = false;
    }));
  }), M8 = o2((a12) => {
    a12.preventDefault();
  }), N7 = (0, import_react94.useMemo)(() => ({ selected: g5 }), [g5]), B4 = { ref: d16, onKeyDown: S9, onMouseDown: M8, onClick: L2, id: o14, role: "tab", type: T3(e4, l12), "aria-controls": (I10 = (p7 = c14[m13]) == null ? void 0 : p7.current) == null ? void 0 : I10.id, "aria-selected": g5, tabIndex: g5 ? 0 : -1 };
  return C({ ourProps: B4, theirProps: s18, slot: N7, defaultTag: xe4, name: "Tabs.Tab" });
}
var Ee4 = "div";
function Ae4(e4, n7) {
  let { selectedIndex: t18 } = h9("Tab.Panels"), o14 = y3(n7), s18 = (0, import_react94.useMemo)(() => ({ selectedIndex: t18 }), [t18]);
  return C({ ourProps: { ref: o14 }, theirProps: e4, slot: s18, defaultTag: Ee4, name: "Tabs.Panels" });
}
var Re2 = "div";
var Le3 = O2.RenderStrategy | O2.Static;
function _e2(e4, n7) {
  var E9, S9, A4, L2;
  let t18 = I(), { id: o14 = `headlessui-tabs-panel-${t18}`, tabIndex: s18 = 0, ...r9 } = e4, { selectedIndex: i9, tabs: R5, panels: b9 } = h9("Tab.Panel"), c14 = q4("Tab.Panel"), u12 = (0, import_react94.useRef)(null), T8 = y3(u12, n7);
  l(() => c14.registerPanel(u12), [c14, u12]);
  let l12 = d15("panels"), d16 = b9.indexOf(u12);
  d16 === -1 && (d16 = l12);
  let x4 = d16 === i9, m13 = (0, import_react94.useMemo)(() => ({ selected: x4 }), [x4]), g5 = { ref: T8, id: o14, role: "tabpanel", "aria-labelledby": (S9 = (E9 = R5[d16]) == null ? void 0 : E9.current) == null ? void 0 : S9.id, tabIndex: x4 ? s18 : -1 };
  return !x4 && ((A4 = r9.unmount) == null || A4) && !((L2 = r9.static) != null && L2) ? import_react94.default.createElement(f5, { as: "span", "aria-hidden": "true", ...g5 }) : C({ ourProps: g5, theirProps: r9, slot: m13, defaultTag: Re2, features: Le3, visible: x4, name: "Tabs.Panel" });
}
var Se3 = U(ge4);
var Ie4 = U(me3);
var De2 = U(ye4);
var Fe3 = U(Ae4);
var he4 = U(_e2);
var $e5 = Object.assign(Se3, { Group: Ie4, List: De2, Panels: Fe3, Panel: he4 });

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/components/transitions/transition.js
var import_react95 = __toESM(require_react(), 1);

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/utils/once.js
function l11(r9) {
  let e4 = { called: false };
  return (...t18) => {
    if (!e4.called)
      return e4.called = true, r9(...t18);
  };
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/components/transitions/utils/transition.js
function g4(t18, ...e4) {
  t18 && e4.length > 0 && t18.classList.add(...e4);
}
function v5(t18, ...e4) {
  t18 && e4.length > 0 && t18.classList.remove(...e4);
}
function b8(t18, e4) {
  let n7 = o4();
  if (!t18)
    return n7.dispose;
  let { transitionDuration: m13, transitionDelay: a12 } = getComputedStyle(t18), [u12, p7] = [m13, a12].map((l12) => {
    let [r9 = 0] = l12.split(",").filter(Boolean).map((i9) => i9.includes("ms") ? parseFloat(i9) : parseFloat(i9) * 1e3).sort((i9, T8) => T8 - i9);
    return r9;
  }), o14 = u12 + p7;
  if (o14 !== 0) {
    n7.group((r9) => {
      r9.setTimeout(() => {
        e4(), r9.dispose();
      }, o14), r9.addEventListener(t18, "transitionrun", (i9) => {
        i9.target === i9.currentTarget && r9.dispose();
      });
    });
    let l12 = n7.addEventListener(t18, "transitionend", (r9) => {
      r9.target === r9.currentTarget && (e4(), l12());
    });
  } else
    e4();
  return n7.add(() => e4()), n7.dispose;
}
function M5(t18, e4, n7, m13) {
  let a12 = n7 ? "enter" : "leave", u12 = o4(), p7 = m13 !== void 0 ? l11(m13) : () => {
  };
  a12 === "enter" && (t18.removeAttribute("hidden"), t18.style.display = "");
  let o14 = u(a12, { enter: () => e4.enter, leave: () => e4.leave }), l12 = u(a12, { enter: () => e4.enterTo, leave: () => e4.leaveTo }), r9 = u(a12, { enter: () => e4.enterFrom, leave: () => e4.leaveFrom });
  return v5(t18, ...e4.base, ...e4.enter, ...e4.enterTo, ...e4.enterFrom, ...e4.leave, ...e4.leaveFrom, ...e4.leaveTo, ...e4.entered), g4(t18, ...e4.base, ...o14, ...r9), u12.nextFrame(() => {
    v5(t18, ...e4.base, ...o14, ...r9), g4(t18, ...e4.base, ...o14, ...l12), b8(t18, () => (v5(t18, ...e4.base, ...o14), g4(t18, ...e4.base, ...e4.entered), p7()));
  }), u12.dispose;
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/hooks/use-transition.js
function D6({ immediate: t18, container: s18, direction: n7, classes: u12, onStart: a12, onStop: c14 }) {
  let l12 = f8(), d16 = p(), e4 = s2(n7);
  l(() => {
    t18 && (e4.current = "enter");
  }, [t18]), l(() => {
    let r9 = o4();
    d16.add(r9.dispose);
    let i9 = s18.current;
    if (i9 && e4.current !== "idle" && l12.current)
      return r9.dispose(), a12.current(e4.current), r9.add(M5(i9, u12.current, e4.current === "enter", () => {
        r9.dispose(), c14.current(e4.current);
      })), r9.dispose;
  }, [n7]);
}

// node_modules/@graphiql/react/node_modules/@headlessui/react/dist/components/transitions/transition.js
function S8(t18 = "") {
  return t18.split(/\s+/).filter((n7) => n7.length > 1);
}
var I8 = (0, import_react95.createContext)(null);
I8.displayName = "TransitionContext";
var Se4 = ((r9) => (r9.Visible = "visible", r9.Hidden = "hidden", r9))(Se4 || {});
function ye5() {
  let t18 = (0, import_react95.useContext)(I8);
  if (t18 === null)
    throw new Error("A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />.");
  return t18;
}
function xe5() {
  let t18 = (0, import_react95.useContext)(M6);
  if (t18 === null)
    throw new Error("A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />.");
  return t18;
}
var M6 = (0, import_react95.createContext)(null);
M6.displayName = "NestingContext";
function U5(t18) {
  return "children" in t18 ? U5(t18.children) : t18.current.filter(({ el: n7 }) => n7.current !== null).filter(({ state: n7 }) => n7 === "visible").length > 0;
}
function se3(t18, n7) {
  let r9 = s2(t18), s18 = (0, import_react95.useRef)([]), R5 = f8(), D7 = p(), p7 = o2((i9, e4 = v.Hidden) => {
    let a12 = s18.current.findIndex(({ el: o14 }) => o14 === i9);
    a12 !== -1 && (u(e4, { [v.Unmount]() {
      s18.current.splice(a12, 1);
    }, [v.Hidden]() {
      s18.current[a12].state = "hidden";
    } }), D7.microTask(() => {
      var o14;
      !U5(s18) && R5.current && ((o14 = r9.current) == null || o14.call(r9));
    }));
  }), x4 = o2((i9) => {
    let e4 = s18.current.find(({ el: a12 }) => a12 === i9);
    return e4 ? e4.state !== "visible" && (e4.state = "visible") : s18.current.push({ el: i9, state: "visible" }), () => p7(i9, v.Unmount);
  }), h10 = (0, import_react95.useRef)([]), v6 = (0, import_react95.useRef)(Promise.resolve()), u12 = (0, import_react95.useRef)({ enter: [], leave: [], idle: [] }), g5 = o2((i9, e4, a12) => {
    h10.current.splice(0), n7 && (n7.chains.current[e4] = n7.chains.current[e4].filter(([o14]) => o14 !== i9)), n7 == null || n7.chains.current[e4].push([i9, new Promise((o14) => {
      h10.current.push(o14);
    })]), n7 == null || n7.chains.current[e4].push([i9, new Promise((o14) => {
      Promise.all(u12.current[e4].map(([f15, N7]) => N7)).then(() => o14());
    })]), e4 === "enter" ? v6.current = v6.current.then(() => n7 == null ? void 0 : n7.wait.current).then(() => a12(e4)) : a12(e4);
  }), d16 = o2((i9, e4, a12) => {
    Promise.all(u12.current[e4].splice(0).map(([o14, f15]) => f15)).then(() => {
      var o14;
      (o14 = h10.current.shift()) == null || o14();
    }).then(() => a12(e4));
  });
  return (0, import_react95.useMemo)(() => ({ children: s18, register: x4, unregister: p7, onStart: g5, onStop: d16, wait: v6, chains: u12 }), [x4, p7, s18, g5, d16, u12, v6]);
}
function Ne4() {
}
var Pe6 = ["beforeEnter", "afterEnter", "beforeLeave", "afterLeave"];
function ae2(t18) {
  var r9;
  let n7 = {};
  for (let s18 of Pe6)
    n7[s18] = (r9 = t18[s18]) != null ? r9 : Ne4;
  return n7;
}
function Re3(t18) {
  let n7 = (0, import_react95.useRef)(ae2(t18));
  return (0, import_react95.useEffect)(() => {
    n7.current = ae2(t18);
  }, [t18]), n7;
}
var De3 = "div";
var le2 = O2.RenderStrategy;
function He4(t18, n7) {
  var Q6, Y4;
  let { beforeEnter: r9, afterEnter: s18, beforeLeave: R5, afterLeave: D7, enter: p7, enterFrom: x4, enterTo: h10, entered: v6, leave: u12, leaveFrom: g5, leaveTo: d16, ...i9 } = t18, e4 = (0, import_react95.useRef)(null), a12 = y3(e4, n7), o14 = (Q6 = i9.unmount) == null || Q6 ? v.Unmount : v.Hidden, { show: f15, appear: N7, initial: T8 } = ye5(), [l12, j6] = (0, import_react95.useState)(f15 ? "visible" : "hidden"), z5 = xe5(), { register: L2, unregister: O4 } = z5;
  (0, import_react95.useEffect)(() => L2(e4), [L2, e4]), (0, import_react95.useEffect)(() => {
    if (o14 === v.Hidden && e4.current) {
      if (f15 && l12 !== "visible") {
        j6("visible");
        return;
      }
      return u(l12, { ["hidden"]: () => O4(e4), ["visible"]: () => L2(e4) });
    }
  }, [l12, e4, L2, O4, f15, o14]);
  let k4 = s2({ base: S8(i9.className), enter: S8(p7), enterFrom: S8(x4), enterTo: S8(h10), entered: S8(v6), leave: S8(u12), leaveFrom: S8(g5), leaveTo: S8(d16) }), V5 = Re3({ beforeEnter: r9, afterEnter: s18, beforeLeave: R5, afterLeave: D7 }), G4 = l2();
  (0, import_react95.useEffect)(() => {
    if (G4 && l12 === "visible" && e4.current === null)
      throw new Error("Did you forget to passthrough the `ref` to the actual DOM node?");
  }, [e4, l12, G4]);
  let Te4 = T8 && !N7, K6 = N7 && f15 && T8, de7 = (() => !G4 || Te4 ? "idle" : f15 ? "enter" : "leave")(), H6 = c11(0), fe5 = o2((C7) => u(C7, { enter: () => {
    H6.addFlag(d5.Opening), V5.current.beforeEnter();
  }, leave: () => {
    H6.addFlag(d5.Closing), V5.current.beforeLeave();
  }, idle: () => {
  } })), me5 = o2((C7) => u(C7, { enter: () => {
    H6.removeFlag(d5.Opening), V5.current.afterEnter();
  }, leave: () => {
    H6.removeFlag(d5.Closing), V5.current.afterLeave();
  }, idle: () => {
  } })), w6 = se3(() => {
    j6("hidden"), O4(e4);
  }, z5), B4 = (0, import_react95.useRef)(false);
  D6({ immediate: K6, container: e4, classes: k4, direction: de7, onStart: s2((C7) => {
    B4.current = true, w6.onStart(e4, C7, fe5);
  }), onStop: s2((C7) => {
    B4.current = false, w6.onStop(e4, C7, me5), C7 === "leave" && !U5(w6) && (j6("hidden"), O4(e4));
  }) });
  let P5 = i9, ce5 = { ref: a12 };
  return K6 ? P5 = { ...P5, className: t9(i9.className, ...k4.current.enter, ...k4.current.enterFrom) } : B4.current && (P5.className = t9(i9.className, (Y4 = e4.current) == null ? void 0 : Y4.className), P5.className === "" && delete P5.className), import_react95.default.createElement(M6.Provider, { value: w6 }, import_react95.default.createElement(s9, { value: u(l12, { ["visible"]: d5.Open, ["hidden"]: d5.Closed }) | H6.flags }, C({ ourProps: ce5, theirProps: P5, defaultTag: De3, features: le2, visible: l12 === "visible", name: "Transition.Child" })));
}
function Fe4(t18, n7) {
  let { show: r9, appear: s18 = false, unmount: R5 = true, ...D7 } = t18, p7 = (0, import_react95.useRef)(null), x4 = y3(p7, n7);
  l2();
  let h10 = u4();
  if (r9 === void 0 && h10 !== null && (r9 = (h10 & d5.Open) === d5.Open), ![true, false].includes(r9))
    throw new Error("A <Transition /> is used but it is missing a `show={true | false}` prop.");
  let [v6, u12] = (0, import_react95.useState)(r9 ? "visible" : "hidden"), g5 = se3(() => {
    u12("hidden");
  }), [d16, i9] = (0, import_react95.useState)(true), e4 = (0, import_react95.useRef)([r9]);
  l(() => {
    d16 !== false && e4.current[e4.current.length - 1] !== r9 && (e4.current.push(r9), i9(false));
  }, [e4, r9]);
  let a12 = (0, import_react95.useMemo)(() => ({ show: r9, appear: s18, initial: d16 }), [r9, s18, d16]);
  (0, import_react95.useEffect)(() => {
    if (r9)
      u12("visible");
    else if (!U5(g5))
      u12("hidden");
    else {
      let T8 = p7.current;
      if (!T8)
        return;
      let l12 = T8.getBoundingClientRect();
      l12.x === 0 && l12.y === 0 && l12.width === 0 && l12.height === 0 && u12("hidden");
    }
  }, [r9, g5]);
  let o14 = { unmount: R5 }, f15 = o2(() => {
    var T8;
    d16 && i9(false), (T8 = t18.beforeEnter) == null || T8.call(t18);
  }), N7 = o2(() => {
    var T8;
    d16 && i9(false), (T8 = t18.beforeLeave) == null || T8.call(t18);
  });
  return import_react95.default.createElement(M6.Provider, { value: g5 }, import_react95.default.createElement(I8.Provider, { value: a12 }, C({ ourProps: { ...o14, as: import_react95.Fragment, children: import_react95.default.createElement(ue6, { ref: x4, ...o14, ...D7, beforeEnter: f15, beforeLeave: N7 }) }, theirProps: {}, defaultTag: import_react95.Fragment, features: le2, visible: v6 === "visible", name: "Transition" })));
}
function _e3(t18, n7) {
  let r9 = (0, import_react95.useContext)(I8) !== null, s18 = u4() !== null;
  return import_react95.default.createElement(import_react95.default.Fragment, null, !r9 && s18 ? import_react95.default.createElement(q5, { ref: n7, ...t18 }) : import_react95.default.createElement(ue6, { ref: n7, ...t18 }));
}
var q5 = U(Fe4);
var ue6 = U(He4);
var Le4 = U(_e3);
var qe6 = Object.assign(q5, { Child: Le4, Root: q5 });

// node_modules/@graphiql/react/dist/index.mjs
var import_react_dom3 = __toESM(require_react_dom(), 1);
var cn = Object.defineProperty;
var s17 = (e4, t18) => cn(e4, "name", { value: t18, configurable: true });
function ce4(e4) {
  const t18 = (0, import_react96.createContext)(null);
  return t18.displayName = e4, t18;
}
s17(ce4, "createNullableContext");
function ue7(e4) {
  function t18(n7) {
    var l12;
    const r9 = (0, import_react96.useContext)(e4);
    if (r9 === null && (n7 != null && n7.nonNull))
      throw new Error(
        `Tried to use \`${((l12 = n7.caller) == null ? void 0 : l12.name) || t18.caller.name}\` without the necessary context. Make sure to render the \`${e4.displayName}Provider\` component higher up the tree.`
      );
    return r9;
  }
  return s17(t18, "useGivenContext"), Object.defineProperty(t18, "name", {
    value: `use${e4.displayName}`
  }), t18;
}
s17(ue7, "createContextHook");
var Ht = ce4("StorageContext");
function Fn(e4) {
  const t18 = (0, import_react96.useRef)(true), [n7, r9] = (0, import_react96.useState)(new StorageAPI(e4.storage));
  return (0, import_react96.useEffect)(() => {
    t18.current ? t18.current = false : r9(new StorageAPI(e4.storage));
  }, [e4.storage]), (0, import_jsx_runtime.jsx)(Ht.Provider, { value: n7, children: e4.children });
}
s17(Fn, "StorageContextProvider");
var de6 = ue7(Ht);
var Bn = s17(({
  title: e4,
  titleId: t18,
  ...n7
}) => a11.createElement("svg", { height: "1em", viewBox: "0 0 14 14", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t18, ...n7 }, e4 ? a11.createElement("title", { id: t18 }, e4) : null, a11.createElement("path", { d: "M5.0484 1.40838C6.12624 0.33054 7.87376 0.330541 8.9516 1.40838L12.5916 5.0484C13.6695 6.12624 13.6695 7.87376 12.5916 8.9516L8.9516 12.5916C7.87376 13.6695 6.12624 13.6695 5.0484 12.5916L1.40838 8.9516C0.33054 7.87376 0.330541 6.12624 1.40838 5.0484L5.0484 1.40838Z", stroke: "currentColor", strokeWidth: 1.2 }), a11.createElement("rect", { x: 6, y: 6, width: 2, height: 2, rx: 1, fill: "currentColor" })), "SvgArgument");
var Wn = s17(({
  title: e4,
  titleId: t18,
  ...n7
}) => a11.createElement("svg", { height: "1em", viewBox: "0 0 14 9", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t18, ...n7 }, e4 ? a11.createElement("title", { id: t18 }, e4) : null, a11.createElement("path", { d: "M1 1L7 7L13 1", stroke: "currentColor", strokeWidth: 1.5 })), "SvgChevronDown");
var $n = s17(({
  title: e4,
  titleId: t18,
  ...n7
}) => a11.createElement("svg", { height: "1em", viewBox: "0 0 7 10", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t18, ...n7 }, e4 ? a11.createElement("title", { id: t18 }, e4) : null, a11.createElement("path", { d: "M6 1.04819L2 5.04819L6 9.04819", stroke: "currentColor", strokeWidth: 1.75 })), "SvgChevronLeft");
var _n = s17(({
  title: e4,
  titleId: t18,
  ...n7
}) => a11.createElement("svg", { height: "1em", viewBox: "0 0 14 9", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t18, ...n7 }, e4 ? a11.createElement("title", { id: t18 }, e4) : null, a11.createElement("path", { d: "M13 8L7 2L1 8", stroke: "currentColor", strokeWidth: 1.5 })), "SvgChevronUp");
var Zn = s17(({
  title: e4,
  titleId: t18,
  ...n7
}) => a11.createElement("svg", { height: "1em", viewBox: "0 0 14 14", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t18, ...n7 }, e4 ? a11.createElement("title", { id: t18 }, e4) : null, a11.createElement("path", { d: "M1 1L12.9998 12.9997", stroke: "currentColor", strokeWidth: 1.5 }), a11.createElement("path", { d: "M13 1L1.00079 13.0003", stroke: "currentColor", strokeWidth: 1.5 })), "SvgClose");
var Gn = s17(({
  title: e4,
  titleId: t18,
  ...n7
}) => a11.createElement("svg", { height: "1em", viewBox: "-2 -2 22 22", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t18, ...n7 }, e4 ? a11.createElement("title", { id: t18 }, e4) : null, a11.createElement("path", { d: "M11.25 14.2105V15.235C11.25 16.3479 10.3479 17.25 9.23501 17.25H2.76499C1.65214 17.25 0.75 16.3479 0.75 15.235L0.75 8.76499C0.75 7.65214 1.65214 6.75 2.76499 6.75L3.78947 6.75", stroke: "currentColor", strokeWidth: 1.5 }), a11.createElement("rect", { x: 6.75, y: 0.75, width: 10.5, height: 10.5, rx: 2.2069, stroke: "currentColor", strokeWidth: 1.5 })), "SvgCopy");
var Qn = s17(({
  title: e4,
  titleId: t18,
  ...n7
}) => a11.createElement("svg", { height: "1em", viewBox: "0 0 14 14", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t18, ...n7 }, e4 ? a11.createElement("title", { id: t18 }, e4) : null, a11.createElement("path", { d: "M5.0484 1.40838C6.12624 0.33054 7.87376 0.330541 8.9516 1.40838L12.5916 5.0484C13.6695 6.12624 13.6695 7.87376 12.5916 8.9516L8.9516 12.5916C7.87376 13.6695 6.12624 13.6695 5.0484 12.5916L1.40838 8.9516C0.33054 7.87376 0.330541 6.12624 1.40838 5.0484L5.0484 1.40838Z", stroke: "currentColor", strokeWidth: 1.2 }), a11.createElement("path", { d: "M5 9L9 5", stroke: "currentColor", strokeWidth: 1.2 }), a11.createElement("path", { d: "M5 5L9 9", stroke: "currentColor", strokeWidth: 1.2 })), "SvgDeprecatedArgument");
var jn = s17(({
  title: e4,
  titleId: t18,
  ...n7
}) => a11.createElement("svg", { height: "1em", viewBox: "0 0 12 12", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t18, ...n7 }, e4 ? a11.createElement("title", { id: t18 }, e4) : null, a11.createElement("path", { d: "M4 8L8 4", stroke: "currentColor", strokeWidth: 1.2 }), a11.createElement("path", { d: "M4 4L8 8", stroke: "currentColor", strokeWidth: 1.2 }), a11.createElement("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M8.5 1.2H9C9.99411 1.2 10.8 2.00589 10.8 3V9C10.8 9.99411 9.99411 10.8 9 10.8H8.5V12H9C10.6569 12 12 10.6569 12 9V3C12 1.34315 10.6569 0 9 0H8.5V1.2ZM3.5 1.2V0H3C1.34315 0 0 1.34315 0 3V9C0 10.6569 1.34315 12 3 12H3.5V10.8H3C2.00589 10.8 1.2 9.99411 1.2 9V3C1.2 2.00589 2.00589 1.2 3 1.2H3.5Z", fill: "currentColor" })), "SvgDeprecatedEnumValue");
var zn = s17(({
  title: e4,
  titleId: t18,
  ...n7
}) => a11.createElement("svg", { height: "1em", viewBox: "0 0 12 12", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t18, ...n7 }, e4 ? a11.createElement("title", { id: t18 }, e4) : null, a11.createElement("rect", { x: 0.6, y: 0.6, width: 10.8, height: 10.8, rx: 3.4, stroke: "currentColor", strokeWidth: 1.2 }), a11.createElement("path", { d: "M4 8L8 4", stroke: "currentColor", strokeWidth: 1.2 }), a11.createElement("path", { d: "M4 4L8 8", stroke: "currentColor", strokeWidth: 1.2 })), "SvgDeprecatedField");
var Un = s17(({
  title: e4,
  titleId: t18,
  ...n7
}) => a11.createElement("svg", { height: "1em", viewBox: "0 0.5 12 12", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t18, ...n7 }, e4 ? a11.createElement("title", { id: t18 }, e4) : null, a11.createElement("rect", { x: 7, y: 5.5, width: 2, height: 2, rx: 1, transform: "rotate(90 7 5.5)", fill: "currentColor" }), a11.createElement("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M10.8 9L10.8 9.5C10.8 10.4941 9.99411 11.3 9 11.3L3 11.3C2.00589 11.3 1.2 10.4941 1.2 9.5L1.2 9L-3.71547e-07 9L-3.93402e-07 9.5C-4.65826e-07 11.1569 1.34314 12.5 3 12.5L9 12.5C10.6569 12.5 12 11.1569 12 9.5L12 9L10.8 9ZM10.8 4L12 4L12 3.5C12 1.84315 10.6569 0.5 9 0.5L3 0.5C1.34315 0.5 -5.87117e-08 1.84315 -1.31135e-07 3.5L-1.5299e-07 4L1.2 4L1.2 3.5C1.2 2.50589 2.00589 1.7 3 1.7L9 1.7C9.99411 1.7 10.8 2.50589 10.8 3.5L10.8 4Z", fill: "currentColor" })), "SvgDirective");
var Kn = s17(({
  title: e4,
  titleId: t18,
  ...n7
}) => a11.createElement("svg", { height: "1em", viewBox: "0 0 20 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t18, ...n7 }, e4 ? a11.createElement("title", { id: t18 }, e4) : null, a11.createElement("path", { d: "M0.75 3C0.75 1.75736 1.75736 0.75 3 0.75H17.25C17.8023 0.75 18.25 1.19772 18.25 1.75V5.25", stroke: "currentColor", strokeWidth: 1.5 }), a11.createElement("path", { d: "M0.75 3C0.75 4.24264 1.75736 5.25 3 5.25H18.25C18.8023 5.25 19.25 5.69771 19.25 6.25V22.25C19.25 22.8023 18.8023 23.25 18.25 23.25H3C1.75736 23.25 0.75 22.2426 0.75 21V3Z", stroke: "currentColor", strokeWidth: 1.5 }), a11.createElement("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M3 5.25C1.75736 5.25 0.75 4.24264 0.75 3V21C0.75 22.2426 1.75736 23.25 3 23.25H18.25C18.8023 23.25 19.25 22.8023 19.25 22.25V6.25C19.25 5.69771 18.8023 5.25 18.25 5.25H3ZM13 11L6 11V12.5L13 12.5V11Z", fill: "currentColor" })), "SvgDocsFilled");
var Jn = s17(({
  title: e4,
  titleId: t18,
  ...n7
}) => a11.createElement("svg", { height: "1em", viewBox: "0 0 20 24", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t18, ...n7 }, e4 ? a11.createElement("title", { id: t18 }, e4) : null, a11.createElement("path", { d: "M0.75 3C0.75 4.24264 1.75736 5.25 3 5.25H17.25M0.75 3C0.75 1.75736 1.75736 0.75 3 0.75H16.25C16.8023 0.75 17.25 1.19772 17.25 1.75V5.25M0.75 3V21C0.75 22.2426 1.75736 23.25 3 23.25H18.25C18.8023 23.25 19.25 22.8023 19.25 22.25V6.25C19.25 5.69771 18.8023 5.25 18.25 5.25H17.25", stroke: "currentColor", strokeWidth: 1.5 }), a11.createElement("line", { x1: 13, y1: 11.75, x2: 6, y2: 11.75, stroke: "currentColor", strokeWidth: 1.5 })), "SvgDocs");
var Yn = s17(({
  title: e4,
  titleId: t18,
  ...n7
}) => a11.createElement("svg", { height: "1em", viewBox: "0 0 12 12", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t18, ...n7 }, e4 ? a11.createElement("title", { id: t18 }, e4) : null, a11.createElement("rect", { x: 5, y: 5, width: 2, height: 2, rx: 1, fill: "currentColor" }), a11.createElement("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M8.5 1.2H9C9.99411 1.2 10.8 2.00589 10.8 3V9C10.8 9.99411 9.99411 10.8 9 10.8H8.5V12H9C10.6569 12 12 10.6569 12 9V3C12 1.34315 10.6569 0 9 0H8.5V1.2ZM3.5 1.2V0H3C1.34315 0 0 1.34315 0 3V9C0 10.6569 1.34315 12 3 12H3.5V10.8H3C2.00589 10.8 1.2 9.99411 1.2 9V3C1.2 2.00589 2.00589 1.2 3 1.2H3.5Z", fill: "currentColor" })), "SvgEnumValue");
var Xn = s17(({
  title: e4,
  titleId: t18,
  ...n7
}) => a11.createElement("svg", { height: "1em", viewBox: "0 0 12 13", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t18, ...n7 }, e4 ? a11.createElement("title", { id: t18 }, e4) : null, a11.createElement("rect", { x: 0.6, y: 1.1, width: 10.8, height: 10.8, rx: 2.4, stroke: "currentColor", strokeWidth: 1.2 }), a11.createElement("rect", { x: 5, y: 5.5, width: 2, height: 2, rx: 1, fill: "currentColor" })), "SvgField");
var er = s17(({
  title: e4,
  titleId: t18,
  ...n7
}) => a11.createElement("svg", { height: "1em", viewBox: "0 0 24 20", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t18, ...n7 }, e4 ? a11.createElement("title", { id: t18 }, e4) : null, a11.createElement("path", { d: "M1.59375 9.52344L4.87259 12.9944L8.07872 9.41249", stroke: "currentColor", strokeWidth: 1.5, strokeLinecap: "square" }), a11.createElement("path", { d: "M13.75 5.25V10.75H18.75", stroke: "currentColor", strokeWidth: 1.5, strokeLinecap: "square" }), a11.createElement("path", { d: "M4.95427 11.9332C4.55457 10.0629 4.74441 8.11477 5.49765 6.35686C6.25089 4.59894 7.5305 3.11772 9.16034 2.11709C10.7902 1.11647 12.6901 0.645626 14.5986 0.769388C16.5071 0.893151 18.3303 1.60543 19.8172 2.80818C21.3042 4.01093 22.3818 5.64501 22.9017 7.48548C23.4216 9.32595 23.3582 11.2823 22.7203 13.0853C22.0824 14.8883 20.9013 16.4492 19.3396 17.5532C17.778 18.6572 15.9125 19.25 14 19.25", stroke: "currentColor", strokeWidth: 1.5 })), "SvgHistory");
var tr = s17(({
  title: e4,
  titleId: t18,
  ...n7
}) => a11.createElement("svg", { height: "1em", viewBox: "0 0 12 12", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t18, ...n7 }, e4 ? a11.createElement("title", { id: t18 }, e4) : null, a11.createElement("circle", { cx: 6, cy: 6, r: 5.4, stroke: "currentColor", strokeWidth: 1.2, strokeDasharray: "4.241025 4.241025", transform: "rotate(22.5)", "transform-origin": "center" }), a11.createElement("circle", { cx: 6, cy: 6, r: 1, fill: "currentColor" })), "SvgImplements");
var nr = s17(({
  title: e4,
  titleId: t18,
  ...n7
}) => a11.createElement("svg", { height: "1em", viewBox: "0 0 19 18", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t18, ...n7 }, e4 ? a11.createElement("title", { id: t18 }, e4) : null, a11.createElement("path", { d: "M1.5 14.5653C1.5 15.211 1.75652 15.8303 2.21314 16.2869C2.66975 16.7435 3.28905 17 3.9348 17C4.58054 17 5.19984 16.7435 5.65646 16.2869C6.11307 15.8303 6.36959 15.211 6.36959 14.5653V12.1305H3.9348C3.28905 12.1305 2.66975 12.387 2.21314 12.8437C1.75652 13.3003 1.5 13.9195 1.5 14.5653Z", stroke: "currentColor", strokeWidth: 1.125, strokeLinecap: "round", strokeLinejoin: "round" }), a11.createElement("path", { d: "M3.9348 1.00063C3.28905 1.00063 2.66975 1.25715 2.21314 1.71375C1.75652 2.17035 1.5 2.78964 1.5 3.43537C1.5 4.0811 1.75652 4.70038 2.21314 5.15698C2.66975 5.61358 3.28905 5.8701 3.9348 5.8701H6.36959V3.43537C6.36959 2.78964 6.11307 2.17035 5.65646 1.71375C5.19984 1.25715 4.58054 1.00063 3.9348 1.00063Z", stroke: "currentColor", strokeWidth: 1.125, strokeLinecap: "round", strokeLinejoin: "round" }), a11.createElement("path", { d: "M15.0652 12.1305H12.6304V14.5653C12.6304 15.0468 12.7732 15.5175 13.0407 15.9179C13.3083 16.3183 13.6885 16.6304 14.1334 16.8147C14.5783 16.9989 15.0679 17.0472 15.5402 16.9532C16.0125 16.8593 16.4464 16.6274 16.7869 16.2869C17.1274 15.9464 17.3593 15.5126 17.4532 15.0403C17.5472 14.568 17.4989 14.0784 17.3147 13.6335C17.1304 13.1886 16.8183 12.8084 16.4179 12.5409C16.0175 12.2733 15.5468 12.1305 15.0652 12.1305Z", stroke: "currentColor", strokeWidth: 1.125, strokeLinecap: "round", strokeLinejoin: "round" }), a11.createElement("path", { d: "M12.6318 5.86775H6.36955V12.1285H12.6318V5.86775Z", stroke: "currentColor", strokeWidth: 1.125, strokeLinecap: "round", strokeLinejoin: "round" }), a11.createElement("path", { d: "M17.5 3.43473C17.5 2.789 17.2435 2.16972 16.7869 1.71312C16.3303 1.25652 15.711 1 15.0652 1C14.4195 1 13.8002 1.25652 13.3435 1.71312C12.8869 2.16972 12.6304 2.789 12.6304 3.43473V5.86946H15.0652C15.711 5.86946 16.3303 5.61295 16.7869 5.15635C17.2435 4.69975 17.5 4.08046 17.5 3.43473Z", stroke: "currentColor", strokeWidth: 1.125, strokeLinecap: "round", strokeLinejoin: "round" })), "SvgKeyboardShortcut");
var rr = s17(({
  title: e4,
  titleId: t18,
  ...n7
}) => a11.createElement("svg", { height: "1em", viewBox: "0 0 13 13", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t18, ...n7 }, e4 ? a11.createElement("title", { id: t18 }, e4) : null, a11.createElement("circle", { cx: 5, cy: 5, r: 4.35, stroke: "currentColor", strokeWidth: 1.3 }), a11.createElement("line", { x1: 8.45962, y1: 8.54038, x2: 11.7525, y2: 11.8333, stroke: "currentColor", strokeWidth: 1.3 })), "SvgMagnifyingGlass");
var or = s17(({
  title: e4,
  titleId: t18,
  ...n7
}) => a11.createElement("svg", { height: "1em", viewBox: "-2 -2 22 22", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t18, ...n7 }, e4 ? a11.createElement("title", { id: t18 }, e4) : null, a11.createElement("path", { d: "M17.2492 6V2.9569C17.2492 1.73806 16.2611 0.75 15.0423 0.75L2.9569 0.75C1.73806 0.75 0.75 1.73806 0.75 2.9569L0.75 6", stroke: "currentColor", strokeWidth: 1.5 }), a11.createElement("path", { d: "M0.749873 12V15.0431C0.749873 16.2619 1.73794 17.25 2.95677 17.25H15.0421C16.261 17.25 17.249 16.2619 17.249 15.0431V12", stroke: "currentColor", strokeWidth: 1.5 }), a11.createElement("path", { d: "M6 4.5L9 7.5L12 4.5", stroke: "currentColor", strokeWidth: 1.5 }), a11.createElement("path", { d: "M12 13.5L9 10.5L6 13.5", stroke: "currentColor", strokeWidth: 1.5 })), "SvgMerge");
var lr = s17(({
  title: e4,
  titleId: t18,
  ...n7
}) => a11.createElement("svg", { height: "1em", viewBox: "0 0 14 14", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t18, ...n7 }, e4 ? a11.createElement("title", { id: t18 }, e4) : null, a11.createElement("path", { d: "M0.75 13.25L0.0554307 12.967C-0.0593528 13.2488 0.00743073 13.5719 0.224488 13.7851C0.441545 13.9983 0.765869 14.0592 1.04549 13.9393L0.75 13.25ZM12.8214 1.83253L12.2911 2.36286L12.2911 2.36286L12.8214 1.83253ZM12.8214 3.90194L13.3517 4.43227L12.8214 3.90194ZM10.0981 1.17859L9.56773 0.648259L10.0981 1.17859ZM12.1675 1.17859L12.6978 0.648258L12.6978 0.648257L12.1675 1.17859ZM2.58049 8.75697L3.27506 9.03994L2.58049 8.75697ZM2.70066 8.57599L3.23099 9.10632L2.70066 8.57599ZM5.2479 11.4195L4.95355 10.7297L5.2479 11.4195ZM5.42036 11.303L4.89003 10.7727L5.42036 11.303ZM4.95355 10.7297C4.08882 11.0987 3.41842 11.362 2.73535 11.6308C2.05146 11.9 1.35588 12.1743 0.454511 12.5607L1.04549 13.9393C1.92476 13.5624 2.60256 13.2951 3.28469 13.0266C3.96762 12.7578 4.65585 12.4876 5.54225 12.1093L4.95355 10.7297ZM1.44457 13.533L3.27506 9.03994L1.88592 8.474L0.0554307 12.967L1.44457 13.533ZM3.23099 9.10632L10.6284 1.70892L9.56773 0.648259L2.17033 8.04566L3.23099 9.10632ZM11.6371 1.70892L12.2911 2.36286L13.3517 1.3022L12.6978 0.648258L11.6371 1.70892ZM12.2911 3.37161L4.89003 10.7727L5.95069 11.8333L13.3517 4.43227L12.2911 3.37161ZM12.2911 2.36286C12.5696 2.64142 12.5696 3.09305 12.2911 3.37161L13.3517 4.43227C14.2161 3.56792 14.2161 2.16654 13.3517 1.3022L12.2911 2.36286ZM10.6284 1.70892C10.9069 1.43036 11.3586 1.43036 11.6371 1.70892L12.6978 0.648257C11.8335 -0.216088 10.4321 -0.216084 9.56773 0.648259L10.6284 1.70892ZM3.27506 9.03994C3.26494 9.06479 3.24996 9.08735 3.23099 9.10632L2.17033 8.04566C2.04793 8.16806 1.95123 8.31369 1.88592 8.474L3.27506 9.03994ZM5.54225 12.1093C5.69431 12.0444 5.83339 11.9506 5.95069 11.8333L4.89003 10.7727C4.90863 10.7541 4.92988 10.7398 4.95355 10.7297L5.54225 12.1093Z", fill: "currentColor" }), a11.createElement("path", { d: "M11.5 4.5L9.5 2.5", stroke: "currentColor", strokeWidth: 1.4026, strokeLinecap: "round", strokeLinejoin: "round" }), a11.createElement("path", { d: "M5.5 10.5L3.5 8.5", stroke: "currentColor", strokeWidth: 1.4026, strokeLinecap: "round", strokeLinejoin: "round" })), "SvgPen");
var ir = s17(({
  title: e4,
  titleId: t18,
  ...n7
}) => a11.createElement("svg", { height: "1em", viewBox: "0 0 16 18", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t18, ...n7 }, e4 ? a11.createElement("title", { id: t18 }, e4) : null, a11.createElement("path", { d: "M1.32226e-07 1.6609C7.22332e-08 0.907329 0.801887 0.424528 1.46789 0.777117L15.3306 8.11621C16.0401 8.49182 16.0401 9.50818 15.3306 9.88379L1.46789 17.2229C0.801886 17.5755 1.36076e-06 17.0927 1.30077e-06 16.3391L1.32226e-07 1.6609Z", fill: "currentColor" })), "SvgPlay");
var sr = s17(({
  title: e4,
  titleId: t18,
  ...n7
}) => a11.createElement("svg", { height: "1em", viewBox: "0 0 10 16", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t18, ...n7 }, e4 ? a11.createElement("title", { id: t18 }, e4) : null, a11.createElement("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M4.25 9.25V13.5H5.75V9.25L10 9.25V7.75L5.75 7.75V3.5H4.25V7.75L0 7.75V9.25L4.25 9.25Z", fill: "currentColor" })), "SvgPlus");
var ar = s17(({
  title: e4,
  titleId: t18,
  ...n7
}) => a11.createElement("svg", { width: 25, height: 25, viewBox: "0 0 25 25", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t18, ...n7 }, e4 ? a11.createElement("title", { id: t18 }, e4) : null, a11.createElement("path", { d: "M10.2852 24.0745L13.7139 18.0742", stroke: "currentColor", strokeWidth: 1.5625 }), a11.createElement("path", { d: "M14.5742 24.0749L17.1457 19.7891", stroke: "currentColor", strokeWidth: 1.5625 }), a11.createElement("path", { d: "M19.4868 24.0735L20.7229 21.7523C21.3259 20.6143 21.5457 19.3122 21.3496 18.0394C21.1535 16.7666 20.5519 15.591 19.6342 14.6874L23.7984 6.87853C24.0123 6.47728 24.0581 6.00748 23.9256 5.57249C23.7932 5.1375 23.4933 4.77294 23.0921 4.55901C22.6908 4.34509 22.221 4.29932 21.7861 4.43178C21.3511 4.56424 20.9865 4.86408 20.7726 5.26533L16.6084 13.0742C15.3474 12.8142 14.0362 12.9683 12.8699 13.5135C11.7035 14.0586 10.7443 14.9658 10.135 16.1L6 24.0735", stroke: "currentColor", strokeWidth: 1.5625 }), a11.createElement("path", { d: "M4 15L5 13L7 12L5 11L4 9L3 11L1 12L3 13L4 15Z", stroke: "currentColor", strokeWidth: 1.5625, strokeLinejoin: "round" }), a11.createElement("path", { d: "M11.5 8L12.6662 5.6662L15 4.5L12.6662 3.3338L11.5 1L10.3338 3.3338L8 4.5L10.3338 5.6662L11.5 8Z", stroke: "currentColor", strokeWidth: 1.5625, strokeLinejoin: "round" })), "SvgPrettify");
var cr = s17(({
  title: e4,
  titleId: t18,
  ...n7
}) => a11.createElement("svg", { height: "1em", viewBox: "0 0 16 16", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t18, ...n7 }, e4 ? a11.createElement("title", { id: t18 }, e4) : null, a11.createElement("path", { d: "M4.75 9.25H1.25V12.75", stroke: "currentColor", strokeWidth: 1, strokeLinecap: "square" }), a11.createElement("path", { d: "M11.25 6.75H14.75V3.25", stroke: "currentColor", strokeWidth: 1, strokeLinecap: "square" }), a11.createElement("path", { d: "M14.1036 6.65539C13.8 5.27698 13.0387 4.04193 11.9437 3.15131C10.8487 2.26069 9.48447 1.76694 8.0731 1.75043C6.66173 1.73392 5.28633 2.19563 4.17079 3.0604C3.05526 3.92516 2.26529 5.14206 1.92947 6.513", stroke: "currentColor", strokeWidth: 1 }), a11.createElement("path", { d: "M1.89635 9.34461C2.20001 10.723 2.96131 11.9581 4.05631 12.8487C5.15131 13.7393 6.51553 14.2331 7.9269 14.2496C9.33827 14.2661 10.7137 13.8044 11.8292 12.9396C12.9447 12.0748 13.7347 10.8579 14.0705 9.487", stroke: "currentColor", strokeWidth: 1 })), "SvgReload");
var ur = s17(({
  title: e4,
  titleId: t18,
  ...n7
}) => a11.createElement("svg", { height: "1em", viewBox: "0 0 13 13", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t18, ...n7 }, e4 ? a11.createElement("title", { id: t18 }, e4) : null, a11.createElement("rect", { x: 0.6, y: 0.6, width: 11.8, height: 11.8, rx: 5.9, stroke: "currentColor", strokeWidth: 1.2 }), a11.createElement("path", { d: "M4.25 7.5C4.25 6 5.75 5 6.5 6.5C7.25 8 8.75 7 8.75 5.5", stroke: "currentColor", strokeWidth: 1.2 })), "SvgRootType");
var dr = s17(({
  title: e4,
  titleId: t18,
  ...n7
}) => a11.createElement("svg", { height: "1em", viewBox: "0 0 21 20", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t18, ...n7 }, e4 ? a11.createElement("title", { id: t18 }, e4) : null, a11.createElement("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M9.29186 1.92702C9.06924 1.82745 8.87014 1.68202 8.70757 1.50024L7.86631 0.574931C7.62496 0.309957 7.30773 0.12592 6.95791 0.0479385C6.60809 -0.0300431 6.24274 0.00182978 5.91171 0.139208C5.58068 0.276585 5.3001 0.512774 5.10828 0.815537C4.91645 1.1183 4.82272 1.47288 4.83989 1.83089L4.90388 3.08019C4.91612 3.32348 4.87721 3.56662 4.78968 3.79394C4.70215 4.02126 4.56794 4.2277 4.39571 4.39994C4.22347 4.57219 4.01704 4.7064 3.78974 4.79394C3.56243 4.88147 3.3193 4.92038 3.07603 4.90814L1.8308 4.84414C1.47162 4.82563 1.11553 4.91881 0.811445 5.11086C0.507359 5.30292 0.270203 5.58443 0.132561 5.91671C-0.00508149 6.249 -0.0364554 6.61576 0.0427496 6.9666C0.121955 7.31744 0.307852 7.63514 0.5749 7.87606L1.50016 8.71204C1.68193 8.87461 1.82735 9.07373 1.92692 9.29636C2.02648 9.51898 2.07794 9.76012 2.07794 10.004C2.07794 10.2479 2.02648 10.489 1.92692 10.7116C1.82735 10.9343 1.68193 11.1334 1.50016 11.296L0.5749 12.1319C0.309856 12.3729 0.125575 12.6898 0.0471809 13.0393C-0.0312128 13.3888 9.64098e-05 13.754 0.13684 14.0851C0.273583 14.4162 0.509106 14.6971 0.811296 14.8894C1.11349 15.0817 1.46764 15.1762 1.82546 15.1599L3.0707 15.0959C3.31397 15.0836 3.5571 15.1225 3.7844 15.2101C4.01171 15.2976 4.21814 15.4318 4.39037 15.6041C4.56261 15.7763 4.69682 15.9827 4.78435 16.2101C4.87188 16.4374 4.91078 16.6805 4.89855 16.9238L4.83455 18.1691C4.81605 18.5283 4.90921 18.8844 5.10126 19.1885C5.2933 19.4926 5.5748 19.7298 5.90707 19.8674C6.23934 20.0051 6.60608 20.0365 6.9569 19.9572C7.30772 19.878 7.6254 19.6921 7.86631 19.4251L8.7129 18.4998C8.87547 18.318 9.07458 18.1725 9.29719 18.073C9.51981 17.9734 9.76093 17.9219 10.0048 17.9219C10.2487 17.9219 10.4898 17.9734 10.7124 18.073C10.935 18.1725 11.1341 18.318 11.2967 18.4998L12.1326 19.4251C12.3735 19.6921 12.6912 19.878 13.042 19.9572C13.3929 20.0365 13.7596 20.0051 14.0919 19.8674C14.4241 19.7298 14.7056 19.4926 14.8977 19.1885C15.0897 18.8844 15.1829 18.5283 15.1644 18.1691L15.1004 16.9238C15.0882 16.6805 15.1271 16.4374 15.2146 16.2101C15.3021 15.9827 15.4363 15.7763 15.6086 15.6041C15.7808 15.4318 15.9872 15.2976 16.2145 15.2101C16.4418 15.1225 16.685 15.0836 16.9282 15.0959L18.1735 15.1599C18.5326 15.1784 18.8887 15.0852 19.1928 14.8931C19.4969 14.7011 19.7341 14.4196 19.8717 14.0873C20.0093 13.755 20.0407 13.3882 19.9615 13.0374C19.8823 12.6866 19.6964 12.3689 19.4294 12.1279L18.5041 11.292C18.3223 11.1294 18.1769 10.9303 18.0774 10.7076C17.9778 10.485 17.9263 10.2439 17.9263 10C17.9263 9.75612 17.9778 9.51499 18.0774 9.29236C18.1769 9.06973 18.3223 8.87062 18.5041 8.70804L19.4294 7.87206C19.6964 7.63114 19.8823 7.31344 19.9615 6.9626C20.0407 6.61176 20.0093 6.245 19.8717 5.91271C19.7341 5.58043 19.4969 5.29892 19.1928 5.10686C18.8887 4.91481 18.5326 4.82163 18.1735 4.84014L16.9282 4.90414C16.685 4.91638 16.4418 4.87747 16.2145 4.78994C15.9872 4.7024 15.7808 4.56818 15.6086 4.39594C15.4363 4.2237 15.3021 4.01726 15.2146 3.78994C15.1271 3.56262 15.0882 3.31948 15.1004 3.07619L15.1644 1.83089C15.1829 1.4717 15.0897 1.11559 14.8977 0.811487C14.7056 0.507385 14.4241 0.270217 14.0919 0.132568C13.7596 -0.00508182 13.3929 -0.0364573 13.042 0.0427519C12.6912 0.121961 12.3735 0.307869 12.1326 0.574931L11.2914 1.50024C11.1288 1.68202 10.9297 1.82745 10.7071 1.92702C10.4845 2.02659 10.2433 2.07805 9.99947 2.07805C9.7556 2.07805 9.51448 2.02659 9.29186 1.92702ZM14.3745 10C14.3745 12.4162 12.4159 14.375 9.99977 14.375C7.58365 14.375 5.625 12.4162 5.625 10C5.625 7.58375 7.58365 5.625 9.99977 5.625C12.4159 5.625 14.3745 7.58375 14.3745 10Z", fill: "currentColor" })), "SvgSettings");
var hr = s17(({
  title: e4,
  titleId: t18,
  ...n7
}) => a11.createElement("svg", { height: "1em", viewBox: "0 0 14 14", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t18, ...n7 }, e4 ? a11.createElement("title", { id: t18 }, e4) : null, a11.createElement("path", { d: "M6.5782 1.07092C6.71096 0.643026 7.28904 0.643027 7.4218 1.07092L8.59318 4.84622C8.65255 5.03758 8.82284 5.16714 9.01498 5.16714L12.8056 5.16714C13.2353 5.16714 13.4139 5.74287 13.0663 6.00732L9.99962 8.34058C9.84418 8.45885 9.77913 8.66848 9.83851 8.85984L11.0099 12.6351C11.1426 13.063 10.675 13.4189 10.3274 13.1544L7.26069 10.8211C7.10524 10.7029 6.89476 10.7029 6.73931 10.8211L3.6726 13.1544C3.32502 13.4189 2.85735 13.063 2.99012 12.6351L4.16149 8.85984C4.22087 8.66848 4.15582 8.45885 4.00038 8.34058L0.933671 6.00732C0.586087 5.74287 0.764722 5.16714 1.19436 5.16714L4.98502 5.16714C5.17716 5.16714 5.34745 5.03758 5.40682 4.84622L6.5782 1.07092Z", fill: "currentColor", stroke: "currentColor" })), "SvgStarFilled");
var mr = s17(({
  title: e4,
  titleId: t18,
  ...n7
}) => a11.createElement("svg", { height: "1em", viewBox: "0 0 14 14", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t18, ...n7 }, e4 ? a11.createElement("title", { id: t18 }, e4) : null, a11.createElement("path", { d: "M6.5782 1.07092C6.71096 0.643026 7.28904 0.643027 7.4218 1.07092L8.59318 4.84622C8.65255 5.03758 8.82284 5.16714 9.01498 5.16714L12.8056 5.16714C13.2353 5.16714 13.4139 5.74287 13.0663 6.00732L9.99962 8.34058C9.84418 8.45885 9.77913 8.66848 9.83851 8.85984L11.0099 12.6351C11.1426 13.063 10.675 13.4189 10.3274 13.1544L7.26069 10.8211C7.10524 10.7029 6.89476 10.7029 6.73931 10.8211L3.6726 13.1544C3.32502 13.4189 2.85735 13.063 2.99012 12.6351L4.16149 8.85984C4.22087 8.66848 4.15582 8.45885 4.00038 8.34058L0.933671 6.00732C0.586087 5.74287 0.764722 5.16714 1.19436 5.16714L4.98502 5.16714C5.17716 5.16714 5.34745 5.03758 5.40682 4.84622L6.5782 1.07092Z", stroke: "currentColor", strokeWidth: 1.5 })), "SvgStar");
var pr = s17(({
  title: e4,
  titleId: t18,
  ...n7
}) => a11.createElement("svg", { height: "1em", viewBox: "0 0 16 16", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t18, ...n7 }, e4 ? a11.createElement("title", { id: t18 }, e4) : null, a11.createElement("rect", { width: 16, height: 16, rx: 2, fill: "currentColor" })), "SvgStop");
var fr = s17(({
  title: e4,
  titleId: t18,
  ...n7
}) => a11.createElement("svg", { height: "1em", viewBox: "0 0 13 13", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-labelledby": t18, ...n7 }, e4 ? a11.createElement("title", { id: t18 }, e4) : null, a11.createElement("rect", { x: 0.6, y: 0.6, width: 11.8, height: 11.8, rx: 5.9, stroke: "currentColor", strokeWidth: 1.2 }), a11.createElement("rect", { x: 5.5, y: 5.5, width: 2, height: 2, rx: 1, fill: "currentColor" })), "SvgType");
var gr = q6(Bn);
var Uo = q6(Wn);
var Cr = q6($n);
var Ko = q6(_n);
var st2 = q6(Zn);
var Jo = q6(Gn);
var yr = q6(Qn);
var vr = q6(jn);
var br = q6(zn);
var wr = q6(Un);
var xr = q6(Kn, "filled docs icon");
var Er = q6(Jn);
var Lr = q6(Yn);
var Sr = q6(Xn);
var Nr = q6(er);
var kr = q6(tr);
var Yo = q6(nr);
var Tr = q6(rr);
var Xo = q6(or);
var Mr = q6(lr);
var Vr = q6(ir);
var el = q6(sr);
var tl = q6(ar);
var nl = q6(cr);
var Rr = q6(ur);
var rl = q6(dr);
var Hr = q6(hr, "filled star icon");
var Ar = q6(mr);
var Pr = q6(pr);
var ke3 = q6(fr);
function q6(e4, t18 = e4.name.replace("Svg", "").replaceAll(/([A-Z])/g, " $1").trimStart().toLowerCase() + " icon") {
  return e4.defaultProps = { title: t18 }, e4;
}
s17(q6, "generateIcon");
var X5 = (0, import_react96.forwardRef)((e4, t18) => (0, import_jsx_runtime.jsx)(
  "button",
  {
    ...e4,
    ref: t18,
    className: clsx("graphiql-un-styled", e4.className)
  }
));
X5.displayName = "UnStyledButton";
var Fe5 = (0, import_react96.forwardRef)((e4, t18) => (0, import_jsx_runtime.jsx)(
  "button",
  {
    ...e4,
    ref: t18,
    className: clsx(
      "graphiql-button",
      {
        success: "graphiql-button-success",
        error: "graphiql-button-error"
      }[e4.state],
      e4.className
    )
  }
));
Fe5.displayName = "Button";
var qr = (0, import_react96.forwardRef)((e4, t18) => (0, import_jsx_runtime.jsx)(
  "div",
  {
    ...e4,
    ref: t18,
    className: clsx("graphiql-button-group", e4.className)
  }
));
qr.displayName = "ButtonGroup";
var Le5 = s17((e4, t18) => Object.entries(t18).reduce((n7, [r9, l12]) => (n7[r9] = l12, n7), e4), "createComponentGroup");
var At = (0, import_react96.forwardRef)((e4, t18) => (0, import_jsx_runtime.jsx)($5d3850c4d0b4e6c7$export$f39c2d165cd861fe, { asChild: true, children: (0, import_jsx_runtime.jsxs)(
  X5,
  {
    ...e4,
    ref: t18,
    type: "button",
    className: clsx("graphiql-dialog-close", e4.className),
    children: [
      (0, import_jsx_runtime.jsx)($ea1ef594cf570d83$export$be92b6f5f03c0fe9, { children: "Close dialog" }),
      (0, import_jsx_runtime.jsx)(st2, {})
    ]
  }
) }));
At.displayName = "Dialog.Close";
function Dr({
  children: e4,
  ...t18
}) {
  return (0, import_jsx_runtime.jsx)($5d3850c4d0b4e6c7$export$be92b6f5f03c0fe9, { ...t18, children: (0, import_jsx_runtime.jsxs)($5d3850c4d0b4e6c7$export$602eac185826482c, { children: [
    (0, import_jsx_runtime.jsx)($5d3850c4d0b4e6c7$export$c6fdb837b070b4ff, { className: "graphiql-dialog-overlay" }),
    (0, import_jsx_runtime.jsx)($5d3850c4d0b4e6c7$export$7c6e2c02157bb7d2, { className: "graphiql-dialog", children: e4 })
  ] }) });
}
s17(Dr, "DialogRoot");
var ol = Le5(Dr, {
  Close: At,
  Title: $5d3850c4d0b4e6c7$export$f99233281efd08a0,
  Trigger: $5d3850c4d0b4e6c7$export$41fb9f06171c75f4,
  Description: $5d3850c4d0b4e6c7$export$393edc798c47379d
});
var Pt = (0, import_react96.forwardRef)(
  (e4, t18) => (0, import_jsx_runtime.jsx)($d08ef79370b62062$export$41fb9f06171c75f4, { asChild: true, children: (0, import_jsx_runtime.jsx)(
    "button",
    {
      ...e4,
      ref: t18,
      className: clsx("graphiql-un-styled", e4.className)
    }
  ) })
);
Pt.displayName = "DropdownMenuButton";
function Ir({
  children: e4,
  align: t18 = "start",
  sideOffset: n7 = 5,
  className: r9,
  ...l12
}) {
  return (0, import_jsx_runtime.jsx)($d08ef79370b62062$export$602eac185826482c, { children: (0, import_jsx_runtime.jsx)(
    $d08ef79370b62062$export$7c6e2c02157bb7d2,
    {
      align: t18,
      sideOffset: n7,
      className: clsx("graphiql-dropdown-content", r9),
      ...l12,
      children: e4
    }
  ) });
}
s17(Ir, "Content");
var Or = s17(({ className: e4, children: t18, ...n7 }) => (0, import_jsx_runtime.jsx)($d08ef79370b62062$export$6d08773d2e66f8f2, { className: clsx("graphiql-dropdown-item", e4), ...n7, children: t18 }), "Item");
var le3 = Le5($d08ef79370b62062$export$be92b6f5f03c0fe9, {
  Button: Pt,
  Item: Or,
  Content: Ir
});
var Ae5 = new import_markdown_it.default({
  breaks: true,
  linkify: true
});
var ne5 = (0, import_react96.forwardRef)(({ children: e4, onlyShowFirstChild: t18, type: n7, ...r9 }, l12) => (0, import_jsx_runtime.jsx)(
  "div",
  {
    ...r9,
    ref: l12,
    className: clsx(
      `graphiql-markdown-${n7}`,
      t18 && "graphiql-markdown-preview",
      r9.className
    ),
    dangerouslySetInnerHTML: { __html: Ae5.render(e4) }
  }
));
ne5.displayName = "MarkdownContent";
var qt2 = (0, import_react96.forwardRef)(
  (e4, t18) => (0, import_jsx_runtime.jsx)(
    "div",
    {
      ...e4,
      ref: t18,
      className: clsx("graphiql-spinner", e4.className)
    }
  )
);
qt2.displayName = "Spinner";
function Fr({
  children: e4,
  align: t18 = "start",
  side: n7 = "bottom",
  sideOffset: r9 = 5,
  label: l12
}) {
  return (0, import_jsx_runtime.jsxs)($a093c7e1ec25a057$export$be92b6f5f03c0fe9, { children: [
    (0, import_jsx_runtime.jsx)($a093c7e1ec25a057$export$41fb9f06171c75f4, { asChild: true, children: e4 }),
    (0, import_jsx_runtime.jsx)($a093c7e1ec25a057$export$602eac185826482c, { children: (0, import_jsx_runtime.jsx)(
      $a093c7e1ec25a057$export$7c6e2c02157bb7d2,
      {
        className: "graphiql-tooltip",
        align: t18,
        side: n7,
        sideOffset: r9,
        children: l12
      }
    ) })
  ] });
}
s17(Fr, "TooltipRoot");
var ae3 = Le5(Fr, {
  Provider: $a093c7e1ec25a057$export$2881499e37b75b9a
});
var Dt = (0, import_react96.forwardRef)(
  ({ isActive: e4, value: t18, children: n7, className: r9, ...l12 }, c14) => (0, import_jsx_runtime.jsx)(
    Reorder.Item,
    {
      ...l12,
      ref: c14,
      value: t18,
      "aria-selected": e4 ? "true" : void 0,
      role: "tab",
      className: clsx(
        "graphiql-tab",
        e4 && "graphiql-tab-active",
        r9
      ),
      children: n7
    }
  )
);
Dt.displayName = "Tab";
var It2 = (0, import_react96.forwardRef)((e4, t18) => (0, import_jsx_runtime.jsx)(
  X5,
  {
    ...e4,
    ref: t18,
    type: "button",
    className: clsx("graphiql-tab-button", e4.className),
    children: e4.children
  }
));
It2.displayName = "Tab.Button";
var Ot = (0, import_react96.forwardRef)(
  (e4, t18) => (0, import_jsx_runtime.jsx)(ae3, { label: "Close Tab", children: (0, import_jsx_runtime.jsx)(
    X5,
    {
      "aria-label": "Close Tab",
      ...e4,
      ref: t18,
      type: "button",
      className: clsx("graphiql-tab-close", e4.className),
      children: (0, import_jsx_runtime.jsx)(st2, {})
    }
  ) })
);
Ot.displayName = "Tab.Close";
var ll = Le5(Dt, {
  Button: It2,
  Close: Ot
});
var Br = (0, import_react96.forwardRef)(
  ({ values: e4, onReorder: t18, children: n7, className: r9, ...l12 }, c14) => (0, import_jsx_runtime.jsx)(
    Reorder.Group,
    {
      ...l12,
      ref: c14,
      values: e4,
      onReorder: t18,
      axis: "x",
      role: "tablist",
      className: clsx("graphiql-tabs", r9),
      children: n7
    }
  )
);
Br.displayName = "Tabs";
var Ft = ce4("HistoryContext");
function Wr(e4) {
  var p7;
  const t18 = de6(), n7 = (0, import_react96.useRef)(
    new HistoryStore(
      // Fall back to a noop storage when the StorageContext is empty
      t18 || new StorageAPI(null),
      e4.maxHistoryLength || $r
    )
  ), [r9, l12] = (0, import_react96.useState)(((p7 = n7.current) == null ? void 0 : p7.queries) || []), c14 = (0, import_react96.useCallback)(
    ({ query: m13, variables: y7, headers: u12, operationName: g5 }) => {
      var C7;
      (C7 = n7.current) == null || C7.updateHistory(
        m13,
        y7,
        u12,
        g5
      ), l12(n7.current.queries);
    },
    []
  ), i9 = (0, import_react96.useCallback)(
    ({ query: m13, variables: y7, headers: u12, operationName: g5, label: C7, favorite: d16 }) => {
      n7.current.editLabel(
        m13,
        y7,
        u12,
        g5,
        C7,
        d16
      ), l12(n7.current.queries);
    },
    []
  ), h10 = (0, import_react96.useCallback)(
    ({ query: m13, variables: y7, headers: u12, operationName: g5, label: C7, favorite: d16 }) => {
      n7.current.toggleFavorite(
        m13,
        y7,
        u12,
        g5,
        C7,
        d16
      ), l12(n7.current.queries);
    },
    []
  ), f15 = (0, import_react96.useMemo)(
    () => ({ addToHistory: c14, editLabel: i9, items: r9, toggleFavorite: h10 }),
    [c14, i9, r9, h10]
  );
  return (0, import_jsx_runtime.jsx)(Ft.Provider, { value: f15, children: e4.children });
}
s17(Wr, "HistoryContextProvider");
var Be3 = ue7(Ft);
var $r = 20;
function _r() {
  const { items: e4 } = Be3({ nonNull: true }), t18 = e4.slice().reverse();
  return (0, import_jsx_runtime.jsxs)("section", { "aria-label": "History", className: "graphiql-history", children: [
    (0, import_jsx_runtime.jsx)("div", { className: "graphiql-history-header", children: "History" }),
    (0, import_jsx_runtime.jsx)("ul", { className: "graphiql-history-items", children: t18.map((n7, r9) => (0, import_jsx_runtime.jsxs)(import_react96.Fragment, { children: [
      (0, import_jsx_runtime.jsx)(Xe4, { item: n7 }),
      n7.favorite && t18[r9 + 1] && !t18[r9 + 1].favorite ? (0, import_jsx_runtime.jsx)("div", { className: "graphiql-history-item-spacer" }) : null
    ] }, `${r9}:${n7.label || n7.query}`)) })
  ] });
}
s17(_r, "History");
function Xe4(e4) {
  const { editLabel: t18, toggleFavorite: n7 } = Be3({
    nonNull: true,
    caller: Xe4
  }), { headerEditor: r9, queryEditor: l12, variableEditor: c14 } = j5({
    nonNull: true,
    caller: Xe4
  }), i9 = (0, import_react96.useRef)(null), h10 = (0, import_react96.useRef)(null), [f15, p7] = (0, import_react96.useState)(false);
  (0, import_react96.useEffect)(() => {
    var b9;
    f15 && ((b9 = i9.current) == null || b9.focus());
  }, [f15]);
  const m13 = e4.item.label || e4.item.operationName || Zr(e4.item.query), y7 = (0, import_react96.useCallback)(() => {
    var b9;
    p7(false), t18({ ...e4.item, label: (b9 = i9.current) == null ? void 0 : b9.value });
  }, [t18, e4.item]), u12 = (0, import_react96.useCallback)(() => {
    p7(false);
  }, []), g5 = (0, import_react96.useCallback)(
    (b9) => {
      b9.stopPropagation(), p7(true);
    },
    []
  ), C7 = (0, import_react96.useCallback)(() => {
    const { query: b9, variables: N7, headers: L2 } = e4.item;
    l12 == null || l12.setValue(b9 ?? ""), c14 == null || c14.setValue(N7 ?? ""), r9 == null || r9.setValue(L2 ?? "");
  }, [e4.item, l12, c14, r9]), d16 = (0, import_react96.useCallback)(
    (b9) => {
      b9.stopPropagation(), n7(e4.item);
    },
    [e4.item, n7]
  );
  return (0, import_jsx_runtime.jsx)("li", { className: clsx("graphiql-history-item", f15 && "editable"), children: f15 ? (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
    (0, import_jsx_runtime.jsx)(
      "input",
      {
        type: "text",
        defaultValue: e4.item.label,
        ref: i9,
        onKeyDown: (b9) => {
          b9.key === "Esc" ? p7(false) : b9.key === "Enter" && (p7(false), t18({ ...e4.item, label: b9.currentTarget.value }));
        },
        placeholder: "Type a label"
      }
    ),
    (0, import_jsx_runtime.jsx)(X5, { type: "button", ref: h10, onClick: y7, children: "Save" }),
    (0, import_jsx_runtime.jsx)(X5, { type: "button", ref: h10, onClick: u12, children: (0, import_jsx_runtime.jsx)(st2, {}) })
  ] }) : (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
    (0, import_jsx_runtime.jsx)(
      X5,
      {
        type: "button",
        className: "graphiql-history-item-label",
        onClick: C7,
        children: m13
      }
    ),
    (0, import_jsx_runtime.jsx)(ae3, { label: "Edit label", children: (0, import_jsx_runtime.jsx)(
      X5,
      {
        type: "button",
        className: "graphiql-history-item-action",
        onClick: g5,
        "aria-label": "Edit label",
        children: (0, import_jsx_runtime.jsx)(Mr, { "aria-hidden": "true" })
      }
    ) }),
    (0, import_jsx_runtime.jsx)(
      ae3,
      {
        label: e4.item.favorite ? "Remove favorite" : "Add favorite",
        children: (0, import_jsx_runtime.jsx)(
          X5,
          {
            type: "button",
            className: "graphiql-history-item-action",
            onClick: d16,
            "aria-label": e4.item.favorite ? "Remove favorite" : "Add favorite",
            children: e4.item.favorite ? (0, import_jsx_runtime.jsx)(Hr, { "aria-hidden": "true" }) : (0, import_jsx_runtime.jsx)(Ar, { "aria-hidden": "true" })
          }
        )
      }
    )
  ] }) });
}
s17(Xe4, "HistoryItem");
function Zr(e4) {
  return e4 == null ? void 0 : e4.split(`
`).map((t18) => t18.replace(/#(.*)/, "")).join(" ").replaceAll("{", " { ").replaceAll("}", " } ").replaceAll(/[\s]{2,}/g, " ");
}
s17(Zr, "formatQuery");
var Bt = ce4("ExecutionContext");
function et5({
  fetcher: e4,
  getDefaultFieldNames: t18,
  children: n7,
  operationName: r9
}) {
  if (!e4)
    throw new TypeError(
      "The `ExecutionContextProvider` component requires a `fetcher` function to be passed as prop."
    );
  const {
    externalFragments: l12,
    headerEditor: c14,
    queryEditor: i9,
    responseEditor: h10,
    variableEditor: f15,
    updateActiveTabValues: p7
  } = j5({ nonNull: true, caller: et5 }), m13 = Be3(), y7 = ot4({
    getDefaultFieldNames: t18,
    caller: et5
  }), [u12, g5] = (0, import_react96.useState)(false), [C7, d16] = (0, import_react96.useState)(null), b9 = (0, import_react96.useRef)(0), N7 = (0, import_react96.useCallback)(() => {
    C7 == null || C7.unsubscribe(), g5(false), d16(null);
  }, [C7]), L2 = (0, import_react96.useCallback)(async () => {
    if (!i9 || !h10)
      return;
    if (C7) {
      N7();
      return;
    }
    const V5 = s17((k4) => {
      h10.setValue(k4), p7({ response: k4 });
    }, "setResponse");
    b9.current += 1;
    const B4 = b9.current;
    let _5 = y7() || i9.getValue();
    const D7 = f15 == null ? void 0 : f15.getValue();
    let O4;
    try {
      O4 = gt2({
        json: D7,
        errorMessageParse: "Variables are invalid JSON",
        errorMessageType: "Variables are not a JSON object."
      });
    } catch (k4) {
      V5(k4 instanceof Error ? k4.message : `${k4}`);
      return;
    }
    const W = c14 == null ? void 0 : c14.getValue();
    let F9;
    try {
      F9 = gt2({
        json: W,
        errorMessageParse: "Headers are invalid JSON",
        errorMessageType: "Headers are not a JSON object."
      });
    } catch (k4) {
      V5(k4 instanceof Error ? k4.message : `${k4}`);
      return;
    }
    if (l12) {
      const k4 = i9.documentAST ? getFragmentDependenciesForAST(
        i9.documentAST,
        l12
      ) : [];
      k4.length > 0 && (_5 += `
` + k4.map((H6) => print(H6)).join(`
`));
    }
    V5(""), g5(true);
    const A4 = r9 ?? i9.operationName ?? void 0;
    m13 == null || m13.addToHistory({
      query: _5,
      variables: D7,
      headers: W,
      operationName: A4
    });
    try {
      let k4 = { data: {} };
      const H6 = s17((v6) => {
        if (B4 !== b9.current)
          return;
        let S9 = Array.isArray(v6) ? v6 : false;
        if (!S9 && typeof v6 == "object" && v6 !== null && "hasNext" in v6 && (S9 = [v6]), S9) {
          const R5 = {
            data: k4.data
          }, U6 = [
            ...(k4 == null ? void 0 : k4.errors) || [],
            ...S9.flatMap((Y4) => Y4.errors).filter(Boolean)
          ];
          U6.length && (R5.errors = U6);
          for (const Y4 of S9) {
            const { path: dt2, data: Ne5, errors: Ao, ...an } = Y4;
            if (dt2) {
              if (!Ne5)
                throw new Error(
                  `Expected part to contain a data property, but got ${Y4}`
                );
              (0, import_set_value.default)(R5.data, dt2, Ne5, { merge: true });
            } else
              Ne5 && (R5.data = Ne5);
            k4 = {
              ...R5,
              ...an
            };
          }
          g5(false), V5(formatResult(k4));
        } else {
          const R5 = formatResult(v6);
          g5(false), V5(R5);
        }
      }, "handleResponse"), E9 = e4(
        {
          query: _5,
          variables: O4,
          operationName: A4
        },
        {
          headers: F9 ?? void 0,
          documentAST: i9.documentAST ?? void 0
        }
      ), Z7 = await Promise.resolve(E9);
      if (isObservable(Z7))
        d16(
          Z7.subscribe({
            next(v6) {
              H6(v6);
            },
            error(v6) {
              g5(false), v6 && V5(formatError(v6)), d16(null);
            },
            complete() {
              g5(false), d16(null);
            }
          })
        );
      else if (isAsyncIterable(Z7)) {
        d16({
          unsubscribe: () => {
            var v6, S9;
            return (S9 = (v6 = Z7[Symbol.asyncIterator]()).return) == null ? void 0 : S9.call(v6);
          }
        });
        for await (const v6 of Z7)
          H6(v6);
        g5(false), d16(null);
      } else
        H6(Z7);
    } catch (k4) {
      g5(false), V5(formatError(k4)), d16(null);
    }
  }, [
    y7,
    l12,
    e4,
    c14,
    m13,
    r9,
    i9,
    h10,
    N7,
    C7,
    p7,
    f15
  ]), x4 = !!C7, w6 = (0, import_react96.useMemo)(
    () => ({
      isFetching: u12,
      isSubscribed: x4,
      operationName: r9 ?? null,
      run: L2,
      stop: N7
    }),
    [u12, x4, r9, L2, N7]
  );
  return (0, import_jsx_runtime.jsx)(Bt.Provider, { value: w6, children: n7 });
}
s17(et5, "ExecutionContextProvider");
var We4 = ue7(Bt);
function gt2({
  json: e4,
  errorMessageParse: t18,
  errorMessageType: n7
}) {
  let r9;
  try {
    r9 = e4 && e4.trim() !== "" ? JSON.parse(e4) : void 0;
  } catch (c14) {
    throw new Error(
      `${t18}: ${c14 instanceof Error ? c14.message : c14}.`
    );
  }
  const l12 = typeof r9 == "object" && r9 !== null && !Array.isArray(r9);
  if (r9 !== void 0 && !l12)
    throw new Error(n7);
  return r9;
}
s17(gt2, "tryParseJsonObject");
var $e6 = "graphiql";
var _e4 = "sublime";
var Wt = false;
typeof window == "object" && (Wt = window.navigator.platform.toLowerCase().indexOf("mac") === 0);
var Ze5 = {
  // Persistent search box in Query Editor
  [Wt ? "Cmd-F" : "Ctrl-F"]: "findPersistent",
  "Cmd-G": "findPersistent",
  "Ctrl-G": "findPersistent",
  // Editor improvements
  "Ctrl-Left": "goSubwordLeft",
  "Ctrl-Right": "goSubwordRight",
  "Alt-Left": "goGroupLeft",
  "Alt-Right": "goGroupRight"
};
async function Se5(e4, t18) {
  const n7 = await import("./codemirror.es-ZIMNU6ZI.js").then((r9) => r9.c).then(
    (r9) => (
      // Depending on bundler and settings the dynamic import either returns a
      // function (e.g. parcel) or an object containing a `default` property
      typeof r9 == "function" ? r9 : r9.default
    )
  );
  return await Promise.all(
    (t18 == null ? void 0 : t18.useCommonAddons) === false ? e4 : [
      import("./show-hint.es-KYXE2Z32.js").then((r9) => r9.s),
      import("./matchbrackets.es-TLRY2H54.js").then((r9) => r9.m),
      import("./closebrackets.es-RGN7SUNA.js").then((r9) => r9.c),
      import("./brace-fold.es-VP5LGWRX.js").then((r9) => r9.b),
      import("./foldgutter.es-NKOXVEC5.js").then((r9) => r9.f),
      import("./lint.es-VGEU4HVL.js").then((r9) => r9.l),
      import("./searchcursor.es-RKXSKNER.js").then((r9) => r9.s),
      import("./jump-to-line.es-VF5DKLXF.js").then((r9) => r9.j),
      import("./dialog.es-Y4ZXCP44.js").then((r9) => r9.d),
      // @ts-expect-error
      import("./sublime.es-6WJ2CBJK.js").then((r9) => r9.s),
      ...e4
    ]
  ), n7;
}
s17(Se5, "importCodeMirror");
var Gr = s17((e4) => e4 ? print(e4) : "", "printDefault");
function $t({ field: e4 }) {
  if (!("defaultValue" in e4) || e4.defaultValue === void 0)
    return null;
  const t18 = astFromValue(e4.defaultValue, e4.type);
  return t18 ? (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
    " = ",
    (0, import_jsx_runtime.jsx)("span", { className: "graphiql-doc-explorer-default-value", children: Gr(t18) })
  ] }) : null;
}
s17($t, "DefaultValue");
var _t2 = ce4("SchemaContext");
function Zt(e4) {
  if (!e4.fetcher)
    throw new TypeError(
      "The `SchemaContextProvider` component requires a `fetcher` function to be passed as prop."
    );
  const { initialHeaders: t18, headerEditor: n7 } = j5({
    nonNull: true,
    caller: Zt
  }), [r9, l12] = (0, import_react96.useState)(), [c14, i9] = (0, import_react96.useState)(false), [h10, f15] = (0, import_react96.useState)(null), p7 = (0, import_react96.useRef)(0);
  (0, import_react96.useEffect)(() => {
    l12(
      isSchema(e4.schema) || e4.schema === null || e4.schema === void 0 ? e4.schema : void 0
    ), p7.current++;
  }, [e4.schema]);
  const m13 = (0, import_react96.useRef)(t18);
  (0, import_react96.useEffect)(() => {
    n7 && (m13.current = n7.getValue());
  });
  const {
    introspectionQuery: y7,
    introspectionQueryName: u12,
    introspectionQuerySansSubscriptions: g5
  } = Qr({
    inputValueDeprecation: e4.inputValueDeprecation,
    introspectionQueryName: e4.introspectionQueryName,
    schemaDescription: e4.schemaDescription
  }), { fetcher: C7, onSchemaChange: d16, dangerouslyAssumeSchemaIsValid: b9, children: N7 } = e4, L2 = (0, import_react96.useCallback)(() => {
    if (isSchema(e4.schema) || e4.schema === null)
      return;
    const V5 = ++p7.current, B4 = e4.schema;
    async function _5() {
      if (B4)
        return B4;
      const D7 = jr(m13.current);
      if (!D7.isValidJSON) {
        f15("Introspection failed as headers are invalid.");
        return;
      }
      const O4 = D7.headers ? { headers: D7.headers } : {}, W = fetcherReturnToPromise(
        C7(
          {
            query: y7,
            operationName: u12
          },
          O4
        )
      );
      if (!isPromise(W)) {
        f15("Fetcher did not return a Promise for introspection.");
        return;
      }
      i9(true), f15(null);
      let F9 = await W;
      if (typeof F9 != "object" || F9 === null || !("data" in F9)) {
        const k4 = fetcherReturnToPromise(
          C7(
            {
              query: g5,
              operationName: u12
            },
            O4
          )
        );
        if (!isPromise(k4))
          throw new Error(
            "Fetcher did not return a Promise for introspection."
          );
        F9 = await k4;
      }
      if (i9(false), F9 != null && F9.data && "__schema" in F9.data)
        return F9.data;
      const A4 = typeof F9 == "string" ? F9 : formatResult(F9);
      f15(A4);
    }
    s17(_5, "fetchIntrospectionData"), _5().then((D7) => {
      if (!(V5 !== p7.current || !D7))
        try {
          const O4 = buildClientSchema(D7);
          l12(O4), d16 == null || d16(O4);
        } catch (O4) {
          f15(formatError(O4));
        }
    }).catch((D7) => {
      V5 === p7.current && (f15(formatError(D7)), i9(false));
    });
  }, [
    C7,
    u12,
    y7,
    g5,
    d16,
    e4.schema
  ]);
  (0, import_react96.useEffect)(() => {
    L2();
  }, [L2]), (0, import_react96.useEffect)(() => {
    function V5(B4) {
      B4.ctrlKey && B4.key === "R" && L2();
    }
    return s17(V5, "triggerIntrospection"), window.addEventListener("keydown", V5), () => window.removeEventListener("keydown", V5);
  });
  const x4 = (0, import_react96.useMemo)(() => !r9 || b9 ? [] : validateSchema(r9), [r9, b9]), w6 = (0, import_react96.useMemo)(
    () => ({
      fetchError: h10,
      introspect: L2,
      isFetching: c14,
      schema: r9,
      validationErrors: x4
    }),
    [h10, L2, c14, r9, x4]
  );
  return (0, import_jsx_runtime.jsx)(_t2.Provider, { value: w6, children: N7 });
}
s17(Zt, "SchemaContextProvider");
var re5 = ue7(_t2);
function Qr({
  inputValueDeprecation: e4,
  introspectionQueryName: t18,
  schemaDescription: n7
}) {
  return (0, import_react96.useMemo)(() => {
    const r9 = t18 || "IntrospectionQuery";
    let l12 = getIntrospectionQuery({
      inputValueDeprecation: e4,
      schemaDescription: n7
    });
    t18 && (l12 = l12.replace("query IntrospectionQuery", `query ${r9}`));
    const c14 = l12.replace(
      "subscriptionType { name }",
      ""
    );
    return {
      introspectionQueryName: r9,
      introspectionQuery: l12,
      introspectionQuerySansSubscriptions: c14
    };
  }, [e4, t18, n7]);
}
s17(Qr, "useIntrospectionQuery");
function jr(e4) {
  let t18 = null, n7 = true;
  try {
    e4 && (t18 = JSON.parse(e4));
  } catch {
    n7 = false;
  }
  return { headers: t18, isValidJSON: n7 };
}
s17(jr, "parseHeaderString");
var Te3 = { name: "Docs" };
var Gt = ce4("ExplorerContext");
function Qt(e4) {
  const { schema: t18, validationErrors: n7 } = re5({
    nonNull: true,
    caller: Qt
  }), [r9, l12] = (0, import_react96.useState)([
    Te3
  ]), c14 = (0, import_react96.useCallback)((p7) => {
    l12((m13) => m13.at(-1).def === p7.def ? (
      // Avoid pushing duplicate items
      m13
    ) : [...m13, p7]);
  }, []), i9 = (0, import_react96.useCallback)(() => {
    l12(
      (p7) => p7.length > 1 ? p7.slice(0, -1) : p7
    );
  }, []), h10 = (0, import_react96.useCallback)(() => {
    l12(
      (p7) => p7.length === 1 ? p7 : [Te3]
    );
  }, []);
  (0, import_react96.useEffect)(() => {
    t18 == null || n7.length > 0 ? h10() : l12((p7) => {
      if (p7.length === 1)
        return p7;
      const m13 = [Te3];
      let y7 = null;
      for (const u12 of p7)
        if (u12 !== Te3)
          if (u12.def)
            if (isNamedType(u12.def)) {
              const g5 = t18.getType(u12.def.name);
              if (g5)
                m13.push({
                  name: u12.name,
                  def: g5
                }), y7 = g5;
              else
                break;
            } else {
              if (y7 === null)
                break;
              if (isObjectType(y7) || isInputObjectType(y7)) {
                const g5 = y7.getFields()[u12.name];
                if (g5)
                  m13.push({
                    name: u12.name,
                    def: g5
                  });
                else
                  break;
              } else {
                if (isScalarType(y7) || isEnumType(y7) || isInterfaceType(y7) || isUnionType(y7))
                  break;
                {
                  const g5 = y7;
                  if (g5.args.find((d16) => d16.name === u12.name))
                    m13.push({
                      name: u12.name,
                      def: g5
                    });
                  else
                    break;
                }
              }
            }
          else
            y7 = null, m13.push(u12);
      return m13;
    });
  }, [h10, t18, n7]);
  const f15 = (0, import_react96.useMemo)(
    () => ({ explorerNavStack: r9, push: c14, pop: i9, reset: h10 }),
    [r9, c14, i9, h10]
  );
  return (0, import_jsx_runtime.jsx)(Gt.Provider, { value: f15, children: e4.children });
}
s17(Qt, "ExplorerContextProvider");
var ie4 = ue7(Gt);
function Pe7(e4, t18) {
  return isNonNullType(e4) ? (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
    Pe7(e4.ofType, t18),
    "!"
  ] }) : isListType(e4) ? (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
    "[",
    Pe7(e4.ofType, t18),
    "]"
  ] }) : t18(e4);
}
s17(Pe7, "renderType");
function ee8(e4) {
  const { push: t18 } = ie4({ nonNull: true, caller: ee8 });
  return e4.type ? Pe7(e4.type, (n7) => (0, import_jsx_runtime.jsx)(
    "a",
    {
      className: "graphiql-doc-explorer-type-name",
      onClick: (r9) => {
        r9.preventDefault(), t18({ name: n7.name, def: n7 });
      },
      href: "#",
      children: n7.name
    }
  )) : null;
}
s17(ee8, "TypeLink");
function qe7({ arg: e4, showDefaultValue: t18, inline: n7 }) {
  const r9 = (0, import_jsx_runtime.jsxs)("span", { children: [
    (0, import_jsx_runtime.jsx)("span", { className: "graphiql-doc-explorer-argument-name", children: e4.name }),
    ": ",
    (0, import_jsx_runtime.jsx)(ee8, { type: e4.type }),
    t18 !== false && (0, import_jsx_runtime.jsx)($t, { field: e4 })
  ] });
  return n7 ? r9 : (0, import_jsx_runtime.jsxs)("div", { className: "graphiql-doc-explorer-argument", children: [
    r9,
    e4.description ? (0, import_jsx_runtime.jsx)(ne5, { type: "description", children: e4.description }) : null,
    e4.deprecationReason ? (0, import_jsx_runtime.jsxs)("div", { className: "graphiql-doc-explorer-argument-deprecation", children: [
      (0, import_jsx_runtime.jsx)("div", { className: "graphiql-doc-explorer-argument-deprecation-label", children: "Deprecated" }),
      (0, import_jsx_runtime.jsx)(ne5, { type: "deprecation", children: e4.deprecationReason })
    ] }) : null
  ] });
}
s17(qe7, "Argument");
function jt(e4) {
  return e4.children ? (0, import_jsx_runtime.jsxs)("div", { className: "graphiql-doc-explorer-deprecation", children: [
    (0, import_jsx_runtime.jsx)("div", { className: "graphiql-doc-explorer-deprecation-label", children: "Deprecated" }),
    (0, import_jsx_runtime.jsx)(ne5, { type: "deprecation", onlyShowFirstChild: true, children: e4.children })
  ] }) : null;
}
s17(jt, "DeprecationReason");
function zr({ directive: e4 }) {
  return (0, import_jsx_runtime.jsxs)("span", { className: "graphiql-doc-explorer-directive", children: [
    "@",
    e4.name.value
  ] });
}
s17(zr, "Directive");
function K5(e4) {
  const t18 = Ur[e4.title];
  return (0, import_jsx_runtime.jsxs)("div", { children: [
    (0, import_jsx_runtime.jsxs)("div", { className: "graphiql-doc-explorer-section-title", children: [
      (0, import_jsx_runtime.jsx)(t18, {}),
      e4.title
    ] }),
    (0, import_jsx_runtime.jsx)("div", { className: "graphiql-doc-explorer-section-content", children: e4.children })
  ] });
}
s17(K5, "ExplorerSection");
var Ur = {
  Arguments: gr,
  "Deprecated Arguments": yr,
  "Deprecated Enum Values": vr,
  "Deprecated Fields": br,
  Directives: wr,
  "Enum Values": Lr,
  Fields: Sr,
  Implements: kr,
  Implementations: ke3,
  "Possible Types": ke3,
  "Root Types": Rr,
  Type: ke3,
  "All Schema Types": ke3
};
function Kr(e4) {
  return (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
    e4.field.description ? (0, import_jsx_runtime.jsx)(ne5, { type: "description", children: e4.field.description }) : null,
    (0, import_jsx_runtime.jsx)(jt, { children: e4.field.deprecationReason }),
    (0, import_jsx_runtime.jsx)(K5, { title: "Type", children: (0, import_jsx_runtime.jsx)(ee8, { type: e4.field.type }) }),
    (0, import_jsx_runtime.jsx)(Jr, { field: e4.field }),
    (0, import_jsx_runtime.jsx)(Yr, { field: e4.field })
  ] });
}
s17(Kr, "FieldDocumentation");
function Jr({ field: e4 }) {
  const [t18, n7] = (0, import_react96.useState)(false), r9 = (0, import_react96.useCallback)(() => {
    n7(true);
  }, []);
  if (!("args" in e4))
    return null;
  const l12 = [], c14 = [];
  for (const i9 of e4.args)
    i9.deprecationReason ? c14.push(i9) : l12.push(i9);
  return (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
    l12.length > 0 ? (0, import_jsx_runtime.jsx)(K5, { title: "Arguments", children: l12.map((i9) => (0, import_jsx_runtime.jsx)(qe7, { arg: i9 }, i9.name)) }) : null,
    c14.length > 0 ? t18 || l12.length === 0 ? (0, import_jsx_runtime.jsx)(K5, { title: "Deprecated Arguments", children: c14.map((i9) => (0, import_jsx_runtime.jsx)(qe7, { arg: i9 }, i9.name)) }) : (0, import_jsx_runtime.jsx)(Fe5, { type: "button", onClick: r9, children: "Show Deprecated Arguments" }) : null
  ] });
}
s17(Jr, "Arguments");
function Yr({ field: e4 }) {
  var n7;
  const t18 = ((n7 = e4.astNode) == null ? void 0 : n7.directives) || [];
  return !t18 || t18.length === 0 ? null : (0, import_jsx_runtime.jsx)(K5, { title: "Directives", children: t18.map((r9) => (0, import_jsx_runtime.jsx)("div", { children: (0, import_jsx_runtime.jsx)(zr, { directive: r9 }) }, r9.name.value)) });
}
s17(Yr, "Directives");
function Xr(e4) {
  var i9, h10, f15, p7;
  const t18 = e4.schema.getQueryType(), n7 = (h10 = (i9 = e4.schema).getMutationType) == null ? void 0 : h10.call(i9), r9 = (p7 = (f15 = e4.schema).getSubscriptionType) == null ? void 0 : p7.call(f15), l12 = e4.schema.getTypeMap(), c14 = [
    t18 == null ? void 0 : t18.name,
    n7 == null ? void 0 : n7.name,
    r9 == null ? void 0 : r9.name
  ];
  return (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
    (0, import_jsx_runtime.jsx)(ne5, { type: "description", children: e4.schema.description || "A GraphQL schema provides a root type for each kind of operation." }),
    (0, import_jsx_runtime.jsxs)(K5, { title: "Root Types", children: [
      t18 ? (0, import_jsx_runtime.jsxs)("div", { children: [
        (0, import_jsx_runtime.jsx)("span", { className: "graphiql-doc-explorer-root-type", children: "query" }),
        ": ",
        (0, import_jsx_runtime.jsx)(ee8, { type: t18 })
      ] }) : null,
      n7 && (0, import_jsx_runtime.jsxs)("div", { children: [
        (0, import_jsx_runtime.jsx)("span", { className: "graphiql-doc-explorer-root-type", children: "mutation" }),
        ": ",
        (0, import_jsx_runtime.jsx)(ee8, { type: n7 })
      ] }),
      r9 && (0, import_jsx_runtime.jsxs)("div", { children: [
        (0, import_jsx_runtime.jsx)("span", { className: "graphiql-doc-explorer-root-type", children: "subscription" }),
        ": ",
        (0, import_jsx_runtime.jsx)(ee8, { type: r9 })
      ] })
    ] }),
    (0, import_jsx_runtime.jsx)(K5, { title: "All Schema Types", children: l12 && (0, import_jsx_runtime.jsx)("div", { children: Object.values(l12).map((m13) => c14.includes(m13.name) || m13.name.startsWith("__") ? null : (0, import_jsx_runtime.jsx)("div", { children: (0, import_jsx_runtime.jsx)(ee8, { type: m13 }) }, m13.name)) }) })
  ] });
}
s17(Xr, "SchemaDocumentation");
function pe2(e4, t18) {
  let n7;
  return function(...r9) {
    n7 && window.clearTimeout(n7), n7 = window.setTimeout(() => {
      n7 = null, t18(...r9);
    }, e4);
  };
}
s17(pe2, "debounce");
function zt() {
  const { explorerNavStack: e4, push: t18 } = ie4({
    nonNull: true,
    caller: zt
  }), n7 = (0, import_react96.useRef)(null), r9 = tt5(), [l12, c14] = (0, import_react96.useState)(""), [i9, h10] = (0, import_react96.useState)(r9(l12)), f15 = (0, import_react96.useMemo)(
    () => pe2(200, (d16) => {
      h10(r9(d16));
    }),
    [r9]
  );
  (0, import_react96.useEffect)(() => {
    f15(l12);
  }, [f15, l12]), (0, import_react96.useEffect)(() => {
    function d16(b9) {
      var N7;
      b9.metaKey && b9.key === "k" && ((N7 = n7.current) == null || N7.focus());
    }
    return s17(d16, "handleKeyDown"), window.addEventListener("keydown", d16), () => window.removeEventListener("keydown", d16);
  }, []);
  const p7 = e4.at(-1), m13 = (0, import_react96.useCallback)(
    (d16) => {
      t18(
        "field" in d16 ? { name: d16.field.name, def: d16.field } : { name: d16.type.name, def: d16.type }
      );
    },
    [t18]
  ), [y7, u12] = (0, import_react96.useState)(false), g5 = (0, import_react96.useCallback)((d16) => {
    u12(d16.type === "focus");
  }, []);
  return e4.length === 1 || isObjectType(p7.def) || isInterfaceType(p7.def) || isInputObjectType(p7.def) ? (0, import_jsx_runtime.jsxs)(
    qt,
    {
      as: "div",
      className: "graphiql-doc-explorer-search",
      onChange: m13,
      "data-state": y7 ? void 0 : "idle",
      "aria-label": `Search ${p7.name}...`,
      children: [
        (0, import_jsx_runtime.jsxs)(
          "div",
          {
            className: "graphiql-doc-explorer-search-input",
            onClick: () => {
              var d16;
              (d16 = n7.current) == null || d16.focus();
            },
            children: [
              (0, import_jsx_runtime.jsx)(Tr, {}),
              (0, import_jsx_runtime.jsx)(
                qt.Input,
                {
                  autoComplete: "off",
                  onFocus: g5,
                  onBlur: g5,
                  onChange: (d16) => c14(d16.target.value),
                  placeholder: "⌘ K",
                  ref: n7,
                  value: l12,
                  "data-cy": "doc-explorer-input"
                }
              )
            ]
          }
        ),
        y7 && (0, import_jsx_runtime.jsxs)(qt.Options, { "data-cy": "doc-explorer-list", children: [
          i9.within.length + i9.types.length + i9.fields.length === 0 ? (0, import_jsx_runtime.jsx)("li", { className: "graphiql-doc-explorer-search-empty", children: "No results found" }) : i9.within.map((d16, b9) => (0, import_jsx_runtime.jsx)(
            qt.Option,
            {
              value: d16,
              "data-cy": "doc-explorer-option",
              children: (0, import_jsx_runtime.jsx)(Ct2, { field: d16.field, argument: d16.argument })
            },
            `within-${b9}`
          )),
          i9.within.length > 0 && i9.types.length + i9.fields.length > 0 ? (0, import_jsx_runtime.jsx)("div", { className: "graphiql-doc-explorer-search-divider", children: "Other results" }) : null,
          i9.types.map((d16, b9) => (0, import_jsx_runtime.jsx)(
            qt.Option,
            {
              value: d16,
              "data-cy": "doc-explorer-option",
              children: (0, import_jsx_runtime.jsx)(nt3, { type: d16.type })
            },
            `type-${b9}`
          )),
          i9.fields.map((d16, b9) => (0, import_jsx_runtime.jsxs)(
            qt.Option,
            {
              value: d16,
              "data-cy": "doc-explorer-option",
              children: [
                (0, import_jsx_runtime.jsx)(nt3, { type: d16.type }),
                ".",
                (0, import_jsx_runtime.jsx)(Ct2, { field: d16.field, argument: d16.argument })
              ]
            },
            `field-${b9}`
          ))
        ] })
      ]
    }
  ) : null;
}
s17(zt, "Search");
function tt5(e4) {
  const { explorerNavStack: t18 } = ie4({
    nonNull: true,
    caller: e4 || tt5
  }), { schema: n7 } = re5({
    nonNull: true,
    caller: e4 || tt5
  }), r9 = t18.at(-1);
  return (0, import_react96.useCallback)(
    (l12) => {
      const c14 = {
        within: [],
        types: [],
        fields: []
      };
      if (!n7)
        return c14;
      const i9 = r9.def, h10 = n7.getTypeMap();
      let f15 = Object.keys(h10);
      i9 && (f15 = f15.filter((p7) => p7 !== i9.name), f15.unshift(i9.name));
      for (const p7 of f15) {
        if (c14.within.length + c14.types.length + c14.fields.length >= 100)
          break;
        const m13 = h10[p7];
        if (i9 !== m13 && je4(p7, l12) && c14.types.push({ type: m13 }), !isObjectType(m13) && !isInterfaceType(m13) && !isInputObjectType(m13))
          continue;
        const y7 = m13.getFields();
        for (const u12 in y7) {
          const g5 = y7[u12];
          let C7;
          if (!je4(u12, l12))
            if ("args" in g5) {
              if (C7 = g5.args.filter(
                (d16) => je4(d16.name, l12)
              ), C7.length === 0)
                continue;
            } else
              continue;
          c14[i9 === m13 ? "within" : "fields"].push(
            ...C7 ? C7.map((d16) => ({ type: m13, field: g5, argument: d16 })) : [{ type: m13, field: g5 }]
          );
        }
      }
      return c14;
    },
    [r9.def, n7]
  );
}
s17(tt5, "useSearchResults");
function je4(e4, t18) {
  try {
    const n7 = t18.replaceAll(/[^_0-9A-Za-z]/g, (r9) => "\\" + r9);
    return e4.search(new RegExp(n7, "i")) !== -1;
  } catch {
    return e4.toLowerCase().includes(t18.toLowerCase());
  }
}
s17(je4, "isMatch");
function nt3(e4) {
  return (0, import_jsx_runtime.jsx)("span", { className: "graphiql-doc-explorer-search-type", children: e4.type.name });
}
s17(nt3, "Type");
function Ct2({ field: e4, argument: t18 }) {
  return (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
    (0, import_jsx_runtime.jsx)("span", { className: "graphiql-doc-explorer-search-field", children: e4.name }),
    t18 ? (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
      "(",
      (0, import_jsx_runtime.jsx)("span", { className: "graphiql-doc-explorer-search-argument", children: t18.name }),
      ":",
      " ",
      Pe7(t18.type, (n7) => (0, import_jsx_runtime.jsx)(nt3, { type: n7 })),
      ")"
    ] }) : null
  ] });
}
s17(Ct2, "Field$1");
function eo(e4) {
  const { push: t18 } = ie4({ nonNull: true });
  return (0, import_jsx_runtime.jsx)(
    "a",
    {
      className: "graphiql-doc-explorer-field-name",
      onClick: (n7) => {
        n7.preventDefault(), t18({ name: e4.field.name, def: e4.field });
      },
      href: "#",
      children: e4.field.name
    }
  );
}
s17(eo, "FieldLink");
function to(e4) {
  return isNamedType(e4.type) ? (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
    e4.type.description ? (0, import_jsx_runtime.jsx)(ne5, { type: "description", children: e4.type.description }) : null,
    (0, import_jsx_runtime.jsx)(no, { type: e4.type }),
    (0, import_jsx_runtime.jsx)(ro, { type: e4.type }),
    (0, import_jsx_runtime.jsx)(oo, { type: e4.type }),
    (0, import_jsx_runtime.jsx)(lo, { type: e4.type })
  ] }) : null;
}
s17(to, "TypeDocumentation");
function no({ type: e4 }) {
  return isObjectType(e4) && e4.getInterfaces().length > 0 ? (0, import_jsx_runtime.jsx)(K5, { title: "Implements", children: e4.getInterfaces().map((n7) => (0, import_jsx_runtime.jsx)("div", { children: (0, import_jsx_runtime.jsx)(ee8, { type: n7 }) }, n7.name)) }) : null;
}
s17(no, "ImplementsInterfaces");
function ro({ type: e4 }) {
  const [t18, n7] = (0, import_react96.useState)(false), r9 = (0, import_react96.useCallback)(() => {
    n7(true);
  }, []);
  if (!isObjectType(e4) && !isInterfaceType(e4) && !isInputObjectType(e4))
    return null;
  const l12 = e4.getFields(), c14 = [], i9 = [];
  for (const h10 of Object.keys(l12).map((f15) => l12[f15]))
    h10.deprecationReason ? i9.push(h10) : c14.push(h10);
  return (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
    c14.length > 0 ? (0, import_jsx_runtime.jsx)(K5, { title: "Fields", children: c14.map((h10) => (0, import_jsx_runtime.jsx)(yt, { field: h10 }, h10.name)) }) : null,
    i9.length > 0 ? t18 || c14.length === 0 ? (0, import_jsx_runtime.jsx)(K5, { title: "Deprecated Fields", children: i9.map((h10) => (0, import_jsx_runtime.jsx)(yt, { field: h10 }, h10.name)) }) : (0, import_jsx_runtime.jsx)(Fe5, { type: "button", onClick: r9, children: "Show Deprecated Fields" }) : null
  ] });
}
s17(ro, "Fields");
function yt({ field: e4 }) {
  const t18 = "args" in e4 ? e4.args.filter((n7) => !n7.deprecationReason) : [];
  return (0, import_jsx_runtime.jsxs)("div", { className: "graphiql-doc-explorer-item", children: [
    (0, import_jsx_runtime.jsxs)("div", { children: [
      (0, import_jsx_runtime.jsx)(eo, { field: e4 }),
      t18.length > 0 ? (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
        "(",
        (0, import_jsx_runtime.jsx)("span", { children: t18.map(
          (n7) => t18.length === 1 ? (0, import_jsx_runtime.jsx)(qe7, { arg: n7, inline: true }, n7.name) : (0, import_jsx_runtime.jsx)(
            "div",
            {
              className: "graphiql-doc-explorer-argument-multiple",
              children: (0, import_jsx_runtime.jsx)(qe7, { arg: n7, inline: true })
            },
            n7.name
          )
        ) }),
        ")"
      ] }) : null,
      ": ",
      (0, import_jsx_runtime.jsx)(ee8, { type: e4.type }),
      (0, import_jsx_runtime.jsx)($t, { field: e4 })
    ] }),
    e4.description ? (0, import_jsx_runtime.jsx)(ne5, { type: "description", onlyShowFirstChild: true, children: e4.description }) : null,
    (0, import_jsx_runtime.jsx)(jt, { children: e4.deprecationReason })
  ] });
}
s17(yt, "Field");
function oo({ type: e4 }) {
  const [t18, n7] = (0, import_react96.useState)(false), r9 = (0, import_react96.useCallback)(() => {
    n7(true);
  }, []);
  if (!isEnumType(e4))
    return null;
  const l12 = [], c14 = [];
  for (const i9 of e4.getValues())
    i9.deprecationReason ? c14.push(i9) : l12.push(i9);
  return (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [
    l12.length > 0 ? (0, import_jsx_runtime.jsx)(K5, { title: "Enum Values", children: l12.map((i9) => (0, import_jsx_runtime.jsx)(vt2, { value: i9 }, i9.name)) }) : null,
    c14.length > 0 ? t18 || l12.length === 0 ? (0, import_jsx_runtime.jsx)(K5, { title: "Deprecated Enum Values", children: c14.map((i9) => (0, import_jsx_runtime.jsx)(vt2, { value: i9 }, i9.name)) }) : (0, import_jsx_runtime.jsx)(Fe5, { type: "button", onClick: r9, children: "Show Deprecated Values" }) : null
  ] });
}
s17(oo, "EnumValues");
function vt2({ value: e4 }) {
  return (0, import_jsx_runtime.jsxs)("div", { className: "graphiql-doc-explorer-item", children: [
    (0, import_jsx_runtime.jsx)("div", { className: "graphiql-doc-explorer-enum-value", children: e4.name }),
    e4.description ? (0, import_jsx_runtime.jsx)(ne5, { type: "description", children: e4.description }) : null,
    e4.deprecationReason ? (0, import_jsx_runtime.jsx)(ne5, { type: "deprecation", children: e4.deprecationReason }) : null
  ] });
}
s17(vt2, "EnumValue");
function lo({ type: e4 }) {
  const { schema: t18 } = re5({ nonNull: true });
  return !t18 || !isAbstractType(e4) ? null : (0, import_jsx_runtime.jsx)(
    K5,
    {
      title: isInterfaceType(e4) ? "Implementations" : "Possible Types",
      children: t18.getPossibleTypes(e4).map((n7) => (0, import_jsx_runtime.jsx)("div", { children: (0, import_jsx_runtime.jsx)(ee8, { type: n7 }) }, n7.name))
    }
  );
}
s17(lo, "PossibleTypes");
function rt3() {
  const { fetchError: e4, isFetching: t18, schema: n7, validationErrors: r9 } = re5(
    { nonNull: true, caller: rt3 }
  ), { explorerNavStack: l12, pop: c14 } = ie4({
    nonNull: true,
    caller: rt3
  }), i9 = l12.at(-1);
  let h10 = null;
  e4 ? h10 = (0, import_jsx_runtime.jsx)("div", { className: "graphiql-doc-explorer-error", children: "Error fetching schema" }) : r9.length > 0 ? h10 = (0, import_jsx_runtime.jsxs)("div", { className: "graphiql-doc-explorer-error", children: [
    "Schema is invalid: ",
    r9[0].message
  ] }) : t18 ? h10 = (0, import_jsx_runtime.jsx)(qt2, {}) : n7 ? l12.length === 1 ? h10 = (0, import_jsx_runtime.jsx)(Xr, { schema: n7 }) : isType(i9.def) ? h10 = (0, import_jsx_runtime.jsx)(to, { type: i9.def }) : i9.def && (h10 = (0, import_jsx_runtime.jsx)(Kr, { field: i9.def })) : h10 = (0, import_jsx_runtime.jsx)("div", { className: "graphiql-doc-explorer-error", children: "No GraphQL schema available" });
  let f15;
  return l12.length > 1 && (f15 = l12.at(-2).name), (0, import_jsx_runtime.jsxs)(
    "section",
    {
      className: "graphiql-doc-explorer",
      "aria-label": "Documentation Explorer",
      children: [
        (0, import_jsx_runtime.jsxs)("div", { className: "graphiql-doc-explorer-header", children: [
          (0, import_jsx_runtime.jsxs)("div", { className: "graphiql-doc-explorer-header-content", children: [
            f15 && (0, import_jsx_runtime.jsxs)(
              "a",
              {
                href: "#",
                className: "graphiql-doc-explorer-back",
                onClick: (p7) => {
                  p7.preventDefault(), c14();
                },
                "aria-label": `Go back to ${f15}`,
                children: [
                  (0, import_jsx_runtime.jsx)(Cr, {}),
                  f15
                ]
              }
            ),
            (0, import_jsx_runtime.jsx)("div", { className: "graphiql-doc-explorer-title", children: i9.name })
          ] }),
          (0, import_jsx_runtime.jsx)(zt, {}, i9.name)
        ] }),
        (0, import_jsx_runtime.jsx)("div", { className: "graphiql-doc-explorer-content", children: h10 })
      ]
    }
  );
}
s17(rt3, "DocExplorer");
var ve2 = {
  title: "Documentation Explorer",
  icon: s17(function() {
    const t18 = at2();
    return (t18 == null ? void 0 : t18.visiblePlugin) === ve2 ? (0, import_jsx_runtime.jsx)(xr, {}) : (0, import_jsx_runtime.jsx)(Er, {});
  }, "Icon"),
  content: rt3
};
var bt2 = {
  title: "History",
  icon: Nr,
  content: _r
};
var Ut = ce4("PluginContext");
function io(e4) {
  const t18 = de6(), n7 = ie4(), r9 = Be3(), l12 = !!n7, c14 = !!r9, i9 = (0, import_react96.useMemo)(() => {
    const g5 = [], C7 = {};
    l12 && (g5.push(ve2), C7[ve2.title] = true), c14 && (g5.push(bt2), C7[bt2.title] = true);
    for (const d16 of e4.plugins || []) {
      if (typeof d16.title != "string" || !d16.title)
        throw new Error("All GraphiQL plugins must have a unique title");
      if (C7[d16.title])
        throw new Error(
          `All GraphiQL plugins must have a unique title, found two plugins with the title '${d16.title}'`
        );
      g5.push(d16), C7[d16.title] = true;
    }
    return g5;
  }, [l12, c14, e4.plugins]), [h10, f15] = (0, import_react96.useState)(() => {
    const g5 = t18 == null ? void 0 : t18.get(wt), C7 = i9.find(
      (d16) => d16.title === g5
    );
    return C7 || (g5 && (t18 == null || t18.set(wt, "")), e4.visiblePlugin && i9.find(
      (d16) => (typeof e4.visiblePlugin == "string" ? d16.title : d16) === e4.visiblePlugin
    ) || null);
  }), { onTogglePluginVisibility: p7, children: m13 } = e4, y7 = (0, import_react96.useCallback)(
    (g5) => {
      const C7 = g5 && i9.find(
        (d16) => (typeof g5 == "string" ? d16.title : d16) === g5
      ) || null;
      f15((d16) => C7 === d16 ? d16 : (p7 == null || p7(C7), C7));
    },
    [p7, i9]
  );
  (0, import_react96.useEffect)(() => {
    e4.visiblePlugin && y7(e4.visiblePlugin);
  }, [i9, e4.visiblePlugin, y7]);
  const u12 = (0, import_react96.useMemo)(
    () => ({ plugins: i9, setVisiblePlugin: y7, visiblePlugin: h10 }),
    [i9, y7, h10]
  );
  return (0, import_jsx_runtime.jsx)(Ut.Provider, { value: u12, children: m13 });
}
s17(io, "PluginContextProvider");
var at2 = ue7(Ut);
var wt = "visiblePlugin";
function so(e4, t18, n7, r9, l12, c14) {
  Se5([], { useCommonAddons: false }).then((h10) => {
    let f15, p7, m13, y7, u12, g5, C7, d16, b9;
    h10.on(
      t18,
      "select",
      // @ts-expect-error
      (N7, L2) => {
        if (!f15) {
          const x4 = L2.parentNode;
          f15 = document.createElement("div"), f15.className = "CodeMirror-hint-information", x4.append(f15);
          const w6 = document.createElement("header");
          w6.className = "CodeMirror-hint-information-header", f15.append(w6), p7 = document.createElement("span"), p7.className = "CodeMirror-hint-information-field-name", w6.append(p7), m13 = document.createElement("span"), m13.className = "CodeMirror-hint-information-type-name-pill", w6.append(m13), y7 = document.createElement("span"), m13.append(y7), u12 = document.createElement("a"), u12.className = "CodeMirror-hint-information-type-name", u12.href = "javascript:void 0", u12.addEventListener("click", i9), m13.append(u12), g5 = document.createElement("span"), m13.append(g5), C7 = document.createElement("div"), C7.className = "CodeMirror-hint-information-description", f15.append(C7), d16 = document.createElement("div"), d16.className = "CodeMirror-hint-information-deprecation", f15.append(d16);
          const V5 = document.createElement("span");
          V5.className = "CodeMirror-hint-information-deprecation-label", V5.textContent = "Deprecated", d16.append(V5), b9 = document.createElement("div"), b9.className = "CodeMirror-hint-information-deprecation-reason", d16.append(b9);
          const B4 = parseInt(
            window.getComputedStyle(f15).paddingBottom.replace(/px$/, ""),
            10
          ) || 0, _5 = parseInt(
            window.getComputedStyle(f15).maxHeight.replace(/px$/, ""),
            10
          ) || 0, D7 = s17(() => {
            f15 && (f15.style.paddingTop = x4.scrollTop + B4 + "px", f15.style.maxHeight = x4.scrollTop + _5 + "px");
          }, "handleScroll");
          x4.addEventListener("scroll", D7);
          let O4;
          x4.addEventListener(
            "DOMNodeRemoved",
            O4 = s17((W) => {
              W.target === x4 && (x4.removeEventListener("scroll", D7), x4.removeEventListener("DOMNodeRemoved", O4), f15 && f15.removeEventListener(
                "click",
                i9
              ), f15 = null, p7 = null, m13 = null, y7 = null, u12 = null, g5 = null, C7 = null, d16 = null, b9 = null, O4 = null);
            }, "onRemoveFn")
          );
        }
        if (p7 && (p7.textContent = N7.text), m13 && y7 && u12 && g5)
          if (N7.type) {
            m13.style.display = "inline";
            const x4 = s17((w6) => {
              isNonNullType(w6) ? (g5.textContent = "!" + g5.textContent, x4(w6.ofType)) : isListType(w6) ? (y7.textContent += "[", g5.textContent = "]" + g5.textContent, x4(w6.ofType)) : u12.textContent = w6.name;
            }, "renderType");
            y7.textContent = "", g5.textContent = "", x4(N7.type);
          } else
            y7.textContent = "", u12.textContent = "", g5.textContent = "", m13.style.display = "none";
        C7 && (N7.description ? (C7.style.display = "block", C7.innerHTML = Ae5.render(N7.description)) : (C7.style.display = "none", C7.innerHTML = "")), d16 && b9 && (N7.deprecationReason ? (d16.style.display = "block", b9.innerHTML = Ae5.render(
          N7.deprecationReason
        )) : (d16.style.display = "none", b9.innerHTML = ""));
      }
    );
  });
  function i9(h10) {
    if (!n7 || !r9 || !l12 || !(h10.currentTarget instanceof HTMLElement))
      return;
    const f15 = h10.currentTarget.textContent || "", p7 = n7.getType(f15);
    p7 && (l12.setVisiblePlugin(ve2), r9.push({ name: p7.name, def: p7 }), c14 == null || c14(p7));
  }
  s17(i9, "onClickHintInformation");
}
s17(so, "onHasCompletion");
function Me3(e4, t18) {
  (0, import_react96.useEffect)(() => {
    e4 && typeof t18 == "string" && t18 !== e4.getValue() && e4.setValue(t18);
  }, [e4, t18]);
}
s17(Me3, "useSynchronizeValue");
function Ge5(e4, t18, n7) {
  (0, import_react96.useEffect)(() => {
    e4 && e4.setOption(t18, n7);
  }, [e4, t18, n7]);
}
s17(Ge5, "useSynchronizeOption");
function Kt(e4, t18, n7, r9, l12) {
  const { updateActiveTabValues: c14 } = j5({ nonNull: true, caller: l12 }), i9 = de6();
  (0, import_react96.useEffect)(() => {
    if (!e4)
      return;
    const h10 = pe2(500, (m13) => {
      !i9 || n7 === null || i9.set(n7, m13);
    }), f15 = pe2(100, (m13) => {
      c14({ [r9]: m13 });
    }), p7 = s17((m13, y7) => {
      if (!y7)
        return;
      const u12 = m13.getValue();
      h10(u12), f15(u12), t18 == null || t18(u12);
    }, "handleChange");
    return e4.on("change", p7), () => e4.off("change", p7);
  }, [
    t18,
    e4,
    i9,
    n7,
    r9,
    c14
  ]);
}
s17(Kt, "useChangeHandler");
function Jt(e4, t18, n7) {
  const { schema: r9 } = re5({ nonNull: true, caller: n7 }), l12 = ie4(), c14 = at2();
  (0, import_react96.useEffect)(() => {
    if (!e4)
      return;
    const i9 = s17((h10, f15) => {
      so(h10, f15, r9, l12, c14, (p7) => {
        t18 == null || t18({ kind: "Type", type: p7, schema: r9 || void 0 });
      });
    }, "handleCompletion");
    return e4.on(
      // @ts-expect-error @TODO additional args for hasCompletion event
      "hasCompletion",
      i9
    ), () => e4.off(
      // @ts-expect-error @TODO additional args for hasCompletion event
      "hasCompletion",
      i9
    );
  }, [t18, e4, l12, c14, r9]);
}
s17(Jt, "useCompletion");
function te5(e4, t18, n7) {
  (0, import_react96.useEffect)(() => {
    if (e4) {
      for (const r9 of t18)
        e4.removeKeyMap(r9);
      if (n7) {
        const r9 = {};
        for (const l12 of t18)
          r9[l12] = () => n7();
        e4.addKeyMap(r9);
      }
    }
  }, [e4, t18, n7]);
}
s17(te5, "useKeyMap");
function Yt({ caller: e4, onCopyQuery: t18 } = {}) {
  const { queryEditor: n7 } = j5({
    nonNull: true,
    caller: e4 || Yt
  });
  return (0, import_react96.useCallback)(() => {
    if (!n7)
      return;
    const r9 = n7.getValue();
    (0, import_copy_to_clipboard.default)(r9), t18 == null || t18(r9);
  }, [n7, t18]);
}
s17(Yt, "useCopyQuery");
function be4({ caller: e4 } = {}) {
  const { queryEditor: t18 } = j5({
    nonNull: true,
    caller: e4 || be4
  }), { schema: n7 } = re5({ nonNull: true, caller: be4 });
  return (0, import_react96.useCallback)(() => {
    const r9 = t18 == null ? void 0 : t18.documentAST, l12 = t18 == null ? void 0 : t18.getValue();
    !r9 || !l12 || t18.setValue(print(mergeAst(r9, n7)));
  }, [t18, n7]);
}
s17(be4, "useMergeQuery");
function Qe5({ caller: e4 } = {}) {
  const { queryEditor: t18, headerEditor: n7, variableEditor: r9 } = j5({
    nonNull: true,
    caller: e4 || Qe5
  });
  return (0, import_react96.useCallback)(() => {
    if (r9) {
      const l12 = r9.getValue();
      try {
        const c14 = JSON.stringify(
          JSON.parse(l12),
          null,
          2
        );
        c14 !== l12 && r9.setValue(c14);
      } catch {
      }
    }
    if (n7) {
      const l12 = n7.getValue();
      try {
        const c14 = JSON.stringify(
          JSON.parse(l12),
          null,
          2
        );
        c14 !== l12 && n7.setValue(c14);
      } catch {
      }
    }
    if (t18) {
      const l12 = t18.getValue(), c14 = print(parse(l12));
      c14 !== l12 && t18.setValue(c14);
    }
  }, [t18, r9, n7]);
}
s17(Qe5, "usePrettifyEditors");
function ot4({
  getDefaultFieldNames: e4,
  caller: t18
} = {}) {
  const { schema: n7 } = re5({
    nonNull: true,
    caller: t18 || ot4
  }), { queryEditor: r9 } = j5({
    nonNull: true,
    caller: t18 || ot4
  });
  return (0, import_react96.useCallback)(() => {
    if (!r9)
      return;
    const l12 = r9.getValue(), { insertions: c14, result: i9 } = fillLeafs(
      n7,
      l12,
      e4
    );
    return c14 && c14.length > 0 && r9.operation(() => {
      const h10 = r9.getCursor(), f15 = r9.indexFromPos(h10);
      r9.setValue(i9 || "");
      let p7 = 0;
      const m13 = c14.map(
        ({ index: u12, string: g5 }) => r9.markText(
          r9.posFromIndex(u12 + p7),
          r9.posFromIndex(u12 + (p7 += g5.length)),
          {
            className: "auto-inserted-leaf",
            clearOnEnter: true,
            title: "Automatically added leaf fields"
          }
        )
      );
      setTimeout(() => {
        for (const u12 of m13)
          u12.clear();
      }, 7e3);
      let y7 = f15;
      for (const { index: u12, string: g5 } of c14)
        u12 < f15 && (y7 += g5.length);
      r9.setCursor(r9.posFromIndex(y7));
    }), i9;
  }, [e4, r9, n7]);
}
s17(ot4, "useAutoCompleteLeafs");
function Ce3({
  editorTheme: e4 = $e6,
  keyMap: t18 = _e4,
  onEdit: n7,
  readOnly: r9 = false
} = {}, l12) {
  const {
    initialHeaders: c14,
    headerEditor: i9,
    setHeaderEditor: h10,
    shouldPersistHeaders: f15
  } = j5({
    nonNull: true,
    caller: l12 || Ce3
  }), p7 = We4(), m13 = be4({ caller: l12 || Ce3 }), y7 = Qe5({ caller: l12 || Ce3 }), u12 = (0, import_react96.useRef)(null);
  return (0, import_react96.useEffect)(() => {
    let g5 = true;
    return Se5([
      // @ts-expect-error
      import("./javascript.es-EHSZPHW6.js").then((C7) => C7.j)
    ]).then((C7) => {
      if (!g5)
        return;
      const d16 = u12.current;
      if (!d16)
        return;
      const b9 = C7(d16, {
        value: c14,
        lineNumbers: true,
        tabSize: 2,
        mode: { name: "javascript", json: true },
        theme: e4,
        autoCloseBrackets: true,
        matchBrackets: true,
        showCursorWhenSelecting: true,
        readOnly: r9 ? "nocursor" : false,
        foldGutter: true,
        gutters: ["CodeMirror-linenumbers", "CodeMirror-foldgutter"],
        extraKeys: Ze5
      });
      b9.addKeyMap({
        "Cmd-Space"() {
          b9.showHint({ completeSingle: false, container: d16 });
        },
        "Ctrl-Space"() {
          b9.showHint({ completeSingle: false, container: d16 });
        },
        "Alt-Space"() {
          b9.showHint({ completeSingle: false, container: d16 });
        },
        "Shift-Space"() {
          b9.showHint({ completeSingle: false, container: d16 });
        }
      }), b9.on("keyup", (N7, L2) => {
        const { code: x4, key: w6, shiftKey: V5 } = L2, B4 = x4.startsWith("Key"), _5 = !V5 && x4.startsWith("Digit");
        (B4 || _5 || w6 === "_" || w6 === '"') && N7.execCommand("autocomplete");
      }), h10(b9);
    }), () => {
      g5 = false;
    };
  }, [e4, c14, r9, h10]), Ge5(i9, "keyMap", t18), Kt(
    i9,
    n7,
    f15 ? He5 : null,
    "headers",
    Ce3
  ), te5(i9, ["Cmd-Enter", "Ctrl-Enter"], p7 == null ? void 0 : p7.run), te5(i9, ["Shift-Ctrl-P"], y7), te5(i9, ["Shift-Ctrl-M"], m13), u12;
}
s17(Ce3, "useHeaderEditor");
var He5 = "headers";
var ao = Array.from({ length: 11 }, (e4, t18) => String.fromCharCode(8192 + t18)).concat(["\u2028", "\u2029", " ", " "]);
var co = new RegExp("[" + ao.join("") + "]", "g");
function uo(e4) {
  return e4.replace(co, " ");
}
s17(uo, "normalizeWhitespace");
function se4({
  editorTheme: e4 = $e6,
  keyMap: t18 = _e4,
  onClickReference: n7,
  onCopyQuery: r9,
  onEdit: l12,
  readOnly: c14 = false
} = {}, i9) {
  const { schema: h10 } = re5({
    nonNull: true,
    caller: i9 || se4
  }), {
    externalFragments: f15,
    initialQuery: p7,
    queryEditor: m13,
    setOperationName: y7,
    setQueryEditor: u12,
    validationRules: g5,
    variableEditor: C7,
    updateActiveTabValues: d16
  } = j5({
    nonNull: true,
    caller: i9 || se4
  }), b9 = We4(), N7 = de6(), L2 = ie4(), x4 = at2(), w6 = Yt({ caller: i9 || se4, onCopyQuery: r9 }), V5 = be4({ caller: i9 || se4 }), B4 = Qe5({ caller: i9 || se4 }), _5 = (0, import_react96.useRef)(null), D7 = (0, import_react96.useRef)(), O4 = (0, import_react96.useRef)(() => {
  });
  (0, import_react96.useEffect)(() => {
    O4.current = (A4) => {
      if (!(!L2 || !x4)) {
        switch (x4.setVisiblePlugin(ve2), A4.kind) {
          case "Type": {
            L2.push({ name: A4.type.name, def: A4.type });
            break;
          }
          case "Field": {
            L2.push({ name: A4.field.name, def: A4.field });
            break;
          }
          case "Argument": {
            A4.field && L2.push({ name: A4.field.name, def: A4.field });
            break;
          }
          case "EnumValue": {
            A4.type && L2.push({ name: A4.type.name, def: A4.type });
            break;
          }
        }
        n7 == null || n7(A4);
      }
    };
  }, [L2, n7, x4]), (0, import_react96.useEffect)(() => {
    let A4 = true;
    return Se5([
      import("./comment.es-6G2M2AYB.js").then((k4) => k4.c),
      import("./search.es-IKQJJVAQ.js").then((k4) => k4.s),
      import("./hint.es-PAAZSTZ7.js"),
      import("./lint.es2-EUTXMKRB.js"),
      import("./info.es-UZNTDYRV.js"),
      import("./jump.es-YXD3DYEL.js"),
      import("./mode.es-JQA6K4SW.js")
    ]).then((k4) => {
      if (!A4)
        return;
      D7.current = k4;
      const H6 = _5.current;
      if (!H6)
        return;
      const E9 = k4(H6, {
        value: p7,
        lineNumbers: true,
        tabSize: 2,
        foldGutter: true,
        mode: "graphql",
        theme: e4,
        autoCloseBrackets: true,
        matchBrackets: true,
        showCursorWhenSelecting: true,
        readOnly: c14 ? "nocursor" : false,
        lint: {
          // @ts-expect-error
          schema: void 0,
          validationRules: null,
          // linting accepts string or FragmentDefinitionNode[]
          externalFragments: void 0
        },
        hintOptions: {
          // @ts-expect-error
          schema: void 0,
          closeOnUnfocus: false,
          completeSingle: false,
          container: H6,
          externalFragments: void 0
        },
        info: {
          schema: void 0,
          renderDescription: (v6) => Ae5.render(v6),
          onClick: (v6) => {
            O4.current(v6);
          }
        },
        jump: {
          schema: void 0,
          onClick: (v6) => {
            O4.current(v6);
          }
        },
        gutters: ["CodeMirror-linenumbers", "CodeMirror-foldgutter"],
        extraKeys: {
          ...Ze5,
          "Cmd-S"() {
          },
          "Ctrl-S"() {
          }
        }
      });
      E9.addKeyMap({
        "Cmd-Space"() {
          E9.showHint({ completeSingle: true, container: H6 });
        },
        "Ctrl-Space"() {
          E9.showHint({ completeSingle: true, container: H6 });
        },
        "Alt-Space"() {
          E9.showHint({ completeSingle: true, container: H6 });
        },
        "Shift-Space"() {
          E9.showHint({ completeSingle: true, container: H6 });
        },
        "Shift-Alt-Space"() {
          E9.showHint({ completeSingle: true, container: H6 });
        }
      }), E9.on("keyup", (v6, S9) => {
        fo.test(S9.key) && v6.execCommand("autocomplete");
      });
      let Z7 = false;
      E9.on("startCompletion", () => {
        Z7 = true;
      }), E9.on("endCompletion", () => {
        Z7 = false;
      }), E9.on("keydown", (v6, S9) => {
        S9.key === "Escape" && Z7 && S9.stopPropagation();
      }), E9.on("beforeChange", (v6, S9) => {
        var R5;
        if (S9.origin === "paste") {
          const U6 = S9.text.map(uo);
          (R5 = S9.update) == null || R5.call(S9, S9.from, S9.to, U6);
        }
      }), E9.documentAST = null, E9.operationName = null, E9.operations = null, E9.variableToType = null, u12(E9);
    }), () => {
      A4 = false;
    };
  }, [e4, p7, c14, u12]), Ge5(m13, "keyMap", t18), (0, import_react96.useEffect)(() => {
    if (!m13)
      return;
    function A4(H6) {
      var v6;
      const E9 = getOperationFacts(
        h10,
        H6.getValue()
      ), Z7 = getSelectedOperationName(
        H6.operations ?? void 0,
        H6.operationName ?? void 0,
        E9 == null ? void 0 : E9.operations
      );
      return H6.documentAST = (E9 == null ? void 0 : E9.documentAST) ?? null, H6.operationName = Z7 ?? null, H6.operations = (E9 == null ? void 0 : E9.operations) ?? null, C7 && (C7.state.lint.linterOptions.variableToType = E9 == null ? void 0 : E9.variableToType, C7.options.lint.variableToType = E9 == null ? void 0 : E9.variableToType, C7.options.hintOptions.variableToType = E9 == null ? void 0 : E9.variableToType, (v6 = D7.current) == null || v6.signal(C7, "change", C7)), E9 ? { ...E9, operationName: Z7 } : null;
    }
    s17(A4, "getAndUpdateOperationFacts");
    const k4 = pe2(
      100,
      (H6) => {
        const E9 = H6.getValue();
        N7 == null || N7.set(Xt, E9);
        const Z7 = H6.operationName, v6 = A4(H6);
        (v6 == null ? void 0 : v6.operationName) !== void 0 && (N7 == null || N7.set(
          go,
          v6.operationName
        )), l12 == null || l12(E9, v6 == null ? void 0 : v6.documentAST), v6 != null && v6.operationName && Z7 !== v6.operationName && y7(v6.operationName), d16({
          query: E9,
          operationName: (v6 == null ? void 0 : v6.operationName) ?? null
        });
      }
    );
    return A4(m13), m13.on("change", k4), () => m13.off("change", k4);
  }, [
    l12,
    m13,
    h10,
    y7,
    N7,
    C7,
    d16
  ]), ho(m13, h10 ?? null, D7), mo(
    m13,
    g5 ?? null,
    D7
  ), po(
    m13,
    f15,
    D7
  ), Jt(m13, n7 || null, se4);
  const W = b9 == null ? void 0 : b9.run, F9 = (0, import_react96.useCallback)(() => {
    var H6;
    if (!W || !m13 || !m13.operations || !m13.hasFocus()) {
      W == null || W();
      return;
    }
    const A4 = m13.indexFromPos(m13.getCursor());
    let k4;
    for (const E9 of m13.operations)
      E9.loc && E9.loc.start <= A4 && E9.loc.end >= A4 && (k4 = (H6 = E9.name) == null ? void 0 : H6.value);
    k4 && k4 !== m13.operationName && y7(k4), W();
  }, [m13, W, y7]);
  return te5(m13, ["Cmd-Enter", "Ctrl-Enter"], F9), te5(m13, ["Shift-Ctrl-C"], w6), te5(
    m13,
    [
      "Shift-Ctrl-P",
      // Shift-Ctrl-P is hard coded in Firefox for private browsing so adding an alternative to prettify
      "Shift-Ctrl-F"
    ],
    B4
  ), te5(m13, ["Shift-Ctrl-M"], V5), _5;
}
s17(se4, "useQueryEditor");
function ho(e4, t18, n7) {
  (0, import_react96.useEffect)(() => {
    if (!e4)
      return;
    const r9 = e4.options.lint.schema !== t18;
    e4.state.lint.linterOptions.schema = t18, e4.options.lint.schema = t18, e4.options.hintOptions.schema = t18, e4.options.info.schema = t18, e4.options.jump.schema = t18, r9 && n7.current && n7.current.signal(e4, "change", e4);
  }, [e4, t18, n7]);
}
s17(ho, "useSynchronizeSchema");
function mo(e4, t18, n7) {
  (0, import_react96.useEffect)(() => {
    if (!e4)
      return;
    const r9 = e4.options.lint.validationRules !== t18;
    e4.state.lint.linterOptions.validationRules = t18, e4.options.lint.validationRules = t18, r9 && n7.current && n7.current.signal(e4, "change", e4);
  }, [e4, t18, n7]);
}
s17(mo, "useSynchronizeValidationRules");
function po(e4, t18, n7) {
  const r9 = (0, import_react96.useMemo)(
    () => [...t18.values()],
    [t18]
  );
  (0, import_react96.useEffect)(() => {
    if (!e4)
      return;
    const l12 = e4.options.lint.externalFragments !== r9;
    e4.state.lint.linterOptions.externalFragments = r9, e4.options.lint.externalFragments = r9, e4.options.hintOptions.externalFragments = r9, l12 && n7.current && n7.current.signal(e4, "change", e4);
  }, [e4, r9, n7]);
}
s17(po, "useSynchronizeExternalFragments");
var fo = /^[a-zA-Z0-9_@(]$/;
var Xt = "query";
var go = "operationName";
function Co({
  defaultQuery: e4,
  defaultHeaders: t18,
  headers: n7,
  defaultTabs: r9,
  query: l12,
  variables: c14,
  storage: i9
}) {
  const h10 = i9 == null ? void 0 : i9.get(we5);
  try {
    if (!h10)
      throw new Error("Storage for tabs is empty");
    const f15 = JSON.parse(h10);
    if (yo(f15)) {
      const p7 = De4({ query: l12, variables: c14, headers: n7 });
      let m13 = -1;
      for (let y7 = 0; y7 < f15.tabs.length; y7++) {
        const u12 = f15.tabs[y7];
        u12.hash = De4({
          query: u12.query,
          variables: u12.variables,
          headers: u12.headers
        }), u12.hash === p7 && (m13 = y7);
      }
      if (m13 >= 0)
        f15.activeTabIndex = m13;
      else {
        const y7 = l12 ? ct2(l12) : null;
        f15.tabs.push({
          id: rn(),
          hash: p7,
          title: y7 || ut2,
          query: l12,
          variables: c14,
          headers: n7,
          operationName: y7,
          response: null
        }), f15.activeTabIndex = f15.tabs.length - 1;
      }
      return f15;
    }
    throw new Error("Storage for tabs is invalid");
  } catch {
    return {
      activeTabIndex: 0,
      tabs: (r9 || [
        {
          query: l12 ?? e4,
          variables: c14,
          headers: n7 ?? t18
        }
      ]).map(tn)
    };
  }
}
s17(Co, "getDefaultTabState");
function yo(e4) {
  return e4 && typeof e4 == "object" && !Array.isArray(e4) && bo(e4, "activeTabIndex") && "tabs" in e4 && Array.isArray(e4.tabs) && e4.tabs.every(vo);
}
s17(yo, "isTabsState");
function vo(e4) {
  return e4 && typeof e4 == "object" && !Array.isArray(e4) && xt2(e4, "id") && xt2(e4, "title") && fe4(e4, "query") && fe4(e4, "variables") && fe4(e4, "headers") && fe4(e4, "operationName") && fe4(e4, "response");
}
s17(vo, "isTabState");
function bo(e4, t18) {
  return t18 in e4 && typeof e4[t18] == "number";
}
s17(bo, "hasNumberKey");
function xt2(e4, t18) {
  return t18 in e4 && typeof e4[t18] == "string";
}
s17(xt2, "hasStringKey");
function fe4(e4, t18) {
  return t18 in e4 && (typeof e4[t18] == "string" || e4[t18] === null);
}
s17(fe4, "hasStringOrNullKey");
function wo({
  queryEditor: e4,
  variableEditor: t18,
  headerEditor: n7,
  responseEditor: r9
}) {
  return (0, import_react96.useCallback)(
    (l12) => {
      const c14 = (e4 == null ? void 0 : e4.getValue()) ?? null, i9 = (t18 == null ? void 0 : t18.getValue()) ?? null, h10 = (n7 == null ? void 0 : n7.getValue()) ?? null, f15 = (e4 == null ? void 0 : e4.operationName) ?? null, p7 = (r9 == null ? void 0 : r9.getValue()) ?? null;
      return nn(l12, {
        query: c14,
        variables: i9,
        headers: h10,
        response: p7,
        operationName: f15
      });
    },
    [e4, t18, n7, r9]
  );
}
s17(wo, "useSynchronizeActiveTabValues");
function en(e4, t18 = false) {
  return JSON.stringify(
    e4,
    (n7, r9) => n7 === "hash" || n7 === "response" || !t18 && n7 === "headers" ? null : r9
  );
}
s17(en, "serializeTabState");
function xo({
  storage: e4,
  shouldPersistHeaders: t18
}) {
  const n7 = (0, import_react96.useMemo)(
    () => pe2(500, (r9) => {
      e4 == null || e4.set(we5, r9);
    }),
    [e4]
  );
  return (0, import_react96.useCallback)(
    (r9) => {
      n7(en(r9, t18));
    },
    [t18, n7]
  );
}
s17(xo, "useStoreTabs");
function Eo({
  queryEditor: e4,
  variableEditor: t18,
  headerEditor: n7,
  responseEditor: r9
}) {
  return (0, import_react96.useCallback)(
    ({
      query: l12,
      variables: c14,
      headers: i9,
      response: h10
    }) => {
      e4 == null || e4.setValue(l12 ?? ""), t18 == null || t18.setValue(c14 ?? ""), n7 == null || n7.setValue(i9 ?? ""), r9 == null || r9.setValue(h10 ?? "");
    },
    [n7, e4, r9, t18]
  );
}
s17(Eo, "useSetEditorValues");
function tn({
  query: e4 = null,
  variables: t18 = null,
  headers: n7 = null
} = {}) {
  return {
    id: rn(),
    hash: De4({ query: e4, variables: t18, headers: n7 }),
    title: e4 && ct2(e4) || ut2,
    query: e4,
    variables: t18,
    headers: n7,
    operationName: null,
    response: null
  };
}
s17(tn, "createTab");
function nn(e4, t18) {
  return {
    ...e4,
    tabs: e4.tabs.map((n7, r9) => {
      if (r9 !== e4.activeTabIndex)
        return n7;
      const l12 = { ...n7, ...t18 };
      return {
        ...l12,
        hash: De4(l12),
        title: l12.operationName || (l12.query ? ct2(l12.query) : void 0) || ut2
      };
    })
  };
}
s17(nn, "setPropertiesInActiveTab");
function rn() {
  const e4 = s17(() => Math.floor((1 + Math.random()) * 65536).toString(16).slice(1), "s4");
  return `${e4()}${e4()}-${e4()}-${e4()}-${e4()}-${e4()}${e4()}${e4()}`;
}
s17(rn, "guid");
function De4(e4) {
  return [e4.query ?? "", e4.variables ?? "", e4.headers ?? ""].join("|");
}
s17(De4, "hashFromTabContents");
function ct2(e4) {
  const n7 = /^(?!#).*(query|subscription|mutation)\s+([a-zA-Z0-9_]+)/m.exec(e4);
  return (n7 == null ? void 0 : n7[2]) ?? null;
}
s17(ct2, "fuzzyExtractOperationName");
function Lo(e4) {
  const t18 = e4 == null ? void 0 : e4.get(we5);
  if (t18) {
    const n7 = JSON.parse(t18);
    e4 == null || e4.set(
      we5,
      JSON.stringify(
        n7,
        (r9, l12) => r9 === "headers" ? null : l12
      )
    );
  }
}
s17(Lo, "clearHeadersFromTabs");
var ut2 = "<untitled>";
var we5 = "tabState";
function me4({
  editorTheme: e4 = $e6,
  keyMap: t18 = _e4,
  onClickReference: n7,
  onEdit: r9,
  readOnly: l12 = false
} = {}, c14) {
  const { initialVariables: i9, variableEditor: h10, setVariableEditor: f15 } = j5({
    nonNull: true,
    caller: c14 || me4
  }), p7 = We4(), m13 = be4({ caller: c14 || me4 }), y7 = Qe5({ caller: c14 || me4 }), u12 = (0, import_react96.useRef)(null), g5 = (0, import_react96.useRef)();
  return (0, import_react96.useEffect)(() => {
    let C7 = true;
    return Se5([
      import("./hint.es2-7PXVN23E.js"),
      import("./lint.es3-QU3BKKRF.js"),
      import("./mode.es2-DLJN75AK.js")
    ]).then((d16) => {
      if (!C7)
        return;
      g5.current = d16;
      const b9 = u12.current;
      if (!b9)
        return;
      const N7 = d16(b9, {
        value: i9,
        lineNumbers: true,
        tabSize: 2,
        mode: "graphql-variables",
        theme: e4,
        autoCloseBrackets: true,
        matchBrackets: true,
        showCursorWhenSelecting: true,
        readOnly: l12 ? "nocursor" : false,
        foldGutter: true,
        lint: {
          // @ts-expect-error
          variableToType: void 0
        },
        hintOptions: {
          closeOnUnfocus: false,
          completeSingle: false,
          container: b9,
          // @ts-expect-error
          variableToType: void 0
        },
        gutters: ["CodeMirror-linenumbers", "CodeMirror-foldgutter"],
        extraKeys: Ze5
      });
      N7.addKeyMap({
        "Cmd-Space"() {
          N7.showHint({ completeSingle: false, container: b9 });
        },
        "Ctrl-Space"() {
          N7.showHint({ completeSingle: false, container: b9 });
        },
        "Alt-Space"() {
          N7.showHint({ completeSingle: false, container: b9 });
        },
        "Shift-Space"() {
          N7.showHint({ completeSingle: false, container: b9 });
        }
      }), N7.on("keyup", (L2, x4) => {
        const { code: w6, key: V5, shiftKey: B4 } = x4, _5 = w6.startsWith("Key"), D7 = !B4 && w6.startsWith("Digit");
        (_5 || D7 || V5 === "_" || V5 === '"') && L2.execCommand("autocomplete");
      }), f15(N7);
    }), () => {
      C7 = false;
    };
  }, [e4, i9, l12, f15]), Ge5(h10, "keyMap", t18), Kt(
    h10,
    r9,
    on,
    "variables",
    me4
  ), Jt(h10, n7 || null, me4), te5(h10, ["Cmd-Enter", "Ctrl-Enter"], p7 == null ? void 0 : p7.run), te5(h10, ["Shift-Ctrl-P"], y7), te5(h10, ["Shift-Ctrl-M"], m13), u12;
}
s17(me4, "useVariableEditor");
var on = "variables";
var ln = ce4("EditorContext");
function So(e4) {
  const t18 = de6(), [n7, r9] = (0, import_react96.useState)(
    null
  ), [l12, c14] = (0, import_react96.useState)(null), [i9, h10] = (0, import_react96.useState)(
    null
  ), [f15, p7] = (0, import_react96.useState)(
    null
  ), [m13, y7] = (0, import_react96.useState)(
    () => {
      const v6 = (t18 == null ? void 0 : t18.get(ze5)) !== null;
      return e4.shouldPersistHeaders !== false && v6 ? (t18 == null ? void 0 : t18.get(ze5)) === "true" : !!e4.shouldPersistHeaders;
    }
  );
  Me3(n7, e4.headers), Me3(l12, e4.query), Me3(i9, e4.response), Me3(f15, e4.variables);
  const u12 = xo({
    storage: t18,
    shouldPersistHeaders: m13
  }), [g5] = (0, import_react96.useState)(() => {
    const v6 = e4.query ?? (t18 == null ? void 0 : t18.get(Xt)) ?? null, S9 = e4.variables ?? (t18 == null ? void 0 : t18.get(on)) ?? null, R5 = e4.headers ?? (t18 == null ? void 0 : t18.get(He5)) ?? null, U6 = e4.response ?? "", Y4 = Co({
      query: v6,
      variables: S9,
      headers: R5,
      defaultTabs: e4.defaultTabs,
      defaultQuery: e4.defaultQuery || No,
      defaultHeaders: e4.defaultHeaders,
      storage: t18
    });
    return u12(Y4), {
      query: v6 ?? (Y4.activeTabIndex === 0 ? Y4.tabs[0].query : null) ?? "",
      variables: S9 ?? "",
      headers: R5 ?? e4.defaultHeaders ?? "",
      response: U6,
      tabState: Y4
    };
  }), [C7, d16] = (0, import_react96.useState)(g5.tabState), b9 = (0, import_react96.useCallback)(
    (v6) => {
      if (v6) {
        t18 == null || t18.set(He5, (n7 == null ? void 0 : n7.getValue()) ?? "");
        const S9 = en(C7, true);
        t18 == null || t18.set(we5, S9);
      } else
        t18 == null || t18.set(He5, ""), Lo(t18);
      y7(v6), t18 == null || t18.set(ze5, v6.toString());
    },
    [t18, C7, n7]
  ), N7 = (0, import_react96.useRef)();
  (0, import_react96.useEffect)(() => {
    const v6 = !!e4.shouldPersistHeaders;
    N7.current !== v6 && (b9(v6), N7.current = v6);
  }, [e4.shouldPersistHeaders, b9]);
  const L2 = wo({
    queryEditor: l12,
    variableEditor: f15,
    headerEditor: n7,
    responseEditor: i9
  }), x4 = Eo({
    queryEditor: l12,
    variableEditor: f15,
    headerEditor: n7,
    responseEditor: i9
  }), { onTabChange: w6, defaultHeaders: V5, children: B4 } = e4, _5 = (0, import_react96.useCallback)(() => {
    d16((v6) => {
      const S9 = L2(v6), R5 = {
        tabs: [...S9.tabs, tn({ headers: V5 })],
        activeTabIndex: S9.tabs.length
      };
      return u12(R5), x4(R5.tabs[R5.activeTabIndex]), w6 == null || w6(R5), R5;
    });
  }, [
    V5,
    w6,
    x4,
    u12,
    L2
  ]), D7 = (0, import_react96.useCallback)(
    (v6) => {
      d16((S9) => {
        const R5 = {
          ...S9,
          activeTabIndex: v6
        };
        return u12(R5), x4(R5.tabs[R5.activeTabIndex]), w6 == null || w6(R5), R5;
      });
    },
    [w6, x4, u12]
  ), O4 = (0, import_react96.useCallback)(
    (v6) => {
      d16((S9) => {
        const R5 = S9.tabs[S9.activeTabIndex], U6 = {
          tabs: v6,
          activeTabIndex: v6.indexOf(R5)
        };
        return u12(U6), x4(U6.tabs[U6.activeTabIndex]), w6 == null || w6(U6), U6;
      });
    },
    [w6, x4, u12]
  ), W = (0, import_react96.useCallback)(
    (v6) => {
      d16((S9) => {
        const R5 = {
          tabs: S9.tabs.filter((U6, Y4) => v6 !== Y4),
          activeTabIndex: Math.max(S9.activeTabIndex - 1, 0)
        };
        return u12(R5), x4(R5.tabs[R5.activeTabIndex]), w6 == null || w6(R5), R5;
      });
    },
    [w6, x4, u12]
  ), F9 = (0, import_react96.useCallback)(
    (v6) => {
      d16((S9) => {
        const R5 = nn(S9, v6);
        return u12(R5), w6 == null || w6(R5), R5;
      });
    },
    [w6, u12]
  ), { onEditOperationName: A4 } = e4, k4 = (0, import_react96.useCallback)(
    (v6) => {
      l12 && (l12.operationName = v6, F9({ operationName: v6 }), A4 == null || A4(v6));
    },
    [A4, l12, F9]
  ), H6 = (0, import_react96.useMemo)(() => {
    const v6 = /* @__PURE__ */ new Map();
    if (Array.isArray(e4.externalFragments))
      for (const S9 of e4.externalFragments)
        v6.set(S9.name.value, S9);
    else if (typeof e4.externalFragments == "string")
      visit(parse(e4.externalFragments, {}), {
        FragmentDefinition(S9) {
          v6.set(S9.name.value, S9);
        }
      });
    else if (e4.externalFragments)
      throw new Error(
        "The `externalFragments` prop must either be a string that contains the fragment definitions in SDL or a list of FragmentDefinitionNode objects."
      );
    return v6;
  }, [e4.externalFragments]), E9 = (0, import_react96.useMemo)(
    () => e4.validationRules || [],
    [e4.validationRules]
  ), Z7 = (0, import_react96.useMemo)(
    () => ({
      ...C7,
      addTab: _5,
      changeTab: D7,
      moveTab: O4,
      closeTab: W,
      updateActiveTabValues: F9,
      headerEditor: n7,
      queryEditor: l12,
      responseEditor: i9,
      variableEditor: f15,
      setHeaderEditor: r9,
      setQueryEditor: c14,
      setResponseEditor: h10,
      setVariableEditor: p7,
      setOperationName: k4,
      initialQuery: g5.query,
      initialVariables: g5.variables,
      initialHeaders: g5.headers,
      initialResponse: g5.response,
      externalFragments: H6,
      validationRules: E9,
      shouldPersistHeaders: m13,
      setShouldPersistHeaders: b9
    }),
    [
      C7,
      _5,
      D7,
      O4,
      W,
      F9,
      n7,
      l12,
      i9,
      f15,
      k4,
      g5,
      H6,
      E9,
      m13,
      b9
    ]
  );
  return (0, import_jsx_runtime.jsx)(ln.Provider, { value: Z7, children: B4 });
}
s17(So, "EditorContextProvider");
var j5 = ue7(ln);
var ze5 = "shouldPersistHeaders";
var No = `# Welcome to GraphiQL
#
# GraphiQL is an in-browser tool for writing, validating, and
# testing GraphQL queries.
#
# Type queries into this side of the screen, and you will see intelligent
# typeaheads aware of the current GraphQL type schema and live syntax and
# validation errors highlighted within the text.
#
# GraphQL queries typically start with a "{" character. Lines that start
# with a # are ignored.
#
# An example GraphQL query might look like:
#
#     {
#       field(arg: "value") {
#         subField
#       }
#     }
#
# Keyboard shortcuts:
#
#   Prettify query:  Shift-Ctrl-P (or press the prettify button)
#
#  Merge fragments:  Shift-Ctrl-M (or press the merge button)
#
#        Run Query:  Ctrl-Enter (or press the play button)
#
#    Auto Complete:  Ctrl-Space (or just start typing)
#

`;
function Et({ isHidden: e4, ...t18 }) {
  const { headerEditor: n7 } = j5({
    nonNull: true,
    caller: Et
  }), r9 = Ce3(t18, Et);
  return (0, import_react96.useEffect)(() => {
    e4 || n7 == null || n7.refresh();
  }, [n7, e4]), (0, import_jsx_runtime.jsx)("div", { className: clsx("graphiql-editor", e4 && "hidden"), ref: r9 });
}
s17(Et, "HeaderEditor");
function lt2(e4) {
  var f15;
  const [t18, n7] = (0, import_react96.useState)({
    width: null,
    height: null
  }), [r9, l12] = (0, import_react96.useState)(null), c14 = (0, import_react96.useRef)(null), i9 = (f15 = sn(e4.token)) == null ? void 0 : f15.href;
  (0, import_react96.useEffect)(() => {
    if (c14.current) {
      if (!i9) {
        n7({ width: null, height: null }), l12(null);
        return;
      }
      fetch(i9, { method: "HEAD" }).then((p7) => {
        l12(p7.headers.get("Content-Type"));
      }).catch(() => {
        l12(null);
      });
    }
  }, [i9]);
  const h10 = t18.width !== null && t18.height !== null ? (0, import_jsx_runtime.jsxs)("div", { children: [
    t18.width,
    "x",
    t18.height,
    r9 === null ? null : " " + r9
  ] }) : null;
  return (0, import_jsx_runtime.jsxs)("div", { children: [
    (0, import_jsx_runtime.jsx)(
      "img",
      {
        onLoad: () => {
          var p7, m13;
          n7({
            width: ((p7 = c14.current) == null ? void 0 : p7.naturalWidth) ?? null,
            height: ((m13 = c14.current) == null ? void 0 : m13.naturalHeight) ?? null
          });
        },
        ref: c14,
        src: i9
      }
    ),
    h10
  ] });
}
s17(lt2, "ImagePreview");
lt2.shouldRender = s17(function(t18) {
  const n7 = sn(t18);
  return n7 ? ko(n7) : false;
}, "shouldRender");
function sn(e4) {
  if (e4.type !== "string")
    return;
  const t18 = e4.string.slice(1).slice(0, -1).trim();
  try {
    const { location: n7 } = window;
    return new URL(t18, n7.protocol + "//" + n7.host);
  } catch {
    return;
  }
}
s17(sn, "tokenToURL");
function ko(e4) {
  return /(bmp|gif|jpeg|jpg|png|svg)$/.test(e4.pathname);
}
s17(ko, "isImageURL");
function To(e4) {
  const t18 = se4(e4, To);
  return (0, import_jsx_runtime.jsx)("div", { className: "graphiql-editor", ref: t18 });
}
s17(To, "QueryEditor");
function it4({
  responseTooltip: e4,
  editorTheme: t18 = $e6,
  keyMap: n7 = _e4
} = {}, r9) {
  const { fetchError: l12, validationErrors: c14 } = re5({
    nonNull: true,
    caller: r9 || it4
  }), { initialResponse: i9, responseEditor: h10, setResponseEditor: f15 } = j5({
    nonNull: true,
    caller: r9 || it4
  }), p7 = (0, import_react96.useRef)(null), m13 = (0, import_react96.useRef)(
    e4
  );
  return (0, import_react96.useEffect)(() => {
    m13.current = e4;
  }, [e4]), (0, import_react96.useEffect)(() => {
    let y7 = true;
    return Se5(
      [
        import("./foldgutter.es-NKOXVEC5.js").then((u12) => u12.f),
        import("./brace-fold.es-VP5LGWRX.js").then((u12) => u12.b),
        import("./dialog.es-Y4ZXCP44.js").then((u12) => u12.d),
        import("./search.es-IKQJJVAQ.js").then((u12) => u12.s),
        import("./searchcursor.es-RKXSKNER.js").then((u12) => u12.s),
        import("./jump-to-line.es-VF5DKLXF.js").then((u12) => u12.j),
        // @ts-expect-error
        import("./sublime.es-6WJ2CBJK.js").then((u12) => u12.s),
        import("./mode.es3-KQEPPEFX.js"),
        import("./info-addon.es-I5RB5C7N.js")
      ],
      { useCommonAddons: false }
    ).then((u12) => {
      if (!y7)
        return;
      const g5 = document.createElement("div");
      u12.registerHelper(
        "info",
        "graphql-results",
        (b9, N7, L2, x4) => {
          const w6 = [], V5 = m13.current;
          return V5 && w6.push(
            (0, import_jsx_runtime.jsx)(V5, { pos: x4, token: b9 })
          ), lt2.shouldRender(b9) && w6.push(
            (0, import_jsx_runtime.jsx)(lt2, { token: b9 }, "image-preview")
          ), w6.length ? (import_react_dom3.default.render(w6, g5), g5) : (import_react_dom3.default.unmountComponentAtNode(g5), null);
        }
      );
      const C7 = p7.current;
      if (!C7)
        return;
      const d16 = u12(C7, {
        value: i9,
        lineWrapping: true,
        readOnly: true,
        theme: t18,
        mode: "graphql-results",
        foldGutter: true,
        gutters: ["CodeMirror-foldgutter"],
        // @ts-expect-error
        info: true,
        extraKeys: Ze5
      });
      f15(d16);
    }), () => {
      y7 = false;
    };
  }, [t18, i9, f15]), Ge5(h10, "keyMap", n7), (0, import_react96.useEffect)(() => {
    l12 && (h10 == null || h10.setValue(l12)), c14.length > 0 && (h10 == null || h10.setValue(formatError(c14)));
  }, [h10, l12, c14]), p7;
}
s17(it4, "useResponseEditor");
function Mo(e4) {
  const t18 = it4(e4, Mo);
  return (0, import_jsx_runtime.jsx)(
    "section",
    {
      className: "result-window",
      "aria-label": "Result Window",
      "aria-live": "polite",
      "aria-atomic": "true",
      ref: t18
    }
  );
}
s17(Mo, "ResponseEditor");
function Lt({ isHidden: e4, ...t18 }) {
  const { variableEditor: n7 } = j5({
    nonNull: true,
    caller: Lt
  }), r9 = me4(t18, Lt);
  return (0, import_react96.useEffect)(() => {
    n7 && !e4 && n7.refresh();
  }, [n7, e4]), (0, import_jsx_runtime.jsx)("div", { className: clsx("graphiql-editor", e4 && "hidden"), ref: r9 });
}
s17(Lt, "VariableEditor");
function il({
  children: e4,
  dangerouslyAssumeSchemaIsValid: t18,
  defaultQuery: n7,
  defaultHeaders: r9,
  defaultTabs: l12,
  externalFragments: c14,
  fetcher: i9,
  getDefaultFieldNames: h10,
  headers: f15,
  inputValueDeprecation: p7,
  introspectionQueryName: m13,
  maxHistoryLength: y7,
  onEditOperationName: u12,
  onSchemaChange: g5,
  onTabChange: C7,
  onTogglePluginVisibility: d16,
  operationName: b9,
  plugins: N7,
  query: L2,
  response: x4,
  schema: w6,
  schemaDescription: V5,
  shouldPersistHeaders: B4,
  storage: _5,
  validationRules: D7,
  variables: O4,
  visiblePlugin: W
}) {
  return (0, import_jsx_runtime.jsx)(Fn, { storage: _5, children: (0, import_jsx_runtime.jsx)(Wr, { maxHistoryLength: y7, children: (0, import_jsx_runtime.jsx)(
    So,
    {
      defaultQuery: n7,
      defaultHeaders: r9,
      defaultTabs: l12,
      externalFragments: c14,
      headers: f15,
      onEditOperationName: u12,
      onTabChange: C7,
      query: L2,
      response: x4,
      shouldPersistHeaders: B4,
      validationRules: D7,
      variables: O4,
      children: (0, import_jsx_runtime.jsx)(
        Zt,
        {
          dangerouslyAssumeSchemaIsValid: t18,
          fetcher: i9,
          inputValueDeprecation: p7,
          introspectionQueryName: m13,
          onSchemaChange: g5,
          schema: w6,
          schemaDescription: V5,
          children: (0, import_jsx_runtime.jsx)(
            et5,
            {
              getDefaultFieldNames: h10,
              fetcher: i9,
              operationName: b9,
              children: (0, import_jsx_runtime.jsx)(Qt, { children: (0, import_jsx_runtime.jsx)(
                io,
                {
                  onTogglePluginVisibility: d16,
                  plugins: N7,
                  visiblePlugin: W,
                  children: e4
                }
              ) })
            }
          )
        }
      )
    }
  ) }) });
}
s17(il, "GraphiQLProvider");
function sl() {
  const e4 = de6(), [t18, n7] = (0, import_react96.useState)(() => {
    if (!e4)
      return null;
    const l12 = e4.get(Ue3);
    switch (l12) {
      case "light":
        return "light";
      case "dark":
        return "dark";
      default:
        return typeof l12 == "string" && e4.set(Ue3, ""), null;
    }
  });
  (0, import_react96.useLayoutEffect)(() => {
    typeof window > "u" || (document.body.classList.remove("graphiql-light", "graphiql-dark"), t18 && document.body.classList.add(`graphiql-${t18}`));
  }, [t18]);
  const r9 = (0, import_react96.useCallback)(
    (l12) => {
      e4 == null || e4.set(Ue3, l12 || ""), n7(l12);
    },
    [e4]
  );
  return (0, import_react96.useMemo)(() => ({ theme: t18, setTheme: r9 }), [t18, r9]);
}
s17(sl, "useTheme");
var Ue3 = "theme";
function al({
  defaultSizeRelation: e4 = Vo,
  direction: t18,
  initiallyHidden: n7,
  onHiddenElementChange: r9,
  sizeThresholdFirst: l12 = 100,
  sizeThresholdSecond: c14 = 100,
  storageKey: i9
}) {
  const h10 = de6(), f15 = (0, import_react96.useMemo)(
    () => pe2(500, (L2) => {
      i9 && (h10 == null || h10.set(i9, L2));
    }),
    [h10, i9]
  ), [p7, m13] = (0, import_react96.useState)(
    () => {
      const L2 = i9 && (h10 == null ? void 0 : h10.get(i9));
      return L2 === Ve5 || n7 === "first" ? "first" : L2 === Re4 || n7 === "second" ? "second" : null;
    }
  ), y7 = (0, import_react96.useCallback)(
    (L2) => {
      L2 !== p7 && (m13(L2), r9 == null || r9(L2));
    },
    [p7, r9]
  ), u12 = (0, import_react96.useRef)(null), g5 = (0, import_react96.useRef)(null), C7 = (0, import_react96.useRef)(null), d16 = (0, import_react96.useRef)(`${e4}`);
  (0, import_react96.useLayoutEffect)(() => {
    const L2 = i9 && (h10 == null ? void 0 : h10.get(i9)) || d16.current;
    u12.current && (u12.current.style.display = "flex", u12.current.style.flex = L2 === Ve5 || L2 === Re4 ? d16.current : L2), C7.current && (C7.current.style.display = "flex", C7.current.style.flex = "1"), g5.current && (g5.current.style.display = "flex");
  }, [t18, h10, i9]);
  const b9 = (0, import_react96.useCallback)((L2) => {
    const x4 = L2 === "first" ? u12.current : C7.current;
    if (x4 && (x4.style.left = "-1000px", x4.style.position = "absolute", x4.style.opacity = "0", x4.style.height = "500px", x4.style.width = "500px", u12.current)) {
      const w6 = parseFloat(u12.current.style.flex);
      (!Number.isFinite(w6) || w6 < 1) && (u12.current.style.flex = "1");
    }
  }, []), N7 = (0, import_react96.useCallback)(
    (L2) => {
      const x4 = L2 === "first" ? u12.current : C7.current;
      if (x4 && (x4.style.width = "", x4.style.height = "", x4.style.opacity = "", x4.style.position = "", x4.style.left = "", h10 && i9)) {
        const w6 = h10.get(i9);
        u12.current && w6 !== Ve5 && w6 !== Re4 && (u12.current.style.flex = w6 || d16.current);
      }
    },
    [h10, i9]
  );
  return (0, import_react96.useLayoutEffect)(() => {
    p7 === "first" ? b9("first") : N7("first"), p7 === "second" ? b9("second") : N7("second");
  }, [p7, b9, N7]), (0, import_react96.useEffect)(() => {
    if (!g5.current || !u12.current || !C7.current)
      return;
    const L2 = g5.current, x4 = u12.current, w6 = x4.parentElement, V5 = t18 === "horizontal" ? "clientX" : "clientY", B4 = t18 === "horizontal" ? "left" : "top", _5 = t18 === "horizontal" ? "right" : "bottom", D7 = t18 === "horizontal" ? "clientWidth" : "clientHeight";
    function O4(F9) {
      F9.preventDefault();
      const A4 = F9[V5] - L2.getBoundingClientRect()[B4];
      function k4(E9) {
        if (E9.buttons === 0)
          return H6();
        const Z7 = E9[V5] - w6.getBoundingClientRect()[B4] - A4, v6 = w6.getBoundingClientRect()[_5] - E9[V5] + A4 - L2[D7];
        if (Z7 < l12)
          y7("first"), f15(Ve5);
        else if (v6 < c14)
          y7("second"), f15(Re4);
        else {
          y7(null);
          const S9 = `${Z7 / v6}`;
          x4.style.flex = S9, f15(S9);
        }
      }
      s17(k4, "handleMouseMove");
      function H6() {
        document.removeEventListener("mousemove", k4), document.removeEventListener("mouseup", H6);
      }
      s17(H6, "handleMouseUp"), document.addEventListener("mousemove", k4), document.addEventListener("mouseup", H6);
    }
    s17(O4, "handleMouseDown"), L2.addEventListener("mousedown", O4);
    function W() {
      u12.current && (u12.current.style.flex = d16.current), f15(d16.current), y7(null);
    }
    return s17(W, "reset"), L2.addEventListener("dblclick", W), () => {
      L2.removeEventListener("mousedown", O4), L2.removeEventListener("dblclick", W);
    };
  }, [
    t18,
    y7,
    l12,
    c14,
    f15
  ]), (0, import_react96.useMemo)(
    () => ({
      dragBarRef: g5,
      hiddenElement: p7,
      firstRef: u12,
      setHiddenElement: m13,
      secondRef: C7
    }),
    [p7, m13]
  );
}
s17(al, "useDragResize");
var Vo = 1;
var Ve5 = "hide-first";
var Re4 = "hide-second";
var Ro = (0, import_react96.forwardRef)(({ label: e4, onClick: t18, ...n7 }, r9) => {
  const [l12, c14] = (0, import_react96.useState)(null), i9 = (0, import_react96.useCallback)(
    (h10) => {
      try {
        t18 == null || t18(h10), c14(null);
      } catch (f15) {
        c14(
          f15 instanceof Error ? f15 : new Error(`Toolbar button click failed: ${f15}`)
        );
      }
    },
    [t18]
  );
  return (0, import_jsx_runtime.jsx)(ae3, { label: e4, children: (0, import_jsx_runtime.jsx)(
    X5,
    {
      ...n7,
      ref: r9,
      type: "button",
      className: clsx(
        "graphiql-toolbar-button",
        l12 && "error",
        n7.className
      ),
      onClick: i9,
      "aria-label": l12 ? l12.message : e4,
      "aria-invalid": l12 ? "true" : n7["aria-invalid"]
    }
  ) });
});
Ro.displayName = "ToolbarButton";
function St() {
  const { queryEditor: e4, setOperationName: t18 } = j5({
    nonNull: true,
    caller: St
  }), { isFetching: n7, isSubscribed: r9, operationName: l12, run: c14, stop: i9 } = We4({
    nonNull: true,
    caller: St
  }), h10 = (e4 == null ? void 0 : e4.operations) || [], f15 = h10.length > 1 && typeof l12 != "string", p7 = n7 || r9, m13 = `${p7 ? "Stop" : "Execute"} query (Ctrl-Enter)`, y7 = {
    type: "button",
    className: "graphiql-execute-button",
    children: p7 ? (0, import_jsx_runtime.jsx)(Pr, {}) : (0, import_jsx_runtime.jsx)(Vr, {}),
    "aria-label": m13
  };
  return f15 && !p7 ? (0, import_jsx_runtime.jsxs)(le3, { children: [
    (0, import_jsx_runtime.jsx)(ae3, { label: m13, children: (0, import_jsx_runtime.jsx)(le3.Button, { ...y7 }) }),
    (0, import_jsx_runtime.jsx)(le3.Content, { children: h10.map((u12, g5) => {
      const C7 = u12.name ? u12.name.value : `<Unnamed ${u12.operation}>`;
      return (0, import_jsx_runtime.jsx)(
        le3.Item,
        {
          onSelect: () => {
            var b9;
            const d16 = (b9 = u12.name) == null ? void 0 : b9.value;
            e4 && d16 && d16 !== e4.operationName && t18(d16), c14();
          },
          children: C7
        },
        `${C7}-${g5}`
      );
    }) })
  ] }) : (0, import_jsx_runtime.jsx)(ae3, { label: m13, children: (0, import_jsx_runtime.jsx)(
    "button",
    {
      ...y7,
      onClick: () => {
        p7 ? i9() : c14();
      }
    }
  ) });
}
s17(St, "ExecuteButton");
var Ho = s17(({
  button: e4,
  children: t18,
  label: n7,
  ...r9
}) => (0, import_jsx_runtime.jsxs)(le3, { ...r9, children: [
  (0, import_jsx_runtime.jsx)(ae3, { label: n7, children: (0, import_jsx_runtime.jsx)(
    le3.Button,
    {
      className: clsx(
        "graphiql-un-styled graphiql-toolbar-menu",
        r9.className
      ),
      "aria-label": n7,
      children: e4
    }
  ) }),
  (0, import_jsx_runtime.jsx)(le3.Content, { children: t18 })
] }), "ToolbarMenuRoot");
var cl = Le5(Ho, {
  Item: le3.Item
});

// node_modules/graphiql/esm/components/GraphiQL.js
var import_react98 = __toESM(require_react());
var __assign2 = function() {
  __assign2 = Object.assign || function(t18) {
    for (var s18, i9 = 1, n7 = arguments.length; i9 < n7; i9++) {
      s18 = arguments[i9];
      for (var p7 in s18)
        if (Object.prototype.hasOwnProperty.call(s18, p7))
          t18[p7] = s18[p7];
    }
    return t18;
  };
  return __assign2.apply(this, arguments);
};
var __rest2 = function(s18, e4) {
  var t18 = {};
  for (var p7 in s18)
    if (Object.prototype.hasOwnProperty.call(s18, p7) && e4.indexOf(p7) < 0)
      t18[p7] = s18[p7];
  if (s18 != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i9 = 0, p7 = Object.getOwnPropertySymbols(s18); i9 < p7.length; i9++) {
      if (e4.indexOf(p7[i9]) < 0 && Object.prototype.propertyIsEnumerable.call(s18, p7[i9]))
        t18[p7[i9]] = s18[p7[i9]];
    }
  return t18;
};
var __read2 = function(o14, n7) {
  var m13 = typeof Symbol === "function" && o14[Symbol.iterator];
  if (!m13)
    return o14;
  var i9 = m13.call(o14), r9, ar2 = [], e4;
  try {
    while ((n7 === void 0 || n7-- > 0) && !(r9 = i9.next()).done)
      ar2.push(r9.value);
  } catch (error2) {
    e4 = { error: error2 };
  } finally {
    try {
      if (r9 && !r9.done && (m13 = i9["return"]))
        m13.call(i9);
    } finally {
      if (e4)
        throw e4.error;
    }
  }
  return ar2;
};
var majorVersion = parseInt(import_react98.default.version.slice(0, 2), 10);
if (majorVersion < 16) {
  throw new Error([
    "GraphiQL 0.18.0 and after is not compatible with React 15 or below.",
    "If you are using a CDN source (jsdelivr, unpkg, etc), follow this example:",
    "https://github.com/graphql/graphiql/blob/master/examples/graphiql-cdn/index.html#L49"
  ].join("\n"));
}
function GraphiQL(_a) {
  var dangerouslyAssumeSchemaIsValid = _a.dangerouslyAssumeSchemaIsValid, defaultQuery = _a.defaultQuery, defaultTabs = _a.defaultTabs, externalFragments = _a.externalFragments, fetcher = _a.fetcher, getDefaultFieldNames = _a.getDefaultFieldNames, headers = _a.headers, inputValueDeprecation = _a.inputValueDeprecation, introspectionQueryName = _a.introspectionQueryName, maxHistoryLength = _a.maxHistoryLength, onEditOperationName = _a.onEditOperationName, onSchemaChange = _a.onSchemaChange, onTabChange = _a.onTabChange, onTogglePluginVisibility = _a.onTogglePluginVisibility, operationName = _a.operationName, plugins = _a.plugins, query = _a.query, response = _a.response, schema = _a.schema, schemaDescription = _a.schemaDescription, shouldPersistHeaders = _a.shouldPersistHeaders, storage = _a.storage, validationRules = _a.validationRules, variables = _a.variables, visiblePlugin = _a.visiblePlugin, defaultHeaders = _a.defaultHeaders, props = __rest2(_a, ["dangerouslyAssumeSchemaIsValid", "defaultQuery", "defaultTabs", "externalFragments", "fetcher", "getDefaultFieldNames", "headers", "inputValueDeprecation", "introspectionQueryName", "maxHistoryLength", "onEditOperationName", "onSchemaChange", "onTabChange", "onTogglePluginVisibility", "operationName", "plugins", "query", "response", "schema", "schemaDescription", "shouldPersistHeaders", "storage", "validationRules", "variables", "visiblePlugin", "defaultHeaders"]);
  if (typeof fetcher !== "function") {
    throw new TypeError("The `GraphiQL` component requires a `fetcher` function to be passed as prop.");
  }
  return import_react98.default.createElement(
    il,
    { getDefaultFieldNames, dangerouslyAssumeSchemaIsValid, defaultQuery, defaultHeaders, defaultTabs, externalFragments, fetcher, headers, inputValueDeprecation, introspectionQueryName, maxHistoryLength, onEditOperationName, onSchemaChange, onTabChange, onTogglePluginVisibility, plugins, visiblePlugin, operationName, query, response, schema, schemaDescription, shouldPersistHeaders, storage, validationRules, variables },
    import_react98.default.createElement(GraphiQLInterface, __assign2({ showPersistHeadersSettings: shouldPersistHeaders !== false }, props))
  );
}
GraphiQL.Logo = GraphiQLLogo;
GraphiQL.Toolbar = GraphiQLToolbar;
GraphiQL.Footer = GraphiQLFooter;
function GraphiQLInterface(props) {
  var _a, _b, _c;
  var isHeadersEditorEnabled = (_a = props.isHeadersEditorEnabled) !== null && _a !== void 0 ? _a : true;
  var editorContext = j5({ nonNull: true });
  var executionContext = We4({ nonNull: true });
  var schemaContext = re5({ nonNull: true });
  var storageContext = de6();
  var pluginContext = at2();
  var copy = Yt({ onCopyQuery: props.onCopyQuery });
  var merge = be4();
  var prettify = Qe5();
  var _d = sl(), theme = _d.theme, setTheme = _d.setTheme;
  var PluginContent = (_b = pluginContext === null || pluginContext === void 0 ? void 0 : pluginContext.visiblePlugin) === null || _b === void 0 ? void 0 : _b.content;
  var pluginResize = al({
    defaultSizeRelation: 1 / 3,
    direction: "horizontal",
    initiallyHidden: (pluginContext === null || pluginContext === void 0 ? void 0 : pluginContext.visiblePlugin) ? void 0 : "first",
    onHiddenElementChange: function(resizableElement) {
      if (resizableElement === "first") {
        pluginContext === null || pluginContext === void 0 ? void 0 : pluginContext.setVisiblePlugin(null);
      }
    },
    sizeThresholdSecond: 200,
    storageKey: "docExplorerFlex"
  });
  var editorResize = al({
    direction: "horizontal",
    storageKey: "editorFlex"
  });
  var editorToolsResize = al({
    defaultSizeRelation: 3,
    direction: "vertical",
    initiallyHidden: function() {
      if (props.defaultEditorToolsVisibility === "variables" || props.defaultEditorToolsVisibility === "headers") {
        return;
      }
      if (typeof props.defaultEditorToolsVisibility === "boolean") {
        return props.defaultEditorToolsVisibility ? void 0 : "second";
      }
      return editorContext.initialVariables || editorContext.initialHeaders ? void 0 : "second";
    }(),
    sizeThresholdSecond: 60,
    storageKey: "secondaryEditorFlex"
  });
  var _e5 = __read2((0, import_react98.useState)(function() {
    if (props.defaultEditorToolsVisibility === "variables" || props.defaultEditorToolsVisibility === "headers") {
      return props.defaultEditorToolsVisibility;
    }
    return !editorContext.initialVariables && editorContext.initialHeaders && isHeadersEditorEnabled ? "headers" : "variables";
  }), 2), activeSecondaryEditor = _e5[0], setActiveSecondaryEditor = _e5[1];
  var _f = __read2((0, import_react98.useState)(null), 2), showDialog = _f[0], setShowDialog = _f[1];
  var _g = __read2((0, import_react98.useState)(null), 2), clearStorageStatus = _g[0], setClearStorageStatus = _g[1];
  var children = import_react98.default.Children.toArray(props.children);
  var logo = children.find(function(child) {
    return isChildComponentType(child, GraphiQL.Logo);
  }) || import_react98.default.createElement(GraphiQL.Logo, null);
  var toolbar = children.find(function(child) {
    return isChildComponentType(child, GraphiQL.Toolbar);
  }) || import_react98.default.createElement(
    import_react98.default.Fragment,
    null,
    import_react98.default.createElement(
      Ro,
      { onClick: prettify, label: "Prettify query (Shift-Ctrl-P)" },
      import_react98.default.createElement(tl, { className: "graphiql-toolbar-icon", "aria-hidden": "true" })
    ),
    import_react98.default.createElement(
      Ro,
      { onClick: merge, label: "Merge fragments into query (Shift-Ctrl-M)" },
      import_react98.default.createElement(Xo, { className: "graphiql-toolbar-icon", "aria-hidden": "true" })
    ),
    import_react98.default.createElement(
      Ro,
      { onClick: copy, label: "Copy query (Shift-Ctrl-C)" },
      import_react98.default.createElement(Jo, { className: "graphiql-toolbar-icon", "aria-hidden": "true" })
    ),
    ((_c = props.toolbar) === null || _c === void 0 ? void 0 : _c.additionalContent) || null
  );
  var footer = children.find(function(child) {
    return isChildComponentType(child, GraphiQL.Footer);
  });
  var onClickReference = (0, import_react98.useCallback)(function() {
    if (pluginResize.hiddenElement === "first") {
      pluginResize.setHiddenElement(null);
    }
  }, [pluginResize]);
  var handleClearData = (0, import_react98.useCallback)(function() {
    try {
      storageContext === null || storageContext === void 0 ? void 0 : storageContext.clear();
      setClearStorageStatus("success");
    } catch (_a2) {
      setClearStorageStatus("error");
    }
  }, [storageContext]);
  var handlePersistHeaders = (0, import_react98.useCallback)(function(event) {
    editorContext.setShouldPersistHeaders(event.currentTarget.dataset.value === "true");
  }, [editorContext]);
  var handleChangeTheme = (0, import_react98.useCallback)(function(event) {
    var selectedTheme = event.currentTarget.dataset.theme;
    setTheme(selectedTheme || null);
  }, [setTheme]);
  var handleAddTab = editorContext.addTab;
  var handleRefetchSchema = schemaContext.introspect;
  var handleReorder = editorContext.moveTab;
  var handleShowDialog = (0, import_react98.useCallback)(function(event) {
    setShowDialog(event.currentTarget.dataset.value);
  }, []);
  var handlePluginClick = (0, import_react98.useCallback)(function(e4) {
    var context = pluginContext;
    var pluginIndex = Number(e4.currentTarget.dataset.index);
    var plugin = context.plugins.find(function(_5, index2) {
      return pluginIndex === index2;
    });
    var isVisible = plugin === context.visiblePlugin;
    if (isVisible) {
      context.setVisiblePlugin(null);
      pluginResize.setHiddenElement("first");
    } else {
      context.setVisiblePlugin(plugin);
      pluginResize.setHiddenElement(null);
    }
  }, [pluginContext, pluginResize]);
  var handleVariablesTabClick = (0, import_react98.useCallback)(function() {
    if (editorToolsResize.hiddenElement === "second") {
      editorToolsResize.setHiddenElement(null);
    }
    setActiveSecondaryEditor("variables");
  }, [editorToolsResize]);
  var handleHeadersTabClick = (0, import_react98.useCallback)(function() {
    if (editorToolsResize.hiddenElement === "second") {
      editorToolsResize.setHiddenElement(null);
    }
    setActiveSecondaryEditor("headers");
  }, [editorToolsResize]);
  var toggleEditorTools = (0, import_react98.useCallback)(function() {
    editorToolsResize.setHiddenElement(editorToolsResize.hiddenElement === "second" ? null : "second");
  }, [editorToolsResize]);
  var handleOpenShortKeysDialog = (0, import_react98.useCallback)(function(isOpen) {
    if (!isOpen) {
      setShowDialog(null);
    }
  }, []);
  var handleOpenSettingsDialog = (0, import_react98.useCallback)(function(isOpen) {
    if (!isOpen) {
      setShowDialog(null);
      setClearStorageStatus(null);
    }
  }, []);
  var addTab = import_react98.default.createElement(
    ae3,
    { label: "Add tab" },
    import_react98.default.createElement(
      X5,
      { type: "button", className: "graphiql-tab-add", onClick: handleAddTab, "aria-label": "Add tab" },
      import_react98.default.createElement(el, { "aria-hidden": "true" })
    )
  );
  return import_react98.default.createElement(
    ae3.Provider,
    null,
    import_react98.default.createElement(
      "div",
      { "data-testid": "graphiql-container", className: "graphiql-container" },
      import_react98.default.createElement(
        "div",
        { className: "graphiql-sidebar" },
        import_react98.default.createElement("div", { className: "graphiql-sidebar-section" }, pluginContext === null || pluginContext === void 0 ? void 0 : pluginContext.plugins.map(function(plugin, index2) {
          var isVisible = plugin === pluginContext.visiblePlugin;
          var label = "".concat(isVisible ? "Hide" : "Show", " ").concat(plugin.title);
          var Icon = plugin.icon;
          return import_react98.default.createElement(
            ae3,
            { key: plugin.title, label },
            import_react98.default.createElement(
              X5,
              { type: "button", className: isVisible ? "active" : "", onClick: handlePluginClick, "data-index": index2, "aria-label": label },
              import_react98.default.createElement(Icon, { "aria-hidden": "true" })
            )
          );
        })),
        import_react98.default.createElement(
          "div",
          { className: "graphiql-sidebar-section" },
          import_react98.default.createElement(
            ae3,
            { label: "Re-fetch GraphQL schema" },
            import_react98.default.createElement(
              X5,
              { type: "button", disabled: schemaContext.isFetching, onClick: handleRefetchSchema, "aria-label": "Re-fetch GraphQL schema" },
              import_react98.default.createElement(nl, { className: schemaContext.isFetching ? "graphiql-spin" : "", "aria-hidden": "true" })
            )
          ),
          import_react98.default.createElement(
            ae3,
            { label: "Open short keys dialog" },
            import_react98.default.createElement(
              X5,
              { type: "button", "data-value": "short-keys", onClick: handleShowDialog, "aria-label": "Open short keys dialog" },
              import_react98.default.createElement(Yo, { "aria-hidden": "true" })
            )
          ),
          import_react98.default.createElement(
            ae3,
            { label: "Open settings dialog" },
            import_react98.default.createElement(
              X5,
              { type: "button", "data-value": "settings", onClick: handleShowDialog, "aria-label": "Open settings dialog" },
              import_react98.default.createElement(rl, { "aria-hidden": "true" })
            )
          )
        )
      ),
      import_react98.default.createElement(
        "div",
        { className: "graphiql-main" },
        import_react98.default.createElement(
          "div",
          { ref: pluginResize.firstRef, style: {
            minWidth: "200px"
          } },
          import_react98.default.createElement("div", { className: "graphiql-plugin" }, PluginContent ? import_react98.default.createElement(PluginContent, null) : null)
        ),
        import_react98.default.createElement("div", { ref: pluginResize.dragBarRef }, (pluginContext === null || pluginContext === void 0 ? void 0 : pluginContext.visiblePlugin) ? import_react98.default.createElement("div", { className: "graphiql-horizontal-drag-bar" }) : null),
        import_react98.default.createElement(
          "div",
          { ref: pluginResize.secondRef, style: { minWidth: 0 } },
          import_react98.default.createElement(
            "div",
            { className: "graphiql-sessions" },
            import_react98.default.createElement(
              "div",
              { className: "graphiql-session-header" },
              import_react98.default.createElement(Br, { values: editorContext.tabs, onReorder: handleReorder, "aria-label": "Select active operation" }, editorContext.tabs.length > 1 ? import_react98.default.createElement(
                import_react98.default.Fragment,
                null,
                editorContext.tabs.map(function(tab, index2) {
                  return import_react98.default.createElement(
                    ll,
                    { key: tab.id, value: tab, isActive: index2 === editorContext.activeTabIndex },
                    import_react98.default.createElement(ll.Button, { "aria-controls": "graphiql-session", id: "graphiql-session-tab-".concat(index2), onClick: function() {
                      executionContext.stop();
                      editorContext.changeTab(index2);
                    } }, tab.title),
                    import_react98.default.createElement(ll.Close, { onClick: function() {
                      if (editorContext.activeTabIndex === index2) {
                        executionContext.stop();
                      }
                      editorContext.closeTab(index2);
                    } })
                  );
                }),
                addTab
              ) : null),
              import_react98.default.createElement(
                "div",
                { className: "graphiql-session-header-right" },
                editorContext.tabs.length === 1 ? import_react98.default.createElement("div", { className: "graphiql-add-tab-wrapper" }, addTab) : null,
                logo
              )
            ),
            import_react98.default.createElement(
              "div",
              { role: "tabpanel", id: "graphiql-session", className: "graphiql-session", "aria-labelledby": "graphiql-session-tab-".concat(editorContext.activeTabIndex) },
              import_react98.default.createElement(
                "div",
                { ref: editorResize.firstRef },
                import_react98.default.createElement(
                  "div",
                  { className: "graphiql-editors".concat(editorContext.tabs.length === 1 ? " full-height" : "") },
                  import_react98.default.createElement(
                    "div",
                    { ref: editorToolsResize.firstRef },
                    import_react98.default.createElement(
                      "section",
                      { className: "graphiql-query-editor", "aria-label": "Query Editor" },
                      import_react98.default.createElement(
                        "div",
                        { className: "graphiql-query-editor-wrapper" },
                        import_react98.default.createElement(To, { editorTheme: props.editorTheme, keyMap: props.keyMap, onClickReference, onCopyQuery: props.onCopyQuery, onEdit: props.onEditQuery, readOnly: props.readOnly })
                      ),
                      import_react98.default.createElement(
                        "div",
                        { className: "graphiql-toolbar", role: "toolbar", "aria-label": "Editor Commands" },
                        import_react98.default.createElement(St, null),
                        toolbar
                      )
                    )
                  ),
                  import_react98.default.createElement(
                    "div",
                    { ref: editorToolsResize.dragBarRef },
                    import_react98.default.createElement(
                      "div",
                      { className: "graphiql-editor-tools" },
                      import_react98.default.createElement(
                        "div",
                        { className: "graphiql-editor-tools-tabs" },
                        import_react98.default.createElement(X5, { type: "button", className: activeSecondaryEditor === "variables" && editorToolsResize.hiddenElement !== "second" ? "active" : "", onClick: handleVariablesTabClick }, "Variables"),
                        isHeadersEditorEnabled ? import_react98.default.createElement(X5, { type: "button", className: activeSecondaryEditor === "headers" && editorToolsResize.hiddenElement !== "second" ? "active" : "", onClick: handleHeadersTabClick }, "Headers") : null
                      ),
                      import_react98.default.createElement(
                        ae3,
                        { label: editorToolsResize.hiddenElement === "second" ? "Show editor tools" : "Hide editor tools" },
                        import_react98.default.createElement(X5, { type: "button", onClick: toggleEditorTools, "aria-label": editorToolsResize.hiddenElement === "second" ? "Show editor tools" : "Hide editor tools" }, editorToolsResize.hiddenElement === "second" ? import_react98.default.createElement(Ko, { className: "graphiql-chevron-icon", "aria-hidden": "true" }) : import_react98.default.createElement(Uo, { className: "graphiql-chevron-icon", "aria-hidden": "true" }))
                      )
                    )
                  ),
                  import_react98.default.createElement(
                    "div",
                    { ref: editorToolsResize.secondRef },
                    import_react98.default.createElement(
                      "section",
                      { className: "graphiql-editor-tool", "aria-label": activeSecondaryEditor === "variables" ? "Variables" : "Headers" },
                      import_react98.default.createElement(Lt, { editorTheme: props.editorTheme, isHidden: activeSecondaryEditor !== "variables", keyMap: props.keyMap, onEdit: props.onEditVariables, onClickReference, readOnly: props.readOnly }),
                      isHeadersEditorEnabled && import_react98.default.createElement(Et, { editorTheme: props.editorTheme, isHidden: activeSecondaryEditor !== "headers", keyMap: props.keyMap, onEdit: props.onEditHeaders, readOnly: props.readOnly })
                    )
                  )
                )
              ),
              import_react98.default.createElement(
                "div",
                { ref: editorResize.dragBarRef },
                import_react98.default.createElement("div", { className: "graphiql-horizontal-drag-bar" })
              ),
              import_react98.default.createElement(
                "div",
                { ref: editorResize.secondRef },
                import_react98.default.createElement(
                  "div",
                  { className: "graphiql-response" },
                  executionContext.isFetching ? import_react98.default.createElement(qt2, null) : null,
                  import_react98.default.createElement(Mo, { editorTheme: props.editorTheme, responseTooltip: props.responseTooltip, keyMap: props.keyMap }),
                  footer
                )
              )
            )
          )
        )
      ),
      import_react98.default.createElement(
        ol,
        { open: showDialog === "short-keys", onOpenChange: handleOpenShortKeysDialog },
        import_react98.default.createElement(
          "div",
          { className: "graphiql-dialog-header" },
          import_react98.default.createElement(ol.Title, { className: "graphiql-dialog-title" }, "Short Keys"),
          import_react98.default.createElement(ol.Close, null)
        ),
        import_react98.default.createElement(
          "div",
          { className: "graphiql-dialog-section" },
          import_react98.default.createElement(ShortKeys, { keyMap: props.keyMap || "sublime" })
        )
      ),
      import_react98.default.createElement(
        ol,
        { open: showDialog === "settings", onOpenChange: handleOpenSettingsDialog },
        import_react98.default.createElement(
          "div",
          { className: "graphiql-dialog-header" },
          import_react98.default.createElement(ol.Title, { className: "graphiql-dialog-title" }, "Settings"),
          import_react98.default.createElement(ol.Close, null)
        ),
        props.showPersistHeadersSettings ? import_react98.default.createElement(
          "div",
          { className: "graphiql-dialog-section" },
          import_react98.default.createElement(
            "div",
            null,
            import_react98.default.createElement("div", { className: "graphiql-dialog-section-title" }, "Persist headers"),
            import_react98.default.createElement(
              "div",
              { className: "graphiql-dialog-section-caption" },
              "Save headers upon reloading.",
              " ",
              import_react98.default.createElement("span", { className: "graphiql-warning-text" }, "Only enable if you trust this device.")
            )
          ),
          import_react98.default.createElement(
            qr,
            null,
            import_react98.default.createElement(Fe5, { type: "button", id: "enable-persist-headers", className: editorContext.shouldPersistHeaders ? "active" : "", "data-value": "true", onClick: handlePersistHeaders }, "On"),
            import_react98.default.createElement(Fe5, { type: "button", id: "disable-persist-headers", className: editorContext.shouldPersistHeaders ? "" : "active", onClick: handlePersistHeaders }, "Off")
          )
        ) : null,
        import_react98.default.createElement(
          "div",
          { className: "graphiql-dialog-section" },
          import_react98.default.createElement(
            "div",
            null,
            import_react98.default.createElement("div", { className: "graphiql-dialog-section-title" }, "Theme"),
            import_react98.default.createElement("div", { className: "graphiql-dialog-section-caption" }, "Adjust how the interface looks like.")
          ),
          import_react98.default.createElement(
            "div",
            null,
            import_react98.default.createElement(
              qr,
              null,
              import_react98.default.createElement(Fe5, { type: "button", className: theme === null ? "active" : "", onClick: handleChangeTheme }, "System"),
              import_react98.default.createElement(Fe5, { type: "button", className: theme === "light" ? "active" : "", "data-theme": "light", onClick: handleChangeTheme }, "Light"),
              import_react98.default.createElement(Fe5, { type: "button", className: theme === "dark" ? "active" : "", "data-theme": "dark", onClick: handleChangeTheme }, "Dark")
            )
          )
        ),
        storageContext ? import_react98.default.createElement(
          "div",
          { className: "graphiql-dialog-section" },
          import_react98.default.createElement(
            "div",
            null,
            import_react98.default.createElement("div", { className: "graphiql-dialog-section-title" }, "Clear storage"),
            import_react98.default.createElement("div", { className: "graphiql-dialog-section-caption" }, "Remove all locally stored data and start fresh.")
          ),
          import_react98.default.createElement(
            "div",
            null,
            import_react98.default.createElement(Fe5, { type: "button", state: clearStorageStatus || void 0, disabled: clearStorageStatus === "success", onClick: handleClearData }, clearStorageStatus === "success" ? "Cleared data" : clearStorageStatus === "error" ? "Failed" : "Clear data")
          )
        ) : null
      )
    )
  );
}
var modifier = typeof window !== "undefined" && window.navigator.platform.toLowerCase().indexOf("mac") === 0 ? "Cmd" : "Ctrl";
var SHORT_KEYS = Object.entries({
  "Search in editor": [modifier, "F"],
  "Search in documentation": [modifier, "K"],
  "Execute query": [modifier, "Enter"],
  "Prettify editors": ["Ctrl", "Shift", "P"],
  "Merge fragments definitions into operation definition": [
    "Ctrl",
    "Shift",
    "M"
  ],
  "Copy query": ["Ctrl", "Shift", "C"],
  "Re-fetch schema using introspection": ["Ctrl", "Shift", "R"]
});
function ShortKeys(_a) {
  var keyMap = _a.keyMap;
  return import_react98.default.createElement(
    "div",
    null,
    import_react98.default.createElement(
      "table",
      { className: "graphiql-table" },
      import_react98.default.createElement(
        "thead",
        null,
        import_react98.default.createElement(
          "tr",
          null,
          import_react98.default.createElement("th", null, "Short Key"),
          import_react98.default.createElement("th", null, "Function")
        )
      ),
      import_react98.default.createElement("tbody", null, SHORT_KEYS.map(function(_a2) {
        var _b = __read2(_a2, 2), title = _b[0], keys = _b[1];
        return import_react98.default.createElement(
          "tr",
          { key: title },
          import_react98.default.createElement("td", null, keys.map(function(key, index2, array) {
            return import_react98.default.createElement(
              import_react98.Fragment,
              { key },
              import_react98.default.createElement("code", { className: "graphiql-key" }, key),
              index2 !== array.length - 1 && " + "
            );
          })),
          import_react98.default.createElement("td", null, title)
        );
      }))
    ),
    import_react98.default.createElement(
      "p",
      null,
      "The editors use",
      " ",
      import_react98.default.createElement("a", { href: "https://codemirror.net/5/doc/manual.html#keymaps", target: "_blank", rel: "noopener noreferrer" }, "CodeMirror Key Maps"),
      " ",
      "that add more short keys. This instance of Graph",
      import_react98.default.createElement("em", null, "i"),
      "QL uses",
      " ",
      import_react98.default.createElement("code", null, keyMap),
      "."
    )
  );
}
function GraphiQLLogo(props) {
  return import_react98.default.createElement("div", { className: "graphiql-logo" }, props.children || import_react98.default.createElement(
    "a",
    { className: "graphiql-logo-link", href: "https://github.com/graphql/graphiql", target: "_blank", rel: "noreferrer" },
    "Graph",
    import_react98.default.createElement("em", null, "i"),
    "QL"
  ));
}
GraphiQLLogo.displayName = "GraphiQLLogo";
function GraphiQLToolbar(props) {
  return import_react98.default.createElement(import_react98.default.Fragment, null, props.children);
}
GraphiQLToolbar.displayName = "GraphiQLToolbar";
function GraphiQLFooter(props) {
  return import_react98.default.createElement("div", { className: "graphiql-footer" }, props.children);
}
GraphiQLFooter.displayName = "GraphiQLFooter";
function isChildComponentType(child, component) {
  var _a;
  if (((_a = child === null || child === void 0 ? void 0 : child.type) === null || _a === void 0 ? void 0 : _a.displayName) && child.type.displayName === component.displayName) {
    return true;
  }
  return child.type === component;
}
export {
  GraphiQL,
  GraphiQLInterface,
  il as GraphiQLProvider,
  GraphiQL as default
};
/*! Bundled license information:

is-primitive/index.js:
  (*!
   * is-primitive <https://github.com/jonschlinkert/is-primitive>
   *
   * Copyright (c) 2014-present, Jon Schlinkert.
   * Released under the MIT License.
   *)

isobject/index.js:
  (*!
   * isobject <https://github.com/jonschlinkert/isobject>
   *
   * Copyright (c) 2014-2017, Jon Schlinkert.
   * Released under the MIT License.
   *)

is-plain-object/index.js:
  (*!
   * is-plain-object <https://github.com/jonschlinkert/is-plain-object>
   *
   * Copyright (c) 2014-2017, Jon Schlinkert.
   * Released under the MIT License.
   *)

set-value/index.js:
  (*!
   * set-value <https://github.com/jonschlinkert/set-value>
   *
   * Copyright (c) Jon Schlinkert (https://github.com/jonschlinkert).
   * Released under the MIT License.
   *)
*/
//# sourceMappingURL=graphiql.js.map
