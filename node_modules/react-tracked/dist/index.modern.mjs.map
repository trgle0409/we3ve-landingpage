{"version":3,"file":"index.modern.mjs","sources":["../src/utils.ts","../src/createTrackedSelector.ts","../src/createContainer.ts","../src/memo.ts"],"sourcesContent":["import { useEffect, useRef, useDebugValue } from 'react';\nimport { affectedToPathList } from 'proxy-compare';\n\ntype Obj = Record<string, unknown>;\n\nexport const useAffectedDebugValue = <State>(\n  state: State,\n  affected: WeakMap<Obj, unknown>,\n) => {\n  const pathList = useRef<(string | number | symbol)[][]>();\n  useEffect(() => {\n    pathList.current = affectedToPathList(state, affected);\n  });\n  useDebugValue(state);\n};\n","import {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n} from 'react';\nimport { createProxy, isChanged } from 'proxy-compare';\n\nimport { useAffectedDebugValue } from './utils';\n\nexport const createTrackedSelector = <State>(\n  useSelector: <Selected>(selector: (state: State) => Selected) => Selected,\n) => {\n  const useTrackedSelector = () => {\n    const [, forceUpdate] = useReducer((c) => c + 1, 0);\n    const affected = new WeakMap();\n    const lastAffected = useRef<typeof affected>();\n    const prevState = useRef<State>();\n    const lastState = useRef<State>();\n    useEffect(() => {\n      lastAffected.current = affected;\n      if (prevState.current !== lastState.current\n        && isChanged(\n          prevState.current,\n          lastState.current,\n          affected,\n          new WeakMap(),\n        )) {\n        prevState.current = lastState.current;\n        forceUpdate();\n      }\n    });\n    const selector = useCallback((nextState: State) => {\n      lastState.current = nextState;\n      if (prevState.current\n        && prevState.current !== nextState\n        && lastAffected.current\n        && !isChanged(\n          prevState.current,\n          nextState,\n          lastAffected.current,\n          new WeakMap(),\n        )\n      ) {\n        // not changed\n        return prevState.current;\n      }\n      prevState.current = nextState;\n      return nextState;\n    }, []);\n    const state = useSelector(selector);\n    if (typeof process === 'object' && process.env.NODE_ENV !== 'production') {\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      useAffectedDebugValue(state, affected);\n    }\n    const proxyCache = useMemo(() => new WeakMap(), []); // per-hook proxyCache\n    return createProxy(state, affected, proxyCache);\n  };\n  return useTrackedSelector;\n};\n","/* eslint react/destructuring-assignment: off */\n\nimport {\n  ComponentType,\n  Context as ContextOrig,\n  ReactNode,\n  createContext as createContextOrig,\n  createElement,\n  useCallback,\n  useContext as useContextOrig,\n  useDebugValue,\n} from 'react';\n\nimport {\n  Context,\n  createContext,\n  useContextSelector,\n  useContextUpdate,\n} from 'use-context-selector';\n\nimport { createTrackedSelector } from './createTrackedSelector';\n\ntype AnyFunction = (...args: any[]) => any;\ntype Options<State, Update extends AnyFunction> = {\n  defaultState?: State;\n  defaultUpdate?: Update;\n  stateContextName?: string;\n  updateContextName?: string;\n  concurrentMode?: boolean;\n}\n/**\n * [Deprecated] Please use object option\n */\ntype DeprecatedOption = boolean\n\nexport const createContainer = <State, Update extends AnyFunction, Props>(\n  useValue: (props: Props) => readonly [State, Update],\n  options?: Options<State, Update> | DeprecatedOption,\n) => {\n  if (typeof options === 'boolean') {\n    // eslint-disable-next-line no-console\n    console.warn('boolean option is deprecated, please specify { concurrentMode: true }');\n    options = { concurrentMode: options };\n  }\n  const {\n    stateContextName = 'StateContainer',\n    updateContextName = 'UpdateContainer',\n    concurrentMode,\n  } = options || {};\n  const StateContext = createContext<State | undefined>(options?.defaultState);\n  const UpdateContext = createContextOrig<Update | undefined>(options?.defaultUpdate);\n  StateContext.displayName = stateContextName;\n  UpdateContext.displayName = updateContextName;\n\n  const Provider = (props: Props & { children: ReactNode }) => {\n    const [state, update] = useValue(props);\n    return createElement(\n      UpdateContext.Provider,\n      { value: update },\n      createElement(StateContext.Provider as ComponentType<{\n        value: State;\n      }>, { value: state }, props.children),\n    );\n  };\n\n  const useSelector = <Selected>(\n    selector: (state: State) => Selected,\n  ) => {\n    if (\n      typeof process === 'object'\n      && process.env.NODE_ENV !== 'production'\n    ) {\n      const selectorOrig = selector;\n      selector = (state: State) => {\n        if (state === undefined) {\n          throw new Error('Please use <Provider>');\n        }\n        return selectorOrig(state);\n      };\n    }\n    const selected = useContextSelector(StateContext as Context<State>, selector);\n    useDebugValue(selected);\n    return selected;\n  };\n\n  const useTrackedState = createTrackedSelector(useSelector);\n\n  const useUpdate = concurrentMode\n    ? () => {\n      if (\n        typeof process === 'object'\n        && process.env.NODE_ENV !== 'production'\n        && useContextOrig(UpdateContext) === undefined\n      ) {\n        throw new Error('Please use <Provider>');\n      }\n      const contextUpdate = useContextUpdate(StateContext as Context<unknown>);\n      const update = useContextOrig(UpdateContext as ContextOrig<Update>);\n      return useCallback((...args: Parameters<Update>) => {\n        let result: ReturnType<Update> | undefined;\n        contextUpdate(() => {\n          result = update(...args);\n        });\n        return result as ReturnType<Update>;\n      }, [contextUpdate, update]);\n    }\n    // not concurrentMode\n    : () => {\n      if (\n        typeof process === 'object'\n        && process.env.NODE_ENV !== 'production'\n        && useContextOrig(UpdateContext) === undefined\n      ) {\n        throw new Error('Please use <Provider>');\n      }\n      return useContextOrig(UpdateContext as ContextOrig<Update>);\n    };\n\n  const useTracked = () => [useTrackedState(), useUpdate()] as [\n    ReturnType<typeof useTrackedState>,\n    ReturnType<typeof useUpdate>,\n  ];\n\n  return {\n    Provider,\n    useTrackedState,\n    useTracked,\n    useUpdate,\n    useSelector,\n  } as const;\n};\n","import { createElement, memo as reactMemo, forwardRef } from 'react';\nimport { trackMemo } from 'proxy-compare';\n\nimport type {\n  PropsWithChildren,\n  NamedExoticComponent,\n  ComponentType,\n  ComponentProps,\n  MemoExoticComponent,\n} from 'react';\n\nexport function memo<P extends Record<string, unknown>>(\n  Component: ComponentType<P>,\n  propsAreEqual?: (\n    prevProps: Readonly<PropsWithChildren<P>>,\n    nextProps: Readonly<PropsWithChildren<P>>,\n  ) => boolean,\n): NamedExoticComponent<P>;\n\nexport function memo<T extends ComponentType<any>>(\n  Component: T,\n  propsAreEqual?: (\n    prevProps: Readonly<ComponentProps<T>>,\n    nextProps: Readonly<ComponentProps<T>>,\n  ) => boolean,\n): MemoExoticComponent<T>;\n\nexport function memo(Component: any, propsAreEqual?: any) {\n  const WrappedComponent = forwardRef((props: any, ref: any) => {\n    Object.values(props).forEach(trackMemo);\n    return createElement(Component, { ...props, ref });\n  });\n  return reactMemo(WrappedComponent, propsAreEqual);\n}\n"],"names":["useAffectedDebugValue","state","affected","pathList","useRef","useEffect","current","affectedToPathList","useDebugValue","createTrackedSelector","useSelector","useTrackedSelector","forceUpdate","useReducer","c","WeakMap","lastAffected","prevState","lastState","isChanged","selector","useCallback","nextState","process","env","NODE_ENV","proxyCache","useMemo","createProxy","createContainer","useValue","options","_options","_options2","console","warn","concurrentMode","stateContextName","updateContextName","StateContext","createContext","defaultState","UpdateContext","createContextOrig","defaultUpdate","displayName","Provider","props","update","createElement","value","children","selectorOrig","undefined","Error","selected","useContextSelector","useTrackedState","useUpdate","useContextOrig","contextUpdate","useContextUpdate","args","result","useTracked","memo","Component","propsAreEqual","WrappedComponent","forwardRef","ref","Object","values","forEach","trackMemo","_extends","reactMemo"],"mappings":"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"}